name: DÃ©ploiement
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [master, demo, next]

  # We display the release notes in the "news" section of mon-entreprise.urssaf.fr so
  # we want to re-deploy the site when a new release is published or edited on
  # GitHub.
  release:
    types: [published, edited]

  # The /stats data is generated during the build. To keep the daily data fresh,
  # we relaunch a nightly full build of the app
  schedule:
    - cron: '0 4 * * *'

jobs:
  deploy-context:
    runs-on: ubuntu-18.04
    outputs:
      env-name: ${{ steps.deploy-env.outputs.name }}
      fr_url: ${{ steps.base-urls.outputs.fr }}
      en_url: ${{ steps.base-urls.outputs.en }}
    steps:
      - id: deploy-env
        run: echo "::set-output name=name::${{ github.event.number || '${GITHUB_REF#refs/*/}' }}"
      - id: base-urls
        run:
          echo "::set-output name=fr::${{ steps.deploy-env.outputs.name == 'master' && 'https://mon-entreprise.urssaf.fr' || format('https://{0}--mon-entreprise.netlify.app', steps.deploy-env.outputs.name) }}";
          echo "::set-output name=en::${{ steps.deploy-env.outputs.name == 'master' && 'https://mycompanyinfrance.fr' || format('https://{0}-en--mon-entreprise.netlify.app', steps.deploy-env.outputs.name) }}";

  build:
    needs: deploy-context
    env:
      FR_BASE_URL: ${{ needs.deploy-context.outputs.fr_url }}
      EN_BASE_URL: ${{ needs.deploy-context.outputs.en_url }}
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-v2
      - run: yarn install --frozen-lockfile
        env:
          # Secrets of all kinds for fetching stats & releases
          GITHUB_API_SECRET: ${{ secrets.GITHUB_TOKEN }}
          ZAMMAD_API_SECRET_KEY: ${{ secrets.ZAMMAD_API_SECRET_KEY }}
          ATINTERNET_API_SECRET_KEY: ${{ secrets.ATINTERNET_API_SECRET_KEY }}
          ATINTERNET_API_ACCESS_KEY: ${{ secrets.ATINTERNET_API_ACCESS_KEY }}
      - name: Build app
        run: yarn workspace site build
        env:
          AT_INTERNET_SITE_ID: ${{ needs.deploy-context.outputs.env-name == 'master' && 617190 || 617189 }}
          NODE_ENV: production
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_SEARCH_KEY: ${{secrets.ALGOLIA_SEARCH_KEY}}
          ALGOLIA_INDEX_PREFIX: monentreprise-${{needs.deploy-context.outputs.env-name}}-
      - name: Replace site placeholders in netlify.toml redirection file
        run: sed -i "s|:SITE_FR|$FR_BASE_URL|g" netlify.toml;
          sed -i "s|:SITE_EN|$EN_BASE_URL|g" netlify.toml;
      - name: Update Algolia index
        run: yarn workspace site algolia:update
        env:
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
          ALGOLIA_SEARCH_KEY: ${{secrets.ALGOLIA_SEARCH_KEY}}
          ALGOLIA_INDEX_PREFIX: monentreprise-${{needs.deploy-context.outputs.env-name}}-
      - uses: actions/upload-artifact@v2
        with:
          name: static-site
          path: |
            site/dist/**
            netlify.toml
          if-no-files-found: error

  deploy-preview:
    needs: [build, deploy-context]
    runs-on: ubuntu-18.04
    if: needs.deploy-context.outputs.env-name != 'master'
    strategy:
      matrix:
        site: ['', 'en']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: static-site
      - id: deploy-netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './site/dist'
          netlify-config-path: ./netlify.toml
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-commit-status: true
          enable-commit-comment: false
          github-deployment-environment: ${{ needs.deploy-context.outputs.env-name }}
          alias: ${{ needs.deploy-context.outputs.env-name }}${{ matrix.site && format('-{0}', matrix.site) }}
          deploy-message: ${{ github.event.pull_request.title || needs.deploy-context.outputs.env-name }} (${{ matrix.site || 'fr' }})

          # Disabled because we create our own customized comment
          enable-pull-request-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

  deploy-prod:
    needs: [build, deploy-context]
    runs-on: ubuntu-18.04
    if: needs.deploy-context.outputs.env-name == 'master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: static-site
      - id: deploy-netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './site/dist'
          netlify-config-path: ./netlify.toml
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-commit-status: true
          enable-commit-comment: false
          github-deployment-environment: master
          deploy-message: Deploy production branch
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

  post-comment:
    runs-on: ubuntu-18.04
    if: github.event_name == 'pull_request'
    needs: [deploy-preview, deploy-context]
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }} #e.g. 1
          comment-author: 'github-actions[bot]'
          body-includes: netlify
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ðŸš€ La branche est dÃ©ployÃ©e !

            - mon-entreprise : ${{ needs.deploy-context.outputs.fr_url }}
            - mycompanyinfrance : ${{ needs.deploy-context.outputs.en_url }}

  e2e-test-preview:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
    runs-on: ubuntu-20.04
    # We need to specify always() https://github.com/actions/runner/issues/491
    if: always() && needs.deploy-preview.result == 'success'
    needs: [deploy-context, deploy-preview]

    strategy:
      fail-fast: false
      matrix:
        site: ['fr', 'en']
        browser: [electron] # Firefox is very slowâ€¦
        viewport: [default]
        container: [1, 2, 3, 4]
        include:
          - site: fr
            integrationFolder: mon-entreprise
            baseUrl: ${{ needs.deploy-context.outputs.fr_url }}
            language: fr
          - site: fr
            integrationFolder: mon-entreprise
            baseUrl: ${{ needs.deploy-context.outputs.fr_url }}
            language: fr
          - site: en
            integrationFolder: mon-entreprise/english
            baseUrl: ${{ needs.deploy-context.outputs.en_url }}
            language: en
        exclude:
          - site: en
            container: 2
          - site: en
            container: 3
          - site: en
            container: 4
          - site: en
            viewport: small

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        # Custom cache as we do not care about installing all the other dependancies
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('package-lock.json', 'package.json') }}

      - run: node site/scripts/get-cypress-packages.js | xargs npm i --legacy-peer-deps

      - name: Test e2e mon-entreprise on preview (site=${{ matrix.site }}, browser=${{ matrix.browser}}, viewport=${{ matrix.viewport }})
        uses: cypress-io/github-action@v2
        with:
          install: false
          working-directory: site
          record: true
          tag: ${{ needs.deploy-context.outputs.env-name }}_deploy
          config: integrationFolder=cypress/integration/${{ matrix.integrationFolder }},baseUrl=${{ matrix.baseUrl }}${{ matrix.viewport == 'small' && ',viewportHeight=740,viewportWidth=360' || '' }}
          env: language=${{ matrix.language }}
          browser: ${{ matrix.browser }}
          headless: true
          parallel: true
          group: ${{ matrix.site }}-${{ matrix.browser }}-viewport_${{ matrix.viewport }}
        env:
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}

  e2e-test-production:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
    runs-on: ubuntu-20.04
    # We need to specify always() https://github.com/actions/runner/issues/491
    if: always() && needs.deploy-prod.result == 'success'
    needs: [deploy-context, deploy-prod]

    strategy:
      fail-fast: false
      matrix:
        # site: ['fr', 'en']
        site: ['fr']
        browser: [chrome] # Firefox is very slowâ€¦
        viewport: [default, small]
        container: [1, 2, 3, 4]
        include:
          - site: fr
            integrationFolder: mon-entreprise
            baseUrl: ${{ needs.deploy-context.outputs.fr_url }}
            language: fr
        #   - site: en
        #     integrationFolder: mon-entreprise/english
        #     baseUrl: ${{ needs.deploy-context.outputs.en_url }}
        #     language: en
        # exclude:
        #   - site: en
        #     container: 2
        #   - site: en
        #     container: 3
        #   - site: en
        #     container: 4
        #   - site: en
        #     viewport: small

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        # Custom cache as we do not care about installing all the other dependancies
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('package-lock.json', 'package.json') }}

      - run: node site/scripts/get-cypress-packages.js | xargs npm i --legacy-peer-deps

      - name: Test e2e mon-entreprise on production (site=${{ matrix.site }}, browser=${{ matrix.browser}}, viewport=${{ matrix.viewport }})
        uses: cypress-io/github-action@v2
        with:
          install: false
          working-directory: site
          record: true
          tag: ${{ needs.deploy-context.outputs.env-name }}_deploy
          config: integrationFolder=cypress/integration/${{ matrix.integrationFolder }},baseUrl=${{ matrix.baseUrl }}${{ matrix.viewport == 'small' && ',viewportHeight=740,viewportWidth=360' || '' }}
          env: language=${{ matrix.language }}
          browser: ${{ matrix.browser }}
          headless: true
          parallel: true
          group: ${{ matrix.site }}-${{ matrix.browser }}-viewport_${{ matrix.viewport }}
        env:
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
