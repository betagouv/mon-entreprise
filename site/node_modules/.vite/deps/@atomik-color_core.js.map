{
  "version": 3,
  "sources": ["../../../../node_modules/@atomik-color/core/src/utils/keys.ts", "../../../../node_modules/@atomik-color/core/src/utils/clamp.ts", "../../../../node_modules/@atomik-color/core/src/hooks/preventScroll.ts", "../../../../node_modules/@atomik-color/core/src/hooks/useSlider.ts", "../../../../node_modules/node_modules/tslib/tslib.es6.js", "../../../../node_modules/@atomik-color/core/src/hooks/useAlphaSlider.ts", "../../../../node_modules/@atomik-color/core/src/color/constants.ts", "../../../../node_modules/@atomik-color/core/src/color/utils.ts", "../../../../node_modules/@atomik-color/core/src/utils/isValidNum.ts", "../../../../node_modules/@atomik-color/core/src/color/converters.ts", "../../../../node_modules/@atomik-color/core/src/hooks/useColorState.tsx", "../../../../node_modules/@atomik-color/core/src/hooks/useColorBoard.ts", "../../../../node_modules/@atomik-color/core/src/hooks/useHueSlider.ts", "../../../../node_modules/@atomik-color/core/src/color/cssColor.ts", "../../../../node_modules/@atomik-color/core/src/color/str2Color.ts"],
  "sourcesContent": ["enum Keys {\n  PageUp = \"PageUp\",\n  PageDown = \"PageDown\",\n  End = \"End\",\n  Home = \"Home\",\n  ArrowLeft = \"ArrowLeft\",\n  ArrowUp = \"ArrowUp\",\n  ArrowRight = \"ArrowRight\",\n  ArrowDown = \"ArrowDown\",\n  Tab = \"Tab\",\n}\n\nexport default Keys;\n", "export function clamp(value: number = 0, max: number, min = 0): number {\n  return value < min ? min : value > max ? max : value;\n}\n", "export const preventScroll = () => {\n  const handleTouchMove = (e: TouchEvent) => {\n    e.preventDefault();\n  };\n\n  window.addEventListener(\"touchmove\", handleTouchMove, {\n    passive: false,\n    capture: true,\n  });\n\n  return () => {\n    window.removeEventListener(\"touchmove\", handleTouchMove, { capture: true });\n  };\n};\n", "import {\n  HTMLAttributes,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n} from \"react\";\nimport Key from \"../utils/keys\";\nimport { clamp } from \"../utils/clamp\";\nimport { preventScroll } from \"./preventScroll\";\n\nconst calculateX = (\n  e: PointerEvent,\n  rectSize: DOMRect,\n  max: number,\n  min: number\n) => {\n  let x = (e.clientX - rectSize.left) / rectSize.width;\n  x = clamp(Math.round(x * max), max, min);\n  return x;\n};\n\nconst calculateY = (\n  e: PointerEvent,\n  rectSize: DOMRect,\n  max: number,\n  min: number\n) => {\n  let y = (e.clientY - rectSize.top) / rectSize.height;\n  y = clamp(Math.round(y * max), max, min);\n  return y;\n};\n\ntype Direction =\n  | {\n      direction?: \"horizontal\" | \"vertical\";\n      onChange?: (value: number) => void;\n    }\n  | {\n      direction?: \"both\";\n      onChange?: ({ x, y }: { x: number; y: number }) => void;\n    };\n\nexport type UseSliderProps = Direction & {\n  ref: RefObject<HTMLElement>;\n  maxValue?: number;\n  minValue?: number;\n  onStep?: (amount: number) => void;\n  ariaLabel?: string;\n  ariaValueNow?: number;\n  ariaValueText?: string;\n  step?: number;\n  bigStep?: number;\n};\n\ntype UseSlider = (props: UseSliderProps) => {\n  sliderProps: HTMLAttributes<HTMLElement>;\n};\n\nconst useSlider: UseSlider = ({\n  ref,\n  onStep,\n  ariaLabel,\n  ariaValueNow,\n  ariaValueText,\n  maxValue = 100,\n  minValue = 0,\n  step = 1,\n  bigStep = 10,\n  ...props\n}) => {\n  const restoreScrollRef = useRef<() => void>(() => {});\n\n  // Restore scroll before unmounting\n  useEffect(() => restoreScrollRef.current, []);\n\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    // Allow users to tab out. Don't prevent default if Tab is pressed\n    if (event.key !== Key.Tab) {\n      event.preventDefault();\n    }\n    let amount: number = event.shiftKey ? bigStep : step;\n\n    switch (event.key) {\n      case Key.ArrowLeft:\n      case Key.ArrowDown: {\n        onStep?.(-amount);\n        break;\n      }\n      case Key.ArrowRight:\n      case Key.ArrowUp: {\n        onStep?.(amount);\n        break;\n      }\n      case Key.Home: {\n        if (\n          props.direction === \"vertical\" ||\n          props.direction === \"horizontal\"\n        ) {\n          props.onChange?.(minValue);\n        }\n        break;\n      }\n      case Key.End: {\n        if (\n          props.direction === \"vertical\" ||\n          props.direction === \"horizontal\"\n        ) {\n          props.onChange?.(maxValue);\n        }\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  };\n\n  const onPointerMove = useCallback(\n    (event: PointerEvent) => {\n      if (!ref.current || typeof props.onChange !== \"function\") {\n        return;\n      }\n      event.preventDefault();\n      const rectSize = ref.current.getBoundingClientRect();\n\n      if (props.direction === \"both\") {\n        let x = calculateX(event, rectSize, maxValue, minValue);\n        let y = calculateY(event, rectSize, maxValue, minValue);\n        return props.onChange({ x, y });\n      }\n      if (props.direction === \"horizontal\") {\n        let x = calculateX(event, rectSize, maxValue, minValue);\n        return props.onChange(x);\n      }\n      if (props.direction === \"vertical\") {\n        let y = calculateY(event, rectSize, maxValue, minValue);\n        return props.onChange(y);\n      }\n    },\n    [props.direction, props.onChange]\n  );\n\n  const onPointerDown = useCallback(\n    (event: React.PointerEvent) => {\n      if (!ref.current) {\n        return;\n      }\n      event.preventDefault();\n      restoreScrollRef.current = preventScroll();\n\n      ref.current.focus();\n      ref.current.onpointermove = onPointerMove;\n      ref.current?.setPointerCapture(event.pointerId);\n\n      onPointerMove(event as any);\n    },\n    [onPointerMove]\n  );\n\n  const onPointerUp = useCallback((event: React.PointerEvent) => {\n    if (!ref.current) {\n      return;\n    }\n    ref.current.onpointermove = null;\n    ref.current.releasePointerCapture(event.pointerId);\n\n    restoreScrollRef.current();\n    restoreScrollRef.current = () => {};\n  }, []);\n\n  return {\n    sliderProps: {\n      tabIndex: 0,\n      onPointerDown,\n      onPointerUp,\n      onKeyDown,\n      onPointerCancel: onPointerUp,\n      role: \"slider\",\n      \"aria-valuemin\": minValue,\n      \"aria-valuemax\": maxValue,\n      \"aria-label\": ariaLabel,\n      \"aria-valuenow\": ariaValueNow,\n      \"aria-valuetext\": ariaValueText,\n    },\n  };\n};\n\nexport default useSlider;\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "import { HTMLAttributes, RefObject } from \"react\";\nimport { ALPHA_MAX } from \"../color/constants\";\nimport { ColorState } from \"./useColorState\";\nimport useSlider from \"./useSlider\";\n\ntype UseAlphaSliderProps = {\n  state: ColorState;\n  ref: RefObject<HTMLElement>;\n};\n\ntype UseAlphaSlider = (\n  props: UseAlphaSliderProps\n) => {\n  sliderProps: HTMLAttributes<HTMLElement>;\n};\n\nconst useAlphaSlider: UseAlphaSlider = ({ state, ref }) => {\n  const { sliderProps } = useSlider({\n    ref,\n    direction: \"horizontal\",\n    onChange: (x) => state.setA(x),\n    onStep: (amount) => state.rotateA(amount),\n    maxValue: ALPHA_MAX,\n    ariaLabel: \"Alpha slider\",\n    ariaValueNow: state.color.a,\n    ariaValueText: String(state.color.a),\n  });\n  return { sliderProps };\n};\n\nexport default useAlphaSlider;\n", "export const RGB_MAX = 255;\nexport const HUE_MAX = 359;\nexport const SV_MAX = 100;\nexport const ALPHA_MAX = 100;\n", "import { HSV, RGB } from \"../types\";\nimport { clamp } from \"../utils/clamp\";\nimport { isValidNum } from \"../utils/isValidNum\";\nimport { ALPHA_MAX, HUE_MAX, RGB_MAX, SV_MAX } from \"./constants\";\n\nexport const normalizeHsv = ({ h, s, v }: HSV): HSV => ({\n  h: clamp(h, HUE_MAX, 0),\n  s: clamp(s, SV_MAX, 0),\n  v: clamp(v, SV_MAX, 0),\n});\n\nexport const normalizeRgb = ({ r, g, b }: RGB): RGB => ({\n  r: clamp(r, RGB_MAX, 0),\n  g: clamp(g, RGB_MAX, 0),\n  b: clamp(b, RGB_MAX, 0),\n});\n\nexport const isValidColorValue = (value: any, max: number, min: number = 0) => {\n  return isValidNum(value) && value >= min && value <= max;\n};\n\nexport const isValidRGBValue = (value: any) =>\n  isValidColorValue(value, RGB_MAX);\n\nexport const isValidAlpha = (value: any) => isValidColorValue(value, ALPHA_MAX);\n\nexport const isValidHex = (hex: any) =>\n  /(^#{0,1}[0-9A-F]{6}$)|(^#{0,1}[0-9A-F]{3}$)/i.test(hex);\n", "export const isValidNum = (value: any) =>\n  typeof value === \"number\" && isNaN(value) === false;\n", "import { HSL, HSV, RGB, RGBA } from \"../types\";\nimport { clamp } from \"../utils/clamp\";\nimport { ALPHA_MAX } from \"./constants\";\nimport { isValidHex, normalizeHsv, normalizeRgb } from \"./utils\";\n\nexport const hsv2Rgb = (hsv: HSV) => {\n  const { h, s, v } = normalizeHsv(hsv);\n  let sat = s / 100;\n  let value = v / 100;\n  let C = sat * value;\n  let H = h / 60;\n  let X = C * (1 - Math.abs((H % 2) - 1));\n  let m = value - C;\n  let precision = 255;\n\n  C = ((C + m) * precision) | 0;\n  X = ((X + m) * precision) | 0;\n  m = (m * precision) | 0;\n\n  if (H >= 0 && H < 1) {\n    return { r: C, g: X, b: m };\n  }\n  if (H >= 1 && H < 2) {\n    return { r: X, g: C, b: m };\n  }\n  if (H >= 2 && H < 3) {\n    return { r: m, g: C, b: X };\n  }\n  if (H >= 3 && H < 4) {\n    return { r: m, g: X, b: C };\n  }\n  if (H >= 4 && H < 5) {\n    return { r: X, g: m, b: C };\n  }\n  if (H >= 5 && H < 6) {\n    return { r: C, g: m, b: X };\n  }\n  return { r: 0, g: 0, b: 0 };\n};\n\nexport const hsv2Hex = ({ h, s, v }: HSV) => {\n  let { r, g, b } = hsv2Rgb({ h, s, v });\n  return rgb2Hex({ r, g, b });\n};\n\nexport const rgb2Hsv = (rgb: RGB) => {\n  const { r, g, b } = normalizeRgb(rgb);\n  let red = r / 255;\n  let green = g / 255;\n  let blue = b / 255;\n\n  let cmax = Math.max(red, green, blue);\n  let cmin = Math.min(red, green, blue);\n  let delta = cmax - cmin;\n  let h = 0;\n  let s = 0;\n  let v = 0;\n\n  if (delta) {\n    if (cmax === red) {\n      h = (green - blue) / delta;\n    }\n    if (cmax === green) {\n      h = 2 + (blue - red) / delta;\n    }\n    if (cmax === blue) {\n      h = 4 + (red - green) / delta;\n    }\n    if (cmax) s = delta / cmax;\n  }\n\n  h = (60 * h) | 0;\n  if (h < 0) h += 360;\n  s = (s * 100) | 0;\n  v = (cmax * 100) | 0;\n  return { h, s, v };\n};\n\nexport const rgb2Hsl = ({ r, g, b }: RGB) => {\n  let red = r / 255;\n  let green = g / 255;\n  let blue = b / 255;\n\n  let cmax = Math.max(red, green, blue);\n  let cmin = Math.min(red, green, blue);\n  let delta = cmax - cmin;\n  let h = 0;\n  let s = 0;\n  let l = (cmax + cmin) / 2;\n  let X = 1 - Math.abs(2 * l - 1);\n\n  if (delta) {\n    if (cmax === red) {\n      h = (green - blue) / delta;\n    }\n    if (cmax === green) {\n      h = 2 + (blue - red) / delta;\n    }\n    if (cmax === blue) {\n      h = 4 + (red - green) / delta;\n    }\n    if (cmax) s = delta / X;\n  }\n\n  h = (60 * h) | 0;\n  if (h < 0) h += 360;\n  s = (s * 100) | 0;\n  l = (l * 100) | 0;\n  return { h, s, l };\n};\n\nexport const rgb2Hex = ({ r, g, b }: RGB, withHash: boolean = true) => {\n  return (\n    (withHash ? \"#\" : \"\") +\n    ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)\n  );\n};\n\nexport const rgba2RgbStr = ({ r, g, b, a }: RGBA) => {\n  return typeof a === \"number\" && isNaN(a) === false\n    ? `rgba(${r}, ${g}, ${b}, ${clamp(a, ALPHA_MAX, 0) / 100})`\n    : `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const rgba2Str = (value: RGBA): string => {\n  return value.a < ALPHA_MAX ? rgba2RgbStr(value) : rgb2Hex(value);\n};\n\nexport const hsl2Rgb = ({ h, s, l }: HSL) => {\n  let sat = s / 100;\n  let light = l / 100;\n  let C = sat * (1 - Math.abs(2 * light - 1));\n  let H = h / 60;\n  let X = C * (1 - Math.abs((H % 2) - 1));\n  let m = light - C / 2;\n  let precision = 255;\n\n  C = ((C + m) * precision) | 0;\n  X = ((X + m) * precision) | 0;\n  m = (m * precision) | 0;\n  if (H >= 0 && H < 1) {\n    return { r: C, g: X, b: m };\n  }\n  if (H >= 1 && H < 2) {\n    return { r: X, g: C, b: m };\n  }\n  if (H >= 2 && H < 3) {\n    return { r: m, g: C, b: X };\n  }\n  if (H >= 3 && H < 4) {\n    return { r: m, g: X, b: C };\n  }\n  if (H >= 4 && H < 5) {\n    return { r: X, g: m, b: C };\n  }\n  if (H >= 5 && H < 6) {\n    return { r: C, g: m, b: X };\n  }\n  return { r: 0, g: 0, b: 0 };\n};\n\nexport const hex2Rgb = (hex: string, fallback: any = null) => {\n  if (isValidHex(hex) !== true) return fallback;\n\n  if (hex[0] === \"#\") hex = hex.slice(1, hex.length);\n\n  if (hex.length === 3)\n    hex = hex.replace(/([0-9A-F])([0-9A-F])([0-9A-F])/i, \"$1$1$2$2$3$3\");\n\n  let r = parseInt(hex.substr(0, 2), 16);\n  let g = parseInt(hex.substr(2, 2), 16);\n  let b = parseInt(hex.substr(4, 2), 16);\n  return {\n    r,\n    g,\n    b,\n  };\n};\n\nexport const hex2Hsv = (hex: string) => {\n  const rgb = hex2Rgb(hex) || { r: 0, g: 0, b: 0 };\n  return rgb2Hsv(rgb);\n};\n", "import { useEffect, useState } from \"react\";\nimport { clamp } from \"../utils/clamp\";\nimport {\n  hex2Rgb,\n  hsv2Hex,\n  hsv2Rgb,\n  rgb2Hex,\n  rgb2Hsv,\n  rgba2Str,\n} from \"../color/converters\";\nimport { ALPHA_MAX, HUE_MAX, SV_MAX } from \"../color/constants\";\nimport { RGB, RGBA, TColor } from \"../types\";\nimport {\n  isValidAlpha,\n  isValidColorValue,\n  isValidHex,\n  isValidRGBValue,\n} from \"../color/utils\";\n\nexport type UseColorProps = {\n  defaultValue?: TColor;\n  value?: TColor;\n  onChange?: (value: TColor) => void;\n};\n\nexport type UseColorState = (props: UseColorProps) => ColorState;\n\nexport type ColorState = {\n  color: TColor;\n  setS: (s: number) => void;\n  setV: (v: number) => void;\n  setA: (a: number) => void;\n  setH: (h: number) => void;\n  setR: (r: number) => void;\n  setG: (g: number) => void;\n  setB: (b: number) => void;\n  setSV: (s: number, v: number) => void;\n  setHex: (hex: string) => void;\n  toString: () => string;\n  getSolidColor: () => string;\n  rotateH: (amount: number) => void;\n  rotateS: (amount: number) => void;\n  rotateV: (amount: number) => void;\n  rotateA: (amount: number) => void;\n};\n\nconst initalColor = {\n  h: 0,\n  s: 50,\n  v: 50,\n  a: 100,\n  r: 128,\n  g: 64,\n  b: 64,\n  hex: \"804040\",\n  str: \"#804040\",\n};\n\nconst setRGBValue = (\n  setValue: React.Dispatch<React.SetStateAction<TColor>>,\n  channel: \"r\" | \"g\" | \"b\",\n  value: number\n) => {\n  if (!isValidRGBValue(value)) return;\n  setValue((prev) => {\n    const { r, g, b, a }: TColor = { ...prev, [channel]: value };\n    const { h, s, v } = rgb2Hsv({ r, g, b });\n    const hex = rgb2Hex({ r, g, b }, false);\n    const str = rgba2Str({ r, g, b, a });\n    return { r, g, b, a, h, s, v, hex, str };\n  });\n};\n\nconst setHSVValue = (\n  setValue: React.Dispatch<React.SetStateAction<TColor>>,\n  channel: \"h\" | \"s\" | \"v\",\n  value: number,\n  max: number = SV_MAX\n) => {\n  if (!isValidColorValue(value, max)) {\n    return;\n  }\n  setValue((prev) => {\n    const { h, s, v, a }: TColor = { ...prev, [channel]: value };\n    const { r, g, b } = hsv2Rgb({ h, s, v });\n    const hex = rgb2Hex({ r, g, b }, false);\n    const str = rgba2Str({ r, g, b, a });\n    return { h, s, v, r, g, b, a, hex, str };\n  });\n};\n\nconst rotateHSVValue = (\n  setValue: React.Dispatch<React.SetStateAction<TColor>>,\n  channel: \"h\" | \"s\" | \"v\",\n  amount: number,\n  max: number = SV_MAX\n) => {\n  setValue((prev) => {\n    const { h, s, v, a }: TColor = {\n      ...prev,\n      [channel]: clamp(prev[channel] + amount, max, 0),\n    };\n    const { r, g, b } = hsv2Rgb({ h, s, v });\n    const hex = rgb2Hex({ r, g, b }, false);\n    const str = rgba2Str({ r, g, b, a });\n    return { h, s, v, r, g, b, a, hex, str };\n  });\n};\n\nconst useColorState: UseColorState = (props) => {\n  const [color, setColorState] = useState<TColor>(\n    props.defaultValue || initalColor\n  );\n\n  useEffect(() => {\n    if (props.value) {\n      setColorState(props.value);\n    }\n  }, [props.value]);\n\n  const setValue: typeof setColorState = (value) => {\n    if (typeof props.onChange === \"function\") {\n      if (typeof props.value !== \"undefined\") {\n        props.onChange(typeof value === \"function\" ? value(color) : value);\n        // if value is provided then it's controlled\n        // so stop excuting and don't update the internal state\n        return;\n      }\n      props.onChange(typeof value === \"function\" ? value(color) : value);\n    }\n\n    setColorState(value);\n  };\n\n  const setH = (h: number) => setHSVValue(setValue, \"h\", h, HUE_MAX);\n\n  const setS = (s: number) => setHSVValue(setValue, \"s\", s);\n\n  const setV = (v: number) => setHSVValue(setValue, \"v\", v);\n\n  const setSV = (s: number, v: number) => {\n    if (!isValidColorValue(s, SV_MAX) && !isValidColorValue(v, SV_MAX)) {\n      return;\n    }\n    setValue((prev) => {\n      const { h, a } = prev;\n      const { r, g, b } = hsv2Rgb({ h, s, v });\n      const hex = rgb2Hex({ r, g, b }, false);\n      const str = rgba2Str({ r, g, b, a });\n      return { h, s, v, r, g, b, a, hex, str };\n    });\n  };\n\n  const setR = (r: number) => setRGBValue(setValue, \"r\", r);\n\n  const setG = (g: number) => setRGBValue(setValue, \"g\", g);\n\n  const setB = (b: number) => setRGBValue(setValue, \"b\", b);\n\n  const setA = (a: number) => {\n    if (!isValidAlpha(a)) return;\n    setValue((prev) => {\n      const updated = { ...prev, a };\n      updated.str = rgba2Str(updated);\n      return updated;\n    });\n  };\n\n  const setHex = (\n    hex: string,\n    fallback: RGB = { r: color.r, g: color.g, b: color.b }\n  ) => {\n    // if (!isValidHex(hex)) return;\n    setValue(({ a }) => {\n      const { r, g, b } = hex2Rgb(hex, fallback);\n      const { h, s, v } = rgb2Hsv({ r, g, b });\n      const str = rgba2Str({ r, g, b, a });\n      return { r, g, b, h, s, v, hex, a, str };\n    });\n  };\n\n  const rotateH = (amount: number) =>\n    rotateHSVValue(setValue, \"h\", amount, HUE_MAX);\n\n  const rotateS = (amount: number) => rotateHSVValue(setValue, \"s\", amount);\n\n  const rotateV = (amount: number) => rotateHSVValue(setValue, \"v\", amount);\n\n  const rotateA = (amount: number) => {\n    setValue((prev) => ({\n      ...prev,\n      a: clamp(prev.a + amount, ALPHA_MAX, 0),\n    }));\n  };\n\n  return {\n    setH,\n    setS,\n    setV,\n    setR,\n    setG,\n    setB,\n    setA,\n    setSV,\n    setHex,\n\n    rotateH,\n    rotateS,\n    rotateV,\n    rotateA,\n\n    color,\n\n    getSolidColor: () => hsv2Hex({ h: color.h, s: SV_MAX, v: SV_MAX }),\n  };\n};\n\nexport default useColorState;\n", "import React, { HTMLAttributes, RefObject, useRef } from \"react\";\nimport { ColorState } from \"./useColorState\";\nimport Key from \"../utils/keys\";\nimport { SV_MAX } from \"../color/constants\";\nimport useSlider from \"./useSlider\";\n\ntype UseColorBoardProps = {\n  state: ColorState;\n  ref: RefObject<HTMLElement>;\n  ariaLabel?: string;\n  ariaValueFormat?: string;\n  ariaDescription?: string;\n};\n\ntype UseColorBoard = (\n  props: UseColorBoardProps\n) => {\n  containerProps: HTMLAttributes<HTMLElement>;\n  descriptionProps: HTMLAttributes<HTMLElement>;\n};\n\nconst ariaStrings = {\n  ariaLabel: \"Saturation and brightness\",\n  ariaValueFormat: \"Saturation {0} brightness {1}\",\n  ariaDescription:\n    \"Use left and right arrow keys to set saturation. Use up and down arrow keys to set brightness.\",\n};\n\nconst descriptionId = \"color-picker-desc\";\n\nconst useColorBoard: UseColorBoard = ({\n  state,\n  ref,\n  ariaDescription = ariaStrings.ariaDescription,\n  ariaLabel = ariaStrings.ariaLabel,\n  ariaValueFormat = ariaStrings.ariaValueFormat,\n}) => {\n  const isAdjustingSaturation = useRef(false);\n  const color = state.color;\n\n  const valueText = ariaValueFormat\n    .replace(\"{0}\", String(color.s))\n    .replace(\"{1}\", String(color.v));\n\n  const { sliderProps } = useSlider({\n    ref,\n    maxValue: SV_MAX,\n    direction: \"both\",\n    ariaLabel,\n    ariaValueText: valueText,\n    ariaValueNow: isAdjustingSaturation.current ? color.s : color.v,\n    onChange({ x: s, y: v }) {\n      v = SV_MAX - v;\n      state.setSV(s, v);\n    },\n  });\n\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    // Allow users to tab out. Don't prevent default if Tab is pressed\n    if (event.key !== Key.Tab) {\n      event.preventDefault();\n    }\n\n    const increment = event.shiftKey ? 10 : 1;\n\n    switch (event.key) {\n      case Key.ArrowUp:\n        isAdjustingSaturation.current = false;\n        state.rotateV(increment);\n        break;\n      case Key.ArrowDown:\n        isAdjustingSaturation.current = false;\n        state.rotateV(-increment);\n        break;\n      case Key.ArrowLeft:\n        isAdjustingSaturation.current = true;\n        state.rotateS(-increment);\n        break;\n      case Key.ArrowRight:\n        isAdjustingSaturation.current = true;\n        state.rotateS(increment);\n        break;\n      case Key.Home:\n        isAdjustingSaturation.current = true;\n        state.setS(0);\n        break;\n      case Key.End:\n        isAdjustingSaturation.current = true;\n        state.setS(SV_MAX);\n        break;\n      case Key.PageUp:\n        isAdjustingSaturation.current = false;\n        state.setV(SV_MAX);\n        break;\n      case Key.PageDown:\n        isAdjustingSaturation.current = false;\n        state.setV(0);\n        break;\n    }\n  };\n\n  return {\n    containerProps: {\n      ...sliderProps,\n      onKeyDown,\n      \"aria-describedby\": descriptionId,\n      id: \"color-rectangle1\",\n    },\n    descriptionProps: {\n      id: descriptionId,\n      children: ariaDescription,\n    },\n  };\n};\n\nexport default useColorBoard;\n", "import { HTMLAttributes, RefObject } from \"react\";\nimport { HUE_MAX } from \"../color/constants\";\nimport { ColorState } from \"./useColorState\";\nimport useSlider from \"./useSlider\";\n\ntype UseHueSliderProps = {\n  state: ColorState;\n  ref: RefObject<HTMLElement>;\n};\n\ntype UseHueSlider = (\n  props: UseHueSliderProps\n) => {\n  sliderProps: HTMLAttributes<HTMLElement>;\n};\n\nconst useHueSlider: UseHueSlider = ({ state, ref }) => {\n  const { sliderProps } = useSlider({\n    ref,\n    direction: \"horizontal\",\n    onChange: (x) => state.setH(x),\n    onStep: (amount) => state.rotateH(amount),\n    maxValue: HUE_MAX,\n    ariaLabel: \"Hue slider\",\n    ariaValueNow: state.color.h,\n    ariaValueText: String(state.color.h),\n  });\n  return { sliderProps };\n};\n\nexport default useHueSlider;\n", "/**\n * SOURCE https://github.com/microsoft/fluentui\n */\n\nimport { RGBA } from \"../types\";\nimport { ALPHA_MAX } from \"./constants\";\nimport { hsl2Rgb } from \"./converters\";\n\n/**\n * Converts a valid CSS color string to an RGB color.\n * Note that hex colors *must* be prefixed with # to be considered valid.\n * Alpha in returned color defaults to 100.\n * Four and eight digit hex values (with alpha) are supported if the current browser supports them.\n */\nexport function cssColor(color?: string): RGBA | undefined {\n  if (!color) {\n    return undefined;\n  }\n\n  // Need to check the following valid color formats: RGB(A), HSL(A), hex, named color\n\n  // First check for well formatted RGB(A), HSL(A), and hex formats at the start.\n  // This is for perf (no creating an element) and catches the intentional \"transparent\" color\n  //   case early on.\n  const easyColor: RGBA | undefined =\n    _rgba(color) || _hex6(color) || _hex3(color) || _hsla(color);\n  if (easyColor) {\n    return easyColor;\n  }\n\n  // if the above fails, do the more expensive catch-all\n  return _browserCompute(color);\n}\n\n/**\n * Uses the browser's getComputedStyle() to determine what the passed-in color is.\n * This assumes _rgba, _hex6, _hex3, and _hsla have already been tried and all failed.\n * This works by attaching an element to the DOM, which may fail in server-side rendering\n *   or with headless browsers.\n */\nfunction _browserCompute(str: string): RGBA | undefined {\n  if (typeof document === \"undefined\") {\n    // don't throw an error when used server-side\n    return undefined;\n  }\n  const elem = document.createElement(\"div\");\n  elem.style.backgroundColor = str;\n  // This element must be attached to the DOM for getComputedStyle() to have a value\n  elem.style.position = \"absolute\";\n  elem.style.top = \"-9999px\";\n  elem.style.left = \"-9999px\";\n  elem.style.height = \"1px\";\n  elem.style.width = \"1px\";\n  document.body.appendChild(elem);\n  const eComputedStyle = getComputedStyle(elem);\n  const computedColor = eComputedStyle && eComputedStyle.backgroundColor;\n  document.body.removeChild(elem);\n  // computedColor is always an RGB(A) string, except for invalid colors in IE/Edge which return 'transparent'\n\n  // browsers return one of these if the color string is invalid,\n  // so need to differentiate between an actual error and intentionally passing in this color\n  if (computedColor === \"rgba(0, 0, 0, 0)\" || computedColor === \"transparent\") {\n    switch (str.trim()) {\n      // RGB and HSL were already checked at the start of the function\n      case \"transparent\":\n      case \"#0000\":\n      case \"#00000000\":\n        return { r: 0, g: 0, b: 0, a: 0 };\n    }\n    return undefined;\n  }\n\n  return _rgba(computedColor);\n}\n\n/**\n * If `str` is in valid `rgb()` or `rgba()` format, returns an RGB color (alpha defaults to 100).\n * Otherwise returns undefined.\n */\nfunction _rgba(str?: string | null): RGBA | undefined {\n  if (!str) {\n    return undefined;\n  }\n\n  const match = str.match(/^rgb(a?)\\(([\\d., ]+)\\)$/);\n  if (match) {\n    const hasAlpha = !!match[1];\n    const expectedPartCount = hasAlpha ? 4 : 3;\n    const parts = match[2].split(/ *, */).map(Number);\n\n    if (parts.length === expectedPartCount) {\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: hasAlpha ? parts[3] * 100 : ALPHA_MAX,\n      };\n    }\n  }\n}\n\n/**\n * If `str` is in `hsl()` or `hsla()` format, returns an RGB color (alpha defaults to 100).\n * Otherwise returns undefined.\n */\nfunction _hsla(str: string): RGBA | undefined {\n  const match = str.match(/^hsl(a?)\\(([\\d., ]+)\\)$/);\n  if (match) {\n    const hasAlpha = !!match[1];\n    const expectedPartCount = hasAlpha ? 4 : 3;\n    const parts = match[2].split(/ *, */).map(Number);\n\n    if (parts.length === expectedPartCount) {\n      const rgba = hsl2Rgb({ h: parts[0], s: parts[1], l: parts[2] }) as RGBA;\n      rgba.a = hasAlpha ? parts[3] * 100 : ALPHA_MAX;\n      return rgba;\n    }\n  }\n}\n\n/**\n * If `str` is in valid 6-digit hex format *with* # prefix, returns an RGB color (with alpha 100).\n * Otherwise returns undefined.\n */\nfunction _hex6(str: string): RGBA | undefined {\n  if (str[0] === \"#\" && str.length === 7 && /^#[\\da-fA-F]{6}$/.test(str)) {\n    return {\n      r: parseInt(str.slice(1, 3), 16),\n      g: parseInt(str.slice(3, 5), 16),\n      b: parseInt(str.slice(5, 7), 16),\n      a: ALPHA_MAX,\n    };\n  }\n}\n\n/**\n * If `str` is in valid 3-digit hex format *with* # prefix, returns an RGB color (with alpha 100).\n * Otherwise returns undefined.\n */\nfunction _hex3(str: string): RGBA | undefined {\n  if (str[0] === \"#\" && str.length === 4 && /^#[\\da-fA-F]{3}$/.test(str)) {\n    return {\n      r: parseInt(str[1] + str[1], 16),\n      g: parseInt(str[2] + str[2], 16),\n      b: parseInt(str[3] + str[3], 16),\n      a: ALPHA_MAX,\n    };\n  }\n}\n", "import { RGBA, TColor } from \"../types\";\nimport { rgb2Hex, rgb2Hsv, rgba2Str } from \"./converters\";\nimport { cssColor } from \"./cssColor\";\n\nconst getColorFromRGBA = ({ r, g, b, a }: RGBA) => {\n  const { h, s, v } = rgb2Hsv({ r, g, b });\n  const hex = rgb2Hex({ r, g, b }, false);\n  const str = rgba2Str({ r, g, b, a });\n  return { r, g, b, a, h, s, v, hex, str };\n};\n\n/**\n * SOURCE https://github.com/microsoft/fluentui\n */\n\n/**\n * Converts a CSS color string to a color object.\n * Note that hex colors *must* be prefixed with # to be considered valid.\n *\n * `inputColor` will be used unmodified as the `str` property of the returned object.\n * Alpha defaults to 100 if not specified in `inputColor`.\n * Returns undefined if the color string is invalid/not recognized.\n */\nexport function str2Color(inputColor: string): TColor | undefined {\n  const color = cssColor(inputColor);\n\n  if (!color) {\n    return;\n  }\n\n  return {\n    ...getColorFromRGBA(color!),\n    str: inputColor,\n  };\n}\n"],
  "mappings": "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",
  "names": ["Keys", "clamp", "value", "max", "min", "calculateX", "e", "rectSize", "x", "clientX", "left", "width", "Math", "round", "calculateY", "y", "clientY", "top", "height", "useSlider", "_a", "ref", "onStep", "ariaLabel", "ariaValueNow", "ariaValueText", "maxValue", "minValue", "step", "bigStep", "n", "props", "s", "t", "p", "Object", "prototype", "hasOwnProperty", "call", "indexOf", "getOwnPropertySymbols", "i", "length", "propertyIsEnumerable", "restoreScrollRef", "useRef", "useEffect", "current", "onPointerMove", "useCallback", "event", "onChange", "preventDefault", "getBoundingClientRect", "direction", "onPointerDown", "handleTouchMove", "window", "addEventListener", "passive", "capture", "removeEventListener", "preventScroll", "focus", "onpointermove", "setPointerCapture", "pointerId", "onPointerUp", "releasePointerCapture", "sliderProps", "tabIndex", "onKeyDown", "key", "Key", "Tab", "amount", "shiftKey", "ArrowLeft", "ArrowDown", "ArrowRight", "ArrowUp", "Home", "End", "onPointerCancel", "role", "aria-valuemin", "aria-valuemax", "aria-label", "aria-valuenow", "aria-valuetext", "useAlphaSlider", "state", "setA", "rotateA", "color", "a", "String", "isValidColorValue", "isNaN", "hsv2Rgb", "hsv", "h", "v", "C", "H", "X", "abs", "m", "r", "g", "b", "hsv2Hex", "rgb2Hex", "rgb2Hsv", "rgb", "red", "green", "blue", "cmax", "delta", "rgb2Hsl", "cmin", "l", "withHash", "toString", "slice", "rgba2RgbStr", "rgba2Str", "hsl2Rgb", "light", "hex2Rgb", "hex", "fallback", "test", "replace", "parseInt", "substr", "hex2Hsv", "initalColor", "str", "setRGBValue", "setValue", "channel", "prev", "[object Object]", "setHSVValue", "rotateHSVValue", "useColorState", "setColorState", "useState", "defaultValue", "setH", "setS", "setV", "setR", "setG", "setB", "updated", "setSV", "setHex", "rotateH", "rotateS", "rotateV", "getSolidColor", "ariaStrings", "useColorBoard", "ariaDescription", "ariaValueFormat", "isAdjustingSaturation", "valueText", "containerProps", "increment", "PageUp", "PageDown", "aria-describedby", "id", "descriptionProps", "children", "useHueSlider", "cssColor", "easyColor", "_rgba", "match", "hasAlpha", "expectedPartCount", "parts", "split", "map", "Number", "rgba", "document", "elem", "createElement", "style", "backgroundColor", "position", "body", "appendChild", "eComputedStyle", "getComputedStyle", "computedColor", "removeChild", "trim", "str2Color", "inputColor"]
}
