import {
  require_react
} from "./chunk-4BTUQGSU.js";
import {
  __toESM
} from "./chunk-2LSFTFF7.js";

// ../node_modules/@atomik-color/core/dist/index.esm.js
var import_react = __toESM(require_react());
var a;
!function(e2) {
  e2.PageUp = "PageUp", e2.PageDown = "PageDown", e2.End = "End", e2.Home = "Home", e2.ArrowLeft = "ArrowLeft", e2.ArrowUp = "ArrowUp", e2.ArrowRight = "ArrowRight", e2.ArrowDown = "ArrowDown", e2.Tab = "Tab";
}(a || (a = {}));
var o = a;
function s(e2 = 0, r2, t2 = 0) {
  return e2 < t2 ? t2 : e2 > r2 ? r2 : e2;
}
var i = (e2, r2, t2, n2) => {
  let a2 = (e2.clientX - r2.left) / r2.width;
  return a2 = s(Math.round(a2 * t2), t2, n2), a2;
};
var c = (e2, r2, t2, n2) => {
  let a2 = (e2.clientY - r2.top) / r2.height;
  return a2 = s(Math.round(a2 * t2), t2, n2), a2;
};
var l = (n2) => {
  var { ref: a2, onStep: s2, ariaLabel: l2, ariaValueNow: u2, ariaValueText: b2, maxValue: g2 = 100, minValue: h2 = 0, step: p2 = 1, bigStep: d2 = 10 } = n2, f2 = function(e2, r2) {
    var t2 = {};
    for (var n3 in e2)
      Object.prototype.hasOwnProperty.call(e2, n3) && r2.indexOf(n3) < 0 && (t2[n3] = e2[n3]);
    if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
      var a3 = 0;
      for (n3 = Object.getOwnPropertySymbols(e2); a3 < n3.length; a3++)
        r2.indexOf(n3[a3]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, n3[a3]) && (t2[n3[a3]] = e2[n3[a3]]);
    }
    return t2;
  }(n2, ["ref", "onStep", "ariaLabel", "ariaValueNow", "ariaValueText", "maxValue", "minValue", "step", "bigStep"]);
  const v2 = (0, import_react.useRef)(() => {
  });
  (0, import_react.useEffect)(() => v2.current, []);
  const w2 = (0, import_react.useCallback)((e2) => {
    if (!a2.current || "function" != typeof f2.onChange)
      return;
    e2.preventDefault();
    const r2 = a2.current.getBoundingClientRect();
    if ("both" === f2.direction) {
      let t2 = i(e2, r2, g2, h2), n3 = c(e2, r2, g2, h2);
      return f2.onChange({ x: t2, y: n3 });
    }
    if ("horizontal" === f2.direction) {
      let t2 = i(e2, r2, g2, h2);
      return f2.onChange(t2);
    }
    if ("vertical" === f2.direction) {
      let t2 = c(e2, r2, g2, h2);
      return f2.onChange(t2);
    }
  }, [f2.direction, f2.onChange]), m2 = (0, import_react.useCallback)((e2) => {
    var r2;
    a2.current && (e2.preventDefault(), v2.current = (() => {
      const e3 = (e4) => {
        e4.preventDefault();
      };
      return window.addEventListener("touchmove", e3, { passive: false, capture: true }), () => {
        window.removeEventListener("touchmove", e3, { capture: true });
      };
    })(), a2.current.focus(), a2.current.onpointermove = w2, null === (r2 = a2.current) || void 0 === r2 || r2.setPointerCapture(e2.pointerId), w2(e2));
  }, [w2]), y2 = (0, import_react.useCallback)((e2) => {
    a2.current && (a2.current.onpointermove = null, a2.current.releasePointerCapture(e2.pointerId), v2.current(), v2.current = () => {
    });
  }, []);
  return { sliderProps: { tabIndex: 0, onPointerDown: m2, onPointerUp: y2, onKeyDown: (e2) => {
    var r2, t2;
    e2.key !== o.Tab && e2.preventDefault();
    let n3 = e2.shiftKey ? d2 : p2;
    switch (e2.key) {
      case o.ArrowLeft:
      case o.ArrowDown:
        null == s2 || s2(-n3);
        break;
      case o.ArrowRight:
      case o.ArrowUp:
        null == s2 || s2(n3);
        break;
      case o.Home:
        "vertical" !== f2.direction && "horizontal" !== f2.direction || null === (r2 = f2.onChange) || void 0 === r2 || r2.call(f2, h2);
        break;
      case o.End:
        "vertical" !== f2.direction && "horizontal" !== f2.direction || null === (t2 = f2.onChange) || void 0 === t2 || t2.call(f2, g2);
        break;
      default:
        return;
    }
  }, onPointerCancel: y2, role: "slider", "aria-valuemin": h2, "aria-valuemax": g2, "aria-label": l2, "aria-valuenow": u2, "aria-valuetext": b2 } };
};
var u = ({ state: e2, ref: r2 }) => {
  const { sliderProps: t2 } = l({ ref: r2, direction: "horizontal", onChange: (r3) => e2.setA(r3), onStep: (r3) => e2.rotateA(r3), maxValue: 100, ariaLabel: "Alpha slider", ariaValueNow: e2.color.a, ariaValueText: String(e2.color.a) });
  return { sliderProps: t2 };
};
var b = (e2, r2, t2 = 0) => ((e3) => "number" == typeof e3 && false === isNaN(e3))(e2) && e2 >= t2 && e2 <= r2;
var g = (e2) => {
  const { h: r2, s: t2, v: n2 } = (({ h: e3, s: r3, v: t3 }) => ({ h: s(e3, 359, 0), s: s(r3, 100, 0), v: s(t3, 100, 0) }))(e2);
  let a2 = n2 / 100, o2 = t2 / 100 * a2, i2 = r2 / 60, c2 = o2 * (1 - Math.abs(i2 % 2 - 1)), l2 = a2 - o2;
  return o2 = 255 * (o2 + l2) | 0, c2 = 255 * (c2 + l2) | 0, l2 = 255 * l2 | 0, i2 >= 0 && i2 < 1 ? { r: o2, g: c2, b: l2 } : i2 >= 1 && i2 < 2 ? { r: c2, g: o2, b: l2 } : i2 >= 2 && i2 < 3 ? { r: l2, g: o2, b: c2 } : i2 >= 3 && i2 < 4 ? { r: l2, g: c2, b: o2 } : i2 >= 4 && i2 < 5 ? { r: c2, g: l2, b: o2 } : i2 >= 5 && i2 < 6 ? { r: o2, g: l2, b: c2 } : { r: 0, g: 0, b: 0 };
};
var h = ({ h: e2, s: r2, v: t2 }) => {
  let { r: n2, g: a2, b: o2 } = g({ h: e2, s: r2, v: t2 });
  return f({ r: n2, g: a2, b: o2 });
};
var p = (e2) => {
  const { r: r2, g: t2, b: n2 } = (({ r: e3, g: r3, b: t3 }) => ({ r: s(e3, 255, 0), g: s(r3, 255, 0), b: s(t3, 255, 0) }))(e2);
  let a2 = r2 / 255, o2 = t2 / 255, i2 = n2 / 255, c2 = Math.max(a2, o2, i2), l2 = c2 - Math.min(a2, o2, i2), u2 = 0, b2 = 0, g2 = 0;
  return l2 && (c2 === a2 && (u2 = (o2 - i2) / l2), c2 === o2 && (u2 = 2 + (i2 - a2) / l2), c2 === i2 && (u2 = 4 + (a2 - o2) / l2), c2 && (b2 = l2 / c2)), u2 = 60 * u2 | 0, u2 < 0 && (u2 += 360), b2 = 100 * b2 | 0, g2 = 100 * c2 | 0, { h: u2, s: b2, v: g2 };
};
var d = ({ r: e2, g: r2, b: t2 }) => {
  let n2 = e2 / 255, a2 = r2 / 255, o2 = t2 / 255, s2 = Math.max(n2, a2, o2), i2 = Math.min(n2, a2, o2), c2 = s2 - i2, l2 = 0, u2 = 0, b2 = (s2 + i2) / 2, g2 = 1 - Math.abs(2 * b2 - 1);
  return c2 && (s2 === n2 && (l2 = (a2 - o2) / c2), s2 === a2 && (l2 = 2 + (o2 - n2) / c2), s2 === o2 && (l2 = 4 + (n2 - a2) / c2), s2 && (u2 = c2 / g2)), l2 = 60 * l2 | 0, l2 < 0 && (l2 += 360), u2 = 100 * u2 | 0, b2 = 100 * b2 | 0, { h: l2, s: u2, l: b2 };
};
var f = ({ r: e2, g: r2, b: t2 }, n2 = true) => (n2 ? "#" : "") + ((1 << 24) + (e2 << 16) + (r2 << 8) + t2).toString(16).slice(1);
var v = ({ r: e2, g: r2, b: t2, a: n2 }) => "number" == typeof n2 && false === isNaN(n2) ? `rgba(${e2}, ${r2}, ${t2}, ${s(n2, 100, 0) / 100})` : `rgb(${e2}, ${r2}, ${t2})`;
var w = (e2) => e2.a < 100 ? v(e2) : f(e2);
var m = ({ h: e2, s: r2, l: t2 }) => {
  let n2 = t2 / 100, a2 = r2 / 100 * (1 - Math.abs(2 * n2 - 1)), o2 = e2 / 60, s2 = a2 * (1 - Math.abs(o2 % 2 - 1)), i2 = n2 - a2 / 2;
  return a2 = 255 * (a2 + i2) | 0, s2 = 255 * (s2 + i2) | 0, i2 = 255 * i2 | 0, o2 >= 0 && o2 < 1 ? { r: a2, g: s2, b: i2 } : o2 >= 1 && o2 < 2 ? { r: s2, g: a2, b: i2 } : o2 >= 2 && o2 < 3 ? { r: i2, g: a2, b: s2 } : o2 >= 3 && o2 < 4 ? { r: i2, g: s2, b: a2 } : o2 >= 4 && o2 < 5 ? { r: s2, g: i2, b: a2 } : o2 >= 5 && o2 < 6 ? { r: a2, g: i2, b: s2 } : { r: 0, g: 0, b: 0 };
};
var y = (e2, r2 = null) => {
  if (true !== ((e3) => /(^#{0,1}[0-9A-F]{6}$)|(^#{0,1}[0-9A-F]{3}$)/i.test(e3))(e2))
    return r2;
  return "#" === e2[0] && (e2 = e2.slice(1, e2.length)), 3 === e2.length && (e2 = e2.replace(/([0-9A-F])([0-9A-F])([0-9A-F])/i, "$1$1$2$2$3$3")), { r: parseInt(e2.substr(0, 2), 16), g: parseInt(e2.substr(2, 2), 16), b: parseInt(e2.substr(4, 2), 16) };
};
var x = (e2) => {
  const r2 = y(e2) || { r: 0, g: 0, b: 0 };
  return p(r2);
};
var A = { h: 0, s: 50, v: 50, a: 100, r: 128, g: 64, b: 64, hex: "804040", str: "#804040" };
var V = (e2, r2, t2) => {
  ((e3) => b(e3, 255))(t2) && e2((e3) => {
    const { r: n2, g: a2, b: o2, a: s2 } = Object.assign(Object.assign({}, e3), { [r2]: t2 }), { h: i2, s: c2, v: l2 } = p({ r: n2, g: a2, b: o2 });
    return { r: n2, g: a2, b: o2, a: s2, h: i2, s: c2, v: l2, hex: f({ r: n2, g: a2, b: o2 }, false), str: w({ r: n2, g: a2, b: o2, a: s2 }) };
  });
};
var S = (e2, r2, t2, n2 = 100) => {
  b(t2, n2) && e2((e3) => {
    const { h: n3, s: a2, v: o2, a: s2 } = Object.assign(Object.assign({}, e3), { [r2]: t2 }), { r: i2, g: c2, b: l2 } = g({ h: n3, s: a2, v: o2 });
    return { h: n3, s: a2, v: o2, r: i2, g: c2, b: l2, a: s2, hex: f({ r: i2, g: c2, b: l2 }, false), str: w({ r: i2, g: c2, b: l2, a: s2 }) };
  });
};
var C = (e2, r2, t2, n2 = 100) => {
  e2((e3) => {
    const { h: a2, s: o2, v: i2, a: c2 } = Object.assign(Object.assign({}, e3), { [r2]: s(e3[r2] + t2, n2, 0) }), { r: l2, g: u2, b: b2 } = g({ h: a2, s: o2, v: i2 });
    return { h: a2, s: o2, v: i2, r: l2, g: u2, b: b2, a: c2, hex: f({ r: l2, g: u2, b: b2 }, false), str: w({ r: l2, g: u2, b: b2, a: c2 }) };
  });
};
var O = (e2) => {
  const [t2, a2] = (0, import_react.useState)(e2.defaultValue || A);
  (0, import_react.useEffect)(() => {
    e2.value && a2(e2.value);
  }, [e2.value]);
  const o2 = (r2) => {
    if ("function" == typeof e2.onChange) {
      if (void 0 !== e2.value)
        return void e2.onChange("function" == typeof r2 ? r2(t2) : r2);
      e2.onChange("function" == typeof r2 ? r2(t2) : r2);
    }
    a2(r2);
  };
  return { setH: (e3) => S(o2, "h", e3, 359), setS: (e3) => S(o2, "s", e3), setV: (e3) => S(o2, "v", e3), setR: (e3) => V(o2, "r", e3), setG: (e3) => V(o2, "g", e3), setB: (e3) => V(o2, "b", e3), setA: (e3) => {
    b(e3, 100) && o2((r2) => {
      const t3 = Object.assign(Object.assign({}, r2), { a: e3 });
      return t3.str = w(t3), t3;
    });
  }, setSV: (e3, r2) => {
    (b(e3, 100) || b(r2, 100)) && o2((t3) => {
      const { h: n2, a: a3 } = t3, { r: o3, g: s2, b: i2 } = g({ h: n2, s: e3, v: r2 }), c2 = f({ r: o3, g: s2, b: i2 }, false), l2 = w({ r: o3, g: s2, b: i2, a: a3 });
      return { h: n2, s: e3, v: r2, r: o3, g: s2, b: i2, a: a3, hex: c2, str: l2 };
    });
  }, setHex: (e3, r2 = { r: t2.r, g: t2.g, b: t2.b }) => {
    o2(({ a: t3 }) => {
      const { r: n2, g: a3, b: o3 } = y(e3, r2), { h: s2, s: i2, v: c2 } = p({ r: n2, g: a3, b: o3 }), l2 = w({ r: n2, g: a3, b: o3, a: t3 });
      return { r: n2, g: a3, b: o3, h: s2, s: i2, v: c2, hex: e3, a: t3, str: l2 };
    });
  }, rotateH: (e3) => C(o2, "h", e3, 359), rotateS: (e3) => C(o2, "s", e3), rotateV: (e3) => C(o2, "v", e3), rotateA: (e3) => {
    o2((r2) => Object.assign(Object.assign({}, r2), { a: s(r2.a + e3, 100, 0) }));
  }, color: t2, getSolidColor: () => h({ h: t2.h, s: 100, v: 100 }) };
};
var P = "Saturation and brightness";
var k = "Saturation {0} brightness {1}";
var $ = "Use left and right arrow keys to set saturation. Use up and down arrow keys to set brightness.";
var j = ({ state: r2, ref: t2, ariaDescription: n2 = $, ariaLabel: a2 = P, ariaValueFormat: s2 = k }) => {
  const i2 = (0, import_react.useRef)(false), c2 = r2.color, u2 = s2.replace("{0}", String(c2.s)).replace("{1}", String(c2.v)), { sliderProps: b2 } = l({ ref: t2, maxValue: 100, direction: "both", ariaLabel: a2, ariaValueText: u2, ariaValueNow: i2.current ? c2.s : c2.v, onChange({ x: e2, y: t3 }) {
    t3 = 100 - t3, r2.setSV(e2, t3);
  } });
  return { containerProps: Object.assign(Object.assign({}, b2), { onKeyDown: (e2) => {
    e2.key !== o.Tab && e2.preventDefault();
    const t3 = e2.shiftKey ? 10 : 1;
    switch (e2.key) {
      case o.ArrowUp:
        i2.current = false, r2.rotateV(t3);
        break;
      case o.ArrowDown:
        i2.current = false, r2.rotateV(-t3);
        break;
      case o.ArrowLeft:
        i2.current = true, r2.rotateS(-t3);
        break;
      case o.ArrowRight:
        i2.current = true, r2.rotateS(t3);
        break;
      case o.Home:
        i2.current = true, r2.setS(0);
        break;
      case o.End:
        i2.current = true, r2.setS(100);
        break;
      case o.PageUp:
        i2.current = false, r2.setV(100);
        break;
      case o.PageDown:
        i2.current = false, r2.setV(0);
    }
  }, "aria-describedby": "color-picker-desc", id: "color-rectangle1" }), descriptionProps: { id: "color-picker-desc", children: n2 } };
};
var D = ({ state: e2, ref: r2 }) => {
  const { sliderProps: t2 } = l({ ref: r2, direction: "horizontal", onChange: (r3) => e2.setH(r3), onStep: (r3) => e2.rotateH(r3), maxValue: 359, ariaLabel: "Hue slider", ariaValueNow: e2.color.h, ariaValueText: String(e2.color.h) });
  return { sliderProps: t2 };
};
function I(e2) {
  if (!e2)
    return;
  const r2 = L(e2) || function(e3) {
    if ("#" === e3[0] && 7 === e3.length && /^#[\da-fA-F]{6}$/.test(e3))
      return { r: parseInt(e3.slice(1, 3), 16), g: parseInt(e3.slice(3, 5), 16), b: parseInt(e3.slice(5, 7), 16), a: 100 };
  }(e2) || function(e3) {
    if ("#" === e3[0] && 4 === e3.length && /^#[\da-fA-F]{3}$/.test(e3))
      return { r: parseInt(e3[1] + e3[1], 16), g: parseInt(e3[2] + e3[2], 16), b: parseInt(e3[3] + e3[3], 16), a: 100 };
  }(e2) || function(e3) {
    const r3 = e3.match(/^hsl(a?)\(([\d., ]+)\)$/);
    if (r3) {
      const e4 = !!r3[1], t2 = e4 ? 4 : 3, n2 = r3[2].split(/ *, */).map(Number);
      if (n2.length === t2) {
        const r4 = m({ h: n2[0], s: n2[1], l: n2[2] });
        return r4.a = e4 ? 100 * n2[3] : 100, r4;
      }
    }
  }(e2);
  return r2 || function(e3) {
    if ("undefined" == typeof document)
      return;
    const r3 = document.createElement("div");
    r3.style.backgroundColor = e3, r3.style.position = "absolute", r3.style.top = "-9999px", r3.style.left = "-9999px", r3.style.height = "1px", r3.style.width = "1px", document.body.appendChild(r3);
    const t2 = getComputedStyle(r3), n2 = t2 && t2.backgroundColor;
    if (document.body.removeChild(r3), "rgba(0, 0, 0, 0)" === n2 || "transparent" === n2) {
      switch (e3.trim()) {
        case "transparent":
        case "#0000":
        case "#00000000":
          return { r: 0, g: 0, b: 0, a: 0 };
      }
      return;
    }
    return L(n2);
  }(e2);
}
function L(e2) {
  if (!e2)
    return;
  const r2 = e2.match(/^rgb(a?)\(([\d., ]+)\)$/);
  if (r2) {
    const e3 = !!r2[1], t2 = e3 ? 4 : 3, n2 = r2[2].split(/ *, */).map(Number);
    if (n2.length === t2)
      return { r: n2[0], g: n2[1], b: n2[2], a: e3 ? 100 * n2[3] : 100 };
  }
}
function N(e2) {
  const r2 = I(e2);
  if (r2)
    return Object.assign(Object.assign({}, (({ r: e3, g: r3, b: t2, a: n2 }) => {
      const { h: a2, s: o2, v: s2 } = p({ r: e3, g: r3, b: t2 });
      return { r: e3, g: r3, b: t2, a: n2, h: a2, s: o2, v: s2, hex: f({ r: e3, g: r3, b: t2 }, false), str: w({ r: e3, g: r3, b: t2, a: n2 }) };
    })(r2)), { str: e2 });
}
export {
  x as hex2Hsv,
  y as hex2Rgb,
  m as hsl2Rgb,
  h as hsv2Hex,
  g as hsv2Rgb,
  f as rgb2Hex,
  d as rgb2Hsl,
  p as rgb2Hsv,
  v as rgba2RgbStr,
  w as rgba2Str,
  N as str2Color,
  u as useAlphaSlider,
  j as useColorBoard,
  O as useColorState,
  D as useHueSlider,
  l as useSlider
};
//# sourceMappingURL=@atomik-color_core.js.map
