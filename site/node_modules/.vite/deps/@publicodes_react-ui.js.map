{
  "version": 3,
  "sources": ["../../../../node_modules/@publicodes/react-ui/src/index.ts", "../../../../node_modules/@publicodes/react-ui/src/Explanation.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/common/InfixMecanism.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Arrondi.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Barème.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/common/Mecanism.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/common/NodeValueLeaf.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/common/mecanismColors.ts", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/common/DefaultInlineMecanism.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Reference.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Condition.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Constant.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Contexte.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Durée.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/EstNonApplicable.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/EstNonDéfini.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Grille.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/InversionNumérique.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Operation.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Replacement.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/ReplacementRule.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Rule.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/RésoudreRéférenceCirculaire.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Situation.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/TauxProgressif.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Texte.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Unité.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Variations.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/UnePossibilité.tsx", "../../../../node_modules/@publicodes/react-ui/src/mecanisms/Logarithme.tsx", "../../../../node_modules/@publicodes/react-ui/src/rule/RulePage.tsx", "../../../../node_modules/@publicodes/react-ui/src/utils.ts", "../../../../node_modules/@publicodes/react-ui/src/rule/DeveloperAccordion.tsx", "../../../../node_modules/@publicodes/react-ui/src/rule/RuleSource.tsx", "../../../../node_modules/@publicodes/react-ui/src/rule/Header.tsx", "../../../../node_modules/@publicodes/react-ui/src/rule/Meta.tsx", "../../../../node_modules/@publicodes/react-ui/src/rule/RulesNav.tsx", "../../../../node_modules/@publicodes/react-ui/src/component/icons/Close.tsx"],
  "sourcesContent": ["import Engine, { utils } from 'publicodes'\nexport { default as Explanation } from './Explanation'\nexport { default as RulePage } from './rule/RulePage'\nexport { RuleLink } from './RuleLink'\n\n/**\n * Get all the URLs of the documentation pages and their corresponding rule names.\n *\n * @param engine - The engine instance containing the rules.\n * @param documentationPath - The base path of the documentation.\n * @returns A record of rule names indexed by their corresponding documentation URLs.\n *\n *\n * @example\n * ```ts\n * const engine = new Engine({\n *  'contrat salarié': undefined,\n *  'contrat salarié . rémunération': 2140,\n * })\n *\n * const documentationPath = '/doc'\n *\n * const siteMap = getDocumentationSiteMap({\n * \tengine,\n * \tdocumentationPath\n * })\n *\n * // siteMap will be: {\n * //   '/doc/contrat-salarié': 'contrat salarié',\n * //   '/doc/contrat-salarié/rémuneration': 'contrat salarié . rémunération'\n * // }\n * ```\n *\n */\nexport function getDocumentationSiteMap({\n\tengine,\n\tdocumentationPath,\n}: {\n\tengine: Engine\n\tdocumentationPath: string\n}): Record<string, string> {\n\tconst parsedRules = engine.context.parsedRules\n\treturn Object.fromEntries(\n\t\tObject.keys(parsedRules)\n\t\t\t.filter(\n\t\t\t\t(dottedName) =>\n\t\t\t\t\t!dottedName.match(/(\\$SITUATION|\\$EVALUATION|\\$INTERNAL)/),\n\t\t\t)\n\t\t\t.map((dottedName) => [\n\t\t\t\tdocumentationPath + '/' + utils.encodeRuleName(dottedName),\n\t\t\t\tdottedName,\n\t\t\t]),\n\t)\n}\n\nexport { type SupportedRenderers } from './contexts'\n", "import { ASTNode, transformAST } from 'publicodes'\nimport { useEngine } from './hooks'\nimport Arrondi from './mecanisms/Arrondi'\nimport Barème from './mecanisms/Barème'\nimport Condition from './mecanisms/Condition'\nimport Constant from './mecanisms/Constant'\nimport Contexte from './mecanisms/Contexte'\nimport Durée from './mecanisms/Durée'\nimport EstNonApplicable from './mecanisms/EstNonApplicable'\nimport EstNonDéfini from './mecanisms/EstNonDéfini'\nimport Grille from './mecanisms/Grille'\nimport InversionNumérique from './mecanisms/InversionNumérique'\nimport Operation from './mecanisms/Operation'\nimport Reference from './mecanisms/Reference'\nimport Replacement from './mecanisms/Replacement'\nimport ReplacementRule from './mecanisms/ReplacementRule'\nimport Rule from './mecanisms/Rule'\nimport RésoudreRéférenceCirculaire from './mecanisms/RésoudreRéférenceCirculaire'\nimport Situation from './mecanisms/Situation'\nimport TauxProgressif from './mecanisms/TauxProgressif'\nimport Texte from './mecanisms/Texte'\nimport Unité from './mecanisms/Unité'\nimport Variations from './mecanisms/Variations'\nimport DefaultInlineMecanism from './mecanisms/common/DefaultInlineMecanism'\nimport UnePossibilité from './mecanisms/UnePossibilité'\nimport Logarithme from './mecanisms/Logarithme'\n\nconst UIComponents = {\n\tconstant: Constant,\n\tarrondi: Arrondi,\n\tbarème: Barème,\n\tdurée: Durée,\n\tgrille: Grille,\n\tinversion: InversionNumérique,\n\toperation: Operation,\n\ttexte: Texte,\n\treference: Reference,\n\t'est non applicable': EstNonApplicable,\n\t'est non défini': EstNonDéfini,\n\trule: Rule,\n\tcondition: Condition,\n\t'dans la situation': Situation,\n\tcontexte: Contexte,\n\treplacement: Replacement,\n\treplacementRule: ReplacementRule,\n\t'taux progressif': TauxProgressif,\n\t'résoudre référence circulaire': RésoudreRéférenceCirculaire,\n\tunité: Unité,\n\t'variable manquante': (node: ASTNode<'variable manquante'>) => (\n\t\t<Explanation node={node.explanation} />\n\t),\n\tvariations: Variations,\n\tlogarithme: Logarithme,\n\t'une possibilité': UnePossibilité,\n} as const\n\n/**\n * Display the documentation of a parsed publicodes AST node\n *\n * @param props\n * @param props.node - The AST node to display\n * @group Components\n *\n */\nexport default function Explanation({ node }: { node: ASTNode }) {\n\tconst visualisationKind = node.sourceMap?.mecanismName ?? node.nodeKind\n\tconst engine = useEngine()\n\tconst evaluateEverything = transformAST((node) => {\n\t\tif ('nodeValue' in node || 'replacementRule' === node.nodeKind) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn engine.evaluateNode(node)\n\t}, false)\n\tconst displayedNode = evaluateEverything(node)\n\tconst Component: any =\n\t\tUIComponents[visualisationKind as keyof typeof UIComponents] ??\n\t\t(node.sourceMap?.mecanismName ? DefaultInlineMecanism : undefined)\n\n\tif (!Component) {\n\t\tthrow new Error(`Unknown visualisation: ${visualisationKind}`)\n\t}\n\n\treturn <Component {...displayedNode} />\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport React from 'react'\nimport Explanation from '../../Explanation'\n\nexport const InfixMecanism = ({\n\tvalue,\n\tprefixed,\n\tchildren,\n}: {\n\tvalue: EvaluatedNode\n\tchildren: React.ReactNode\n\tprefixed?: boolean\n}) => {\n\treturn (\n\t\t<div>\n\t\t\t{prefixed && children}\n\t\t\t<div\n\t\t\t\tclassName=\"value\"\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tmargin: '1rem 0',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Explanation node={value} />\n\t\t\t</div>\n\t\t\t{!prefixed && children}\n\t\t</div>\n\t)\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { InfixMecanism } from './common/InfixMecanism'\n\nexport default function MecanismArrondi(node: EvaluatedNode<'arrondi'>) {\n\treturn (\n\t\t<InfixMecanism value={node.explanation.valeur as EvaluatedNode}>\n\t\t\t<p>\n\t\t\t\t<strong>Arrondi : </strong>\n\t\t\t\t<Explanation node={node.explanation.arrondi} />\n\t\t\t</p>\n\t\t</InfixMecanism>\n\t)\n}\n", "import { EvaluatedNode, NodeKind, parseUnit } from 'publicodes'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { Mecanism } from './common/Mecanism'\nimport { NodeValueLeaf } from './common/NodeValueLeaf'\n\ntype EvaluatedTranche =\n\tEvaluatedNode<'barème'>['explanation']['tranches'][number] &\n\t\tEvaluatedNode & {\n\t\t\tplafond: EvaluatedNode\n\t\t}\n\nexport type BaremeExplanation = {\n\ttranches: Array<EvaluatedTranche>\n\tmultiplicateur: EvaluatedNode<NodeKind, number>\n\tassiette: EvaluatedNode<NodeKind, number>\n}\n\ntype Props = EvaluatedNode<'barème', number> & {\n\texplanation: BaremeExplanation\n}\nexport default function Barème({ nodeValue, explanation, unit }: Props) {\n\treturn (\n\t\t<Mecanism name=\"barème\" value={nodeValue} unit={unit}>\n\t\t\t<StyledComponent>\n\t\t\t\t<ul className=\"properties\">\n\t\t\t\t\t<BarèmeAttributes explanation={explanation} />\n\t\t\t\t\t<TrancheTable\n\t\t\t\t\t\ttranches={explanation.tranches}\n\t\t\t\t\t\tmultiplicateur={explanation.multiplicateur}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* nous avons remarqué que la notion de taux moyen pour un barème à 2 tranches est moins pertinent pour les règles de calcul des indépendants. Règle empirique à faire évoluer ! */}\n\t\t\t\t\t{nodeValue != undefined && explanation.tranches.length > 2 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<b>Taux moyen : </b>\n\t\t\t\t\t\t\t<NodeValueLeaf\n\t\t\t\t\t\t\t\tdata={(100 * nodeValue) / (explanation.assiette.nodeValue ?? 1)}\n\t\t\t\t\t\t\t\tunit={parseUnit('%')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</StyledComponent>\n\t\t</Mecanism>\n\t)\n}\n\nexport const BarèmeAttributes = ({\n\texplanation,\n}: Pick<Props, 'explanation'>) => {\n\tconst multiplicateur = explanation.multiplicateur\n\treturn (\n\t\t<>\n\t\t\t<li key=\"assiette\">\n\t\t\t\t<span className=\"key\">Assiette : </span>\n\t\t\t\t<span className=\"value\">\n\t\t\t\t\t<Explanation node={explanation.assiette} />\n\t\t\t\t</span>\n\t\t\t</li>\n\t\t\t{multiplicateur && !multiplicateur.isDefault && (\n\t\t\t\t<li key=\"multiplicateur\">\n\t\t\t\t\t<span className=\"key\">Multiplicateur : </span>\n\t\t\t\t\t<span className=\"value\">\n\t\t\t\t\t\t<Explanation node={multiplicateur} />\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\ntype TrancheTableProps = {\n\ttranches: Array<EvaluatedTranche>\n\tmultiplicateur: EvaluatedNode\n}\nexport const TrancheTable = ({\n\ttranches,\n\tmultiplicateur,\n}: TrancheTableProps) => {\n\tconst activeTranche = tranches.find(({ isActive }) => isActive)\n\tif (!tranches.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<table className=\"tranches\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Plafonds des tranches</th>\n\t\t\t\t\t{'taux' in tranches[0] && <th>Taux</th>}\n\t\t\t\t\t{('montant' in tranches[0] ||\n\t\t\t\t\t\tactiveTranche?.nodeValue != undefined) && <th>Montant</th>}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{tranches.map((tranche, i) => (\n\t\t\t\t\t<Tranche key={i} tranche={tranche} multiplicateur={multiplicateur} />\n\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\ntype TrancheProps = {\n\ttranche: EvaluatedTranche\n\tmultiplicateur: EvaluatedNode\n}\nconst Tranche = ({ tranche, multiplicateur }: TrancheProps) => {\n\tconst isHighlighted = tranche.isActive\n\treturn (\n\t\t<tr className={`tranche ${isHighlighted ? 'activated' : ''}`}>\n\t\t\t<td key=\"tranche\">\n\t\t\t\t{tranche.plafond.nodeValue === Infinity ?\n\t\t\t\t\t'Au-delà du dernier plafond'\n\t\t\t\t:\t<>\n\t\t\t\t\t\tInférieur à <Explanation node={tranche.plafond} />\n\t\t\t\t\t\t{multiplicateur && !multiplicateur.isDefault && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{' × '}\n\t\t\t\t\t\t\t\t<Explanation node={multiplicateur} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</td>\n\t\t\t{'taux' in tranche && (\n\t\t\t\t<td key=\"taux\">\n\t\t\t\t\t<Explanation node={tranche.taux} />\n\t\t\t\t</td>\n\t\t\t)}\n\t\t\t{(tranche.nodeValue != undefined || 'montant' in tranche) && (\n\t\t\t\t<td key=\"value\">\n\t\t\t\t\t{'montant' in tranche ?\n\t\t\t\t\t\t<Explanation node={tranche.montant} />\n\t\t\t\t\t:\t<NodeValueLeaf data={tranche.nodeValue} unit={tranche.unit} />}\n\t\t\t\t</td>\n\t\t\t)}\n\t\t</tr>\n\t)\n}\n\nexport const StyledComponent = styled.div`\n\ttable {\n\t\tmargin: 1em 0;\n\t\twidth: 100%;\n\t\ttext-align: left;\n\t\tfont-weight: 400;\n\t}\n\ttable td {\n\t\tpadding: 0.1em 0.4em;\n\t}\n\ttable th {\n\t\tfont-weight: 600;\n\t}\n\ttable th:first-letter {\n\t\ttext-transform: uppercase;\n\t}\n\t.tranche:nth-child(2n) {\n\t\tbackground: var(--lightestColor);\n\t}\n\t.tranche.activated {\n\t\tbackground: var(--lighterColor);\n\t\tfont-weight: bold;\n\t}\n`\n", "import { Evaluation, Unit } from 'publicodes'\nimport { css, styled } from 'styled-components'\nimport { NodeValueLeaf } from './NodeValueLeaf'\nimport mecanismColors from './mecanismColors'\n\n// Un élément du graphe de calcul qui a une valeur interprétée (à afficher)\nexport type Props = {\n\tname: string\n\tvalue?: Evaluation\n\tunit?: Unit\n\tchildren: React.ReactNode\n\tdisplayName?: boolean\n\tdocUrl?: string\n}\nexport function Mecanism({\n\tname,\n\tvalue,\n\tchildren,\n\tunit,\n\tdisplayName = true,\n\tdocUrl,\n}: Props) {\n\treturn (\n\t\t<StyledMecanism $mecanismName={name}>\n\t\t\t{displayName && (\n\t\t\t\t<MecanismName name={name} href={docUrl}>\n\t\t\t\t\t{name}\n\t\t\t\t</MecanismName>\n\t\t\t)}\n\t\t\t<div>\n\t\t\t\t{children}\n\n\t\t\t\t{value !== undefined && (\n\t\t\t\t\t<StyledMecanismValue>\n\t\t\t\t\t\t<small> =&nbsp;</small>\n\t\t\t\t\t\t<NodeValueLeaf data={value} unit={unit} />\n\t\t\t\t\t</StyledMecanismValue>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</StyledMecanism>\n\t)\n}\n\nconst StyledMecanism = styled.div<{ $mecanismName: string }>`\n\tborder: 1px solid;\n\tmax-width: 100%;\n\tborder-radius: 3px;\n\tpadding: 0.5rem 1rem;\n\tposition: relative;\n\tflex: 1;\n\tflex-direction: column;\n\ttext-align: left;\n\tborder-color: ${({ $mecanismName }) => mecanismColors($mecanismName)};\n\t.properties > li {\n\t\tmargin: 1rem 0;\n\t}\n`\n\nconst MecanismName = ({\n\tname,\n\tinline = false,\n\tchildren,\n\thref,\n}: {\n\tname: string\n\tinline?: boolean\n\tchildren: React.ReactNode\n\thref?: string\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<StyledMecanismName\n\t\t\t\tname={name}\n\t\t\t\t$inline={inline}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\thref={href ?? `https://publi.codes/docs/mecanismes#${name}`}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</StyledMecanismName>\n\t\t</>\n\t)\n}\n\nconst StyledMecanismName = styled.a<{ name: string; $inline?: boolean }>`\n\tbackground-color: ${({ name }) => mecanismColors(name)} !important;\n\tfont-size: inherit;\n\tdisplay: inline-block;\n\tfont-weight: inherit;\n\twidth: fit-content;\n\tfont-family: inherit;\n\tpadding: 0.4rem 0.6rem !important;\n\tcolor: white !important;\n\ttransition: hover 0.2s;\n\t:hover {\n\t\tcolor: white;\n\t}\n\t${(props) =>\n\t\tprops.$inline ?\n\t\t\tcss`\n\t\t\t\tborder-radius: 0.3rem;\n\t\t\t\tmargin-bottom: 0.5rem;\n\t\t\t`\n\t\t:\tcss`\n\t\t\t\ttop: -0.5rem;\n\t\t\t\tposition: relative;\n\t\t\t\tmargin-left: -1rem;\n\t\t\t\tborder-radius: 0 !important;\n\t\t\t\tborder-bottom-right-radius: 0.3rem !important;\n\t\t\t\t::first-letter {\n\t\t\t\t\ttext-transform: capitalize;\n\t\t\t\t}\n\t\t\t`}\n\t:hover {\n\t\topacity: 0.8;\n\t}\n`\n\nconst StyledMecanismValue = styled.div`\n\ttext-align: right;\n\tmargin-top: 1rem;\n\tfont-weight: bold;\n`\n", "import { Evaluation, Unit, formatValue } from 'publicodes'\nimport { styled } from 'styled-components'\n\ntype Props = {\n\tdata: Evaluation\n\tunit: Unit | undefined\n\tfullPrecision?: boolean\n}\n\nexport const NodeValueLeaf = ({ data, unit }: Props) => {\n\treturn (\n\t\t<StyledNodeValuePointer\n\t\t\tclassName=\"node-value-pointer\"\n\t\t\ttitle={data === null ? 'Non applicable' : ''}\n\t\t\taria-label={data === null ? 'Valeur non applicable' : ''}\n\t\t>\n\t\t\t{data === null ?\n\t\t\t\t<span aria-hidden>-</span>\n\t\t\t:\tformatValue({ nodeValue: data, unit })}\n\t\t</StyledNodeValuePointer>\n\t)\n}\n\nexport const StyledNodeValuePointer = styled.span`\n\tbackground: white;\n\tborder-bottom: 0 !important;\n\tfont-size: 0.875rem;\n\tline-height: 1.25rem;\n\tmargin: 0 0.2rem;\n\tflex-shrink: 0;\n\tpadding: 0.1rem 0.2rem;\n\ttext-decoration: none !important;\n\tbox-shadow:\n\t\t0px 1px 2px 1px #d9d9d9,\n\t\t0 0 0 1px #d9d9d9;\n\tborder: 1px solid #f8f9fa;\n\tborder-radius: 0.2rem;\n`\n", "const colors = {\n\t'applicable si': '#7B1FA2',\n\t'non applicable si': '#7B1FA2',\n\t'est applicable': '#00796B',\n\t'est non applicable': '#00796B',\n\t'est défini': '#00796B',\n\t'est non défini': '#00796B',\n\tsomme: '#18457B',\n\tplafond: '#EF6C00',\n\tplancher: '#EF6C00',\n\tabattement: '#B73731',\n\tproduit: '#2ecc71',\n\t'une de ces conditions': '#3498db',\n\t'toutes ces conditions': '#3498db',\n\t'le maximum de': '#795548',\n\t'le minimum de': '#795548',\n\tvariations: '#FF9800',\n\t'par défaut': '#00695C',\n\t'taux progressif': '#795548',\n\tbarème: '#9B296F',\n\tgrille: '#AD1457',\n\t'une possibilité': '#00796B',\n\tavec: '#2653ce',\n} as const\n\nexport default (name: string) => {\n\tif (name in colors) {\n\t\treturn colors[name as keyof typeof colors]\n\t}\n\treturn 'palevioletred'\n}\n", "import { ASTNode, EvaluatedNode } from 'publicodes'\nimport { useContext, useMemo, useState } from 'react'\nimport { css, styled } from 'styled-components'\nimport Explanation from '../../Explanation'\nimport { EngineContext } from '../../contexts'\nimport { UnfoldIsEnabledContext } from '../Reference'\nimport { Mecanism } from './Mecanism'\n\nexport default function DefaultInlineMecanism({\n\tsourceMap,\n\tnodeValue,\n\tunit,\n}: EvaluatedNode & {\n\tsourceMap: NonNullable<EvaluatedNode['sourceMap']>\n}) {\n\tconst { args, mecanismName } = sourceMap\n\n\tconst isChainableMecanism =\n\t\t'valeur' in args && mecanismName in args && Object.keys(args).length === 2\n\tconst isUnaryMecanism = 'valeur' in args && Object.keys(args).length === 1\n\n\treturn (\n\t\t<>\n\t\t\t{isChainableMecanism && <ListOrScalarExplanation node={args.valeur} />}\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginTop: isChainableMecanism ? '1rem' : 0,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Mecanism name={mecanismName} value={nodeValue} unit={unit}>\n\t\t\t\t\t{isChainableMecanism ?\n\t\t\t\t\t\t<ListOrScalarExplanation\n\t\t\t\t\t\t\tnode={args[mecanismName]}\n\t\t\t\t\t\t\tmecanismName={mecanismName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t: isUnaryMecanism ?\n\t\t\t\t\t\t<ListOrScalarExplanation\n\t\t\t\t\t\t\tnode={args.valeur}\n\t\t\t\t\t\t\tmecanismName={mecanismName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t:\t<ul>\n\t\t\t\t\t\t\t{Object.entries(args).map(([key, value]) => (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t\t\t\t\t\tpadding: '0.25rem 0',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>{key}&nbsp;:&nbsp;</span>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<ListOrScalarExplanation node={value} />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t}\n\t\t\t\t</Mecanism>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nfunction ListOrScalarExplanation({\n\tnode,\n\tmecanismName,\n}: {\n\tnode: ASTNode | Array<ASTNode>\n\tmecanismName?: string\n}) {\n\tif (Array.isArray(node)) {\n\t\tconst sign =\n\t\t\tmecanismName === 'produit' ? '×'\n\t\t\t: mecanismName === 'somme' ? '+'\n\t\t\t: undefined\n\t\treturn (\n\t\t\t<Table\n\t\t\t\texplanation={node as Array<EvaluatedNode>}\n\t\t\t\thideNotApplicable={mecanismName !== 'produit'}\n\t\t\t\tsign={sign}\n\t\t\t/>\n\t\t)\n\t}\n\treturn <Explanation node={node} />\n}\n\n// We want to put non applicable rules a the bottom of list #1055\nconst isZeroOrNotApplicable = (x: ASTNode) => {\n\tconst nodeValue = useContext(EngineContext)?.evaluate(x).nodeValue\n\treturn nodeValue === null || nodeValue === 0\n}\n\ntype TableProps = {\n\texplanation: Array<EvaluatedNode>\n\thideNotApplicable?: boolean\n\tsign?: string\n}\n\nfunction Table({ explanation, hideNotApplicable = true, sign }: TableProps) {\n\tconst [applicableExplanation, notApplicableExplanation] = explanation.reduce(\n\t\t(acc, x) => {\n\t\t\tacc[hideNotApplicable && isZeroOrNotApplicable(x) ? 1 : 0].push(x)\n\t\t\treturn acc\n\t\t},\n\t\t[[], []] as [Array<EvaluatedNode>, Array<EvaluatedNode>],\n\t)\n\tconst [showNotApplicable, setShowNotApplicable] = useState(\n\t\tapplicableExplanation.length === 0,\n\t)\n\tconst id = useMemo(\n\t\t() => 'notApplicableExplanation' + Math.random().toString(36).substring(7),\n\t\t[],\n\t)\n\treturn (\n\t\t<>\n\t\t\t<StyledListContainer $sign={sign}>\n\t\t\t\t{applicableExplanation.map((node: EvaluatedNode, i) => (\n\t\t\t\t\t<Row key={i} node={node} />\n\t\t\t\t))}\n\t\t\t</StyledListContainer>\n\t\t\t{notApplicableExplanation.length > 0 &&\n\t\t\t\tapplicableExplanation.length !== 0 && (\n\t\t\t\t\t<StyledButtonContainer\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextAlign: 'right',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\taria-expanded={showNotApplicable}\n\t\t\t\t\t\t\taria-controls={id}\n\t\t\t\t\t\t\tclassName=\"publicodes_btn-small\"\n\t\t\t\t\t\t\tonClick={() => setShowNotApplicable(!showNotApplicable)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{showNotApplicable ?\n\t\t\t\t\t\t\t\t'Masquer les valeurs non applicable'\n\t\t\t\t\t\t\t:\t`Voir toute la liste`}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</StyledButtonContainer>\n\t\t\t\t)}\n\t\t\t{showNotApplicable && (\n\t\t\t\t<StyledListContainer\n\t\t\t\t\tid={id}\n\t\t\t\t\t$sign={sign}\n\t\t\t\t\t$showFirst={applicableExplanation.length > 0}\n\t\t\t\t>\n\t\t\t\t\t{notApplicableExplanation.map((node: EvaluatedNode, i) => (\n\t\t\t\t\t\t<Row key={i} node={node} />\n\t\t\t\t\t))}\n\t\t\t\t</StyledListContainer>\n\t\t\t)}\n\t\t</>\n\t)\n}\nconst StyledButtonContainer = styled.div`\n\tmargin: 0.5rem 0;\n\tmargin-left: 1rem;\n`\nconst StyledListContainer = styled.ul<{\n\t$sign?: string\n\t$showFirst?: boolean\n}>`\n\tmargin: 0;\n\tmargin-left: 1rem;\n\n\t${({ $sign, $showFirst }) =>\n\t\t$sign &&\n\t\t!$showFirst &&\n\t\tcss`\n\t\t\t& > li:first-child::marker {\n\t\t\t\tcontent: '';\n\t\t\t}\n\t\t`}\n\t${({ $sign }) =>\n\t\t$sign &&\n\t\tcss`\n\t\t\t& > li::marker {\n\t\t\t\tfont-weight: bold;\n\t\t\t\tcontent: '${$sign}  ';\n\t\t\t}\n\t\t`}\n`\n\n/* La colonne peut au clic afficher une nouvelle colonne qui sera une autre somme imbriquée */\nfunction Row({ node }: { node: EvaluatedNode }) {\n\treturn (\n\t\t<StyledRow style={{ padding: '0.25rem 0' }}>\n\t\t\t<UnfoldIsEnabledContext.Provider value={true}>\n\t\t\t\t<Explanation node={node} />\n\t\t\t</UnfoldIsEnabledContext.Provider>\n\t\t</StyledRow>\n\t)\n}\n\nconst StyledRow = styled.li`\n\t> * {\n\t\twidth: 100%;\n\t}\n`\n", "import { EvaluatedNode } from 'publicodes'\nimport { createContext, useContext, useState } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { EngineContext } from '../contexts'\nimport { NodeValueLeaf } from './common/NodeValueLeaf'\n\n// Un élément du graphe de calcul qui a une valeur interprétée (à afficher)\nexport default function Reference(\n\tnode: EvaluatedNode<'reference'> & {\n\t\tdottedName: string\n\t},\n) {\n\tconst engine = useContext(EngineContext)\n\tconst { dottedName, nodeValue, unit } = node\n\tconst rule = engine?.context.parsedRules[node.dottedName]\n\tif (!rule) {\n\t\tthrow new Error(`Unknown rule: ${dottedName}`)\n\t}\n\tconst [folded, setFolded] = useState(true)\n\tconst isFoldEnabled = useContext(UnfoldIsEnabledContext)\n\n\tif (\n\t\tnode.dottedName === node.contextDottedName + ' . ' + node.name &&\n\t\t!node.name.includes(' . ') &&\n\t\trule.virtualRule\n\t) {\n\t\treturn <Explanation node={engine?.evaluate(rule)} />\n\t}\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflex: isFoldEnabled ? 1 : 'initial',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tmaxWidth: '100%',\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span style={{ paddingRight: '0.2rem' }}>\n\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t</span>\n\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 1,\n\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{isFoldEnabled && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<UnfoldButton\n\t\t\t\t\t\t\t\tonClick={() => setFolded(!folded)}\n\t\t\t\t\t\t\t\taria-expanded={!folded}\n\t\t\t\t\t\t\t\tclassName=\"publicodes_btn-small\"\n\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\tfolded ?\n\t\t\t\t\t\t\t\t\t\t'Déplier, afficher le détail'\n\t\t\t\t\t\t\t\t\t:\t'Replier, afficher le détail'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{folded ? 'Déplier' : 'Replier'}\n\t\t\t\t\t\t\t</UnfoldButton>\n\t\t\t\t\t\t\t<StyledGuide />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{nodeValue !== undefined && (\n\t\t\t\t\t\t<NodeValueLeaf data={nodeValue} unit={unit} />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>{' '}\n\t\t\t{!folded && (\n\t\t\t\t<div>\n\t\t\t\t\t<UnfoldIsEnabledContext.Provider value={false}>\n\t\t\t\t\t\t<Explanation node={engine?.evaluate(rule)} />\n\t\t\t\t\t</UnfoldIsEnabledContext.Provider>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport const UnfoldIsEnabledContext = createContext<boolean>(false)\n\nconst UnfoldButton = styled.button`\n\ttext-transform: none !important;\n`\nconst StyledGuide = styled.div`\n\t@media (max-width: 500px) {\n\t\t/* border: none; */\n\t}\n\tmargin: 0.5rem;\n\tflex: 1;\n\tborder-bottom: 2px dotted lightgray;\n`\n", "import { EvaluatedNode } from 'publicodes'\nimport DefaultInlineMecanism from './common/DefaultInlineMecanism'\n\nexport default function MecanismCondition(node: EvaluatedNode<'condition'>) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{ mecanismName: node.nodeKind, args: node.explanation }}\n\t\t/>\n\t)\n}\n", "import { EvaluatedNode, formatValue } from 'publicodes'\n\nexport default function Constant({\n\tnodeValue,\n\ttype,\n\tfullPrecision,\n\tunit,\n}: EvaluatedNode<'constant'>) {\n\tif (nodeValue === undefined) {\n\t\treturn null\n\t}\n\tif (nodeValue === null) {\n\t\treturn <span className=\"value\">{formatValue({ nodeValue })}</span>\n\t} else if (fullPrecision) {\n\t\treturn (\n\t\t\t<span className={type}>\n\t\t\t\t{formatValue(\n\t\t\t\t\t{ nodeValue, unit },\n\t\t\t\t\t{\n\t\t\t\t\t\tprecision: 5,\n\t\t\t\t\t},\n\t\t\t\t)}\n\t\t\t</span>\n\t\t)\n\t} else {\n\t\treturn <span className=\"value\">{formatValue({ nodeValue, unit })}</span>\n\t}\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport { Fragment } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { EngineContext } from '../contexts'\nimport { useEngine } from '../hooks'\nimport { Mecanism } from './common/Mecanism'\n\nexport default function Contexte({ explanation }: EvaluatedNode<'contexte'>) {\n\tconst engine = useEngine()\n\tconst contexteEngine =\n\t\texplanation.subEngineId ?\n\t\t\t(engine.context.subEngines.get(explanation.subEngineId) ?? engine)\n\t\t:\tengine\n\n\treturn (\n\t\t<>\n\t\t\t<Mecanism name=\"contexte\">\n\t\t\t\t<p>\n\t\t\t\t\tCe calcul est effectué en changeant les valeurs des règles suivantes :\n\t\t\t\t</p>\n\t\t\t\t<StyledDL>\n\t\t\t\t\t{explanation.contexte.map(([origin, newValue]) => (\n\t\t\t\t\t\t<Fragment key={origin.dottedName as string}>\n\t\t\t\t\t\t\t<dt>\n\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={origin.dottedName as string} />\n\t\t\t\t\t\t\t</dt>\n\t\t\t\t\t\t\t<dd>\n\t\t\t\t\t\t\t\t<span aria-hidden> = </span>\n\t\t\t\t\t\t\t\t<Explanation node={newValue} />\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t))}\n\t\t\t\t</StyledDL>\n\t\t\t</Mecanism>\n\t\t\t<EngineContext.Provider value={contexteEngine}>\n\t\t\t\t<Explanation node={explanation.valeur} />\n\t\t\t</EngineContext.Provider>\n\t\t</>\n\t)\n}\n\nconst StyledDL = styled.dl`\n\tdisplay: grid;\n\tgrid-template-columns: auto 1fr;\n\tgap: 0.6rem;\n\tline-height: 1.75;\n\tdd {\n\t\tmargin: 0;\n\t\tdisplay: flex;\n\t\tgap: 0.5rem;\n\t}\n\t@media (max-width: 600px) {\n\t\tgrid-template-columns: auto;\n\t\tline-height: initial;\n\t\tdd {\n\t\t\tjustify-content: flex-end;\n\t\t\tmargin-bottom: 0.5rem;\n\t\t}\n\t}\n`\n", "import { EvaluatedNode } from 'publicodes'\nimport DefaultInlineMecanism from './common/DefaultInlineMecanism'\n\nexport default function MecanismDurée(node: EvaluatedNode<'durée'>) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{ mecanismName: node.nodeKind, args: node.explanation }}\n\t\t/>\n\t)\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport DefaultInlineMecanism from './common/DefaultInlineMecanism'\n\nexport default function MecanismEstNonApplicable(\n\tnode: EvaluatedNode<'est non applicable'>,\n) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{\n\t\t\t\tmecanismName: node.nodeKind,\n\t\t\t\targs: { valeur: node.explanation },\n\t\t\t}}\n\t\t/>\n\t)\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport DefaultInlineMecanism from './common/DefaultInlineMecanism'\n\nexport default function MecanismEstNonDéfini(\n\tnode: EvaluatedNode<'est non défini'>,\n) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{\n\t\t\t\tmecanismName: node.nodeKind,\n\t\t\t\targs: { valeur: node.explanation },\n\t\t\t}}\n\t\t/>\n\t)\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport {\n\tBaremeExplanation,\n\tBarèmeAttributes,\n\tStyledComponent,\n\tTrancheTable,\n} from './Barème'\nimport { Mecanism } from './common/Mecanism'\n\ntype Props = EvaluatedNode<'grille', number> & {\n\texplanation: BaremeExplanation\n}\nexport default function Grille({ nodeValue, explanation, unit }: Props) {\n\treturn (\n\t\t<StyledComponent>\n\t\t\t<Mecanism name=\"grille\" value={nodeValue} unit={unit}>\n\t\t\t\t<ul className=\"properties\">\n\t\t\t\t\t<BarèmeAttributes explanation={explanation} />\n\t\t\t\t\t<TrancheTable\n\t\t\t\t\t\ttranches={explanation.tranches}\n\t\t\t\t\t\tmultiplicateur={explanation.multiplicateur}\n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t</Mecanism>\n\t\t</StyledComponent>\n\t)\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { useEngine } from '../hooks'\nimport { Mecanism } from './common/Mecanism'\n\nexport default function InversionNumérique({\n\tnodeValue,\n\texplanation,\n}: EvaluatedNode<'inversion'>) {\n\tconst engine = useEngine()\n\n\treturn (\n\t\t<Mecanism name=\"inversion numérique\" value={nodeValue}>\n\t\t\t{engine.cache.inversionFail && explanation.inversionGoal ?\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCette valeur devrait pouvoir être estimée à partir d’une autre\n\t\t\t\t\t\tvariable qui possède une formule de calcul et dont la valeur a été\n\t\t\t\t\t\tfixée dans la simulation :\n\t\t\t\t\t</p>\n\t\t\t\t\t<Explanation node={explanation.inversionGoal} />\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMalheureusement, il a été impossible de retrouver une valeur pour\n\t\t\t\t\t\tcette formule qui permette d’atterrir sur la valeur demandée.\n\t\t\t\t\t</p>\n\t\t\t\t</>\n\t\t\t: explanation.inversionGoal ?\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCette valeur a été estimée à partir d’une autre variable qui possède\n\t\t\t\t\t\tune formule de calcul et dont la valeur a été fixée dans la\n\t\t\t\t\t\tsimulation :\n\t\t\t\t\t</p>\n\t\t\t\t\t<Explanation node={explanation.inversionGoal} />\n\t\t\t\t</>\n\t\t\t:\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCette formule de calcul n’existe pas, mais on peut la calculer par\n\t\t\t\t\t\tinversion en utilisant les formules des règles suivantes :\n\t\t\t\t\t</p>\n\t\t\t\t\t<ul id=\"inversionsPossibles\">\n\t\t\t\t\t\t{explanation.inversionCandidates.map((el) => (\n\t\t\t\t\t\t\t<li key={el.dottedName}>\n\t\t\t\t\t\t\t\t<Explanation node={el} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</>\n\t\t\t}\n\t\t</Mecanism>\n\t)\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { NodeValueLeaf } from './common/NodeValueLeaf'\n\ntype Props = EvaluatedNode<'operation'> & {\n\texplanation: [EvaluatedNode, EvaluatedNode]\n}\n\nexport default function Operation({\n\tnodeValue,\n\texplanation,\n\toperator,\n\tunit,\n}: Props) {\n\tconst isUnaryOperation =\n\t\texplanation[0].nodeValue === 0 &&\n\t\toperator === '−' &&\n\t\texplanation[0].nodeKind === 'constant'\n\n\treturn (\n\t\t<StyledOperation className=\"operation\" role=\"math\">\n\t\t\t<span>(</span>\n\t\t\t{!isUnaryOperation && (\n\t\t\t\t<>\n\t\t\t\t\t<Explanation node={explanation[0]} />\n\t\t\t\t\t&nbsp;\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{operator}&nbsp;\n\t\t\t<Explanation node={explanation[1]} />\n\t\t\t{nodeValue != undefined && (\n\t\t\t\t<span className=\"result\">\n\t\t\t\t\t<small> =&nbsp;</small>\n\t\t\t\t\t<NodeValueLeaf data={nodeValue} unit={unit} />\n\t\t\t\t</span>\n\t\t\t)}\n\t\t\t<span>)</span>\n\t\t</StyledOperation>\n\t)\n}\n\nconst StyledOperation = styled.div`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 0.125rem;\n\t> .operation ::before,\n\t> .operation ::after {\n\t\tcontent: '';\n\t}\n\t.result {\n\t\tmargin-left: 0.2rem;\n\t}\n\t.operation .result {\n\t\tdisplay: none;\n\t}\n`\n", "import { ASTNode, EvaluatedNode } from 'publicodes'\nimport { useId, useState } from 'react'\nimport Explanation from '../Explanation'\nimport { useEngine } from '../hooks'\n\nexport default function Replacement(node: EvaluatedNode<'variations'>) {\n\tconst engine = useEngine()\n\tconst sourceMaps = node.sourceMap as {\n\t\tmecanismName: 'replacement'\n\t\targs: {\n\t\t\toriginalNode: EvaluatedNode<'reference'>\n\t\t\tapplicableReplacements: Array<ASTNode<'replacementRule'>>\n\t\t}\n\t}\n\tconst originalNode = sourceMaps.args.originalNode\n\tconst applicableReplacement = sourceMaps.args.applicableReplacements.find(\n\t\t({ definitionRule }) =>\n\t\t\tengine.evaluate(definitionRule).nodeValue === node.nodeValue,\n\t)\n\n\tif (!applicableReplacement || applicableReplacement.replaceByNonApplicable) {\n\t\toriginalNode.nodeValue = node.nodeValue\n\t\treturn <Explanation node={originalNode} />\n\t}\n\tconst [showOriginal, setShowOriginal] = useState(false)\n\tconst id = useId()\n\treturn (\n\t\t<>\n\t\t\t<span\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'inline-flex',\n\t\t\t\t\tmaxWidth: '100%',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\tflex: '1 1 0%',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{showOriginal && (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: '0.6',\n\t\t\t\t\t\t\t\ttextDecoration: 'line-through',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Explanation node={originalNode} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t<Explanation node={applicableReplacement.definitionRule} />\n\t\t\t\t</span>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginLeft: '0.4rem',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => setShowOriginal(!showOriginal)}\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"publicodes_btn-small\"\n\t\t\t\t\t\taria-expanded={showOriginal}\n\t\t\t\t\t\taria-controls={id}\n\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\tshowOriginal ?\n\t\t\t\t\t\t\t\t'Cacher la valeur d’origine'\n\t\t\t\t\t\t\t:\t'Voir la valeur d’origine'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t🔄\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t</>\n\t)\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\n\nexport default function ReplacementMecanism(\n\tnode: EvaluatedNode<'replacementRule'>,\n) {\n\treturn (\n\t\t<span>\n\t\t\tRemplace <Explanation node={node.replacedReference} />{' '}\n\t\t\t{node.rawNode.dans && (\n\t\t\t\t<>\n\t\t\t\t\tdans{' '}\n\t\t\t\t\t{node.whiteListedNames\n\t\t\t\t\t\t.map((child, i) => <Explanation key={i} node={child} />)\n\t\t\t\t\t\t.join(', ')}\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{node.rawNode['sauf dans'] && (\n\t\t\t\t<>\n\t\t\t\t\tsauf dans{' '}\n\t\t\t\t\t{node.blackListedNames\n\t\t\t\t\t\t.map((child, i) => <Explanation key={i} node={child} />)\n\t\t\t\t\t\t.join(', ')}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</span>\n\t)\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { DottedNameContext } from '../contexts'\n\nexport default function RuleMecanism({\n\texplanation,\n\tdottedName,\n}: EvaluatedNode<'rule'>) {\n\treturn (\n\t\t<Styled>\n\t\t\t<DottedNameContext.Provider value={dottedName}>\n\t\t\t\t<StyledExplanation>\n\t\t\t\t\t<Explanation node={explanation.valeur} />\n\t\t\t\t</StyledExplanation>\n\t\t\t</DottedNameContext.Provider>\n\t\t</Styled>\n\t)\n}\nconst StyledExplanation = styled.div`\n\tborder-left: 1rem solid hsl(220, 60%, 97.5%);\n\tpadding-left: 1rem;\n\tmargin-left: -2rem;\n`\n\nconst Styled = styled.div`\n\tmargin-top: 0.5rem;\n\tmargin-bottom: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n`\n", "import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { Mecanism } from './common/Mecanism'\n\nexport default function MecanismRésoudreRéférenceCirculaire({\n\texplanation,\n\tnodeValue,\n}: EvaluatedNode<'résoudre référence circulaire'>) {\n\treturn (\n\t\t<Mecanism name=\"résoudre la référence circulaire\" value={nodeValue}>\n\t\t\t<p>\n\t\t\t\t{' '}\n\t\t\t\tCette valeur a été retrouvé en résolvant la référence circulaire dans la\n\t\t\t\tformule ci dessous :{' '}\n\t\t\t</p>\n\n\t\t\t<Explanation node={explanation.valeur} />\n\t\t</Mecanism>\n\t)\n}\n", "import { ASTNode, EvaluatedNode } from 'publicodes'\nimport { useContext } from 'react'\nimport Explanation from '../Explanation'\nimport { EngineContext } from '../contexts'\nimport { InfixMecanism } from './common/InfixMecanism'\n\ntype Props = {\n\tsourceMap: {\n\t\targs: {\n\t\t\tvaleur: EvaluatedNode\n\t\t\t'dans la situation': ASTNode<'reference'>\n\t\t}\n\t}\n} & EvaluatedNode<'condition'>\nexport default function MecanismSituation({ sourceMap }: Props) {\n\tconst engine = useContext(EngineContext)\n\n\tconst situationValeur = engine?.evaluate(\n\t\tsourceMap.args['dans la situation'],\n\t) as {\n\t\tnodeValue: number\n\t\texplanation: { valeur: ASTNode }\n\t}\n\n\treturn situationValeur?.nodeValue !== undefined ?\n\t\t\t<InfixMecanism prefixed value={sourceMap.args['valeur']}>\n\t\t\t\t<p>\n\t\t\t\t\t<strong>Valeur renseignée dans la simulation : </strong>\n\t\t\t\t\t<Explanation node={situationValeur.explanation.valeur} />\n\t\t\t\t</p>\n\t\t\t</InfixMecanism>\n\t\t:\t<Explanation node={sourceMap.args['valeur']} />\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport {\n\tBaremeExplanation,\n\tBarèmeAttributes,\n\tStyledComponent,\n\tTrancheTable,\n} from './Barème'\nimport { Mecanism } from './common/Mecanism'\n\ntype Props = EvaluatedNode<'taux progressif', number> & {\n\texplanation: BaremeExplanation\n}\nexport default function TauxProgressif({\n\tnodeValue,\n\texplanation,\n\tunit,\n}: Props) {\n\treturn (\n\t\t<StyledComponent>\n\t\t\t<Mecanism name=\"taux progressif\" value={nodeValue} unit={unit}>\n\t\t\t\t<ul className=\"properties\">\n\t\t\t\t\t<BarèmeAttributes explanation={explanation} />\n\t\t\t\t\t<TrancheTable\n\t\t\t\t\t\ttranches={explanation.tranches}\n\t\t\t\t\t\tmultiplicateur={explanation.multiplicateur}\n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t</Mecanism>\n\t\t</StyledComponent>\n\t)\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\n\nexport default function Texte({ explanation }: EvaluatedNode<'texte'>) {\n\treturn (\n\t\t<p>\n\t\t\t{explanation.map((element) =>\n\t\t\t\ttypeof element === 'string' ? element : (\n\t\t\t\t\t<Highlight key={element.rawNode}>\n\t\t\t\t\t\t<Explanation node={element} />\n\t\t\t\t\t</Highlight>\n\t\t\t\t),\n\t\t\t)}\n\t\t</p>\n\t)\n}\n\nconst Highlight = styled.span`\n\tborder: 1px solid rgba(0, 0, 0, 0.1);\n\tpadding: 0.2rem;\n\tposition: relative;\n\tborder-radius: 0.15rem;\n\tbackground-color: rgba(0, 0, 0, 0.05);\n`\n", "import { EvaluatedNode, formatValue, serializeUnit } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { InfixMecanism } from './common/InfixMecanism'\n\nexport default function MecanismUnité({\n\tnodeValue,\n\texplanation,\n\tunit,\n}: EvaluatedNode<'unité'>) {\n\tif (explanation.nodeKind === 'constant') {\n\t\treturn formatValue({ nodeValue, unit })\n\t} else if (explanation.nodeKind === 'reference') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Explanation node={explanation} />\n\t\t\t\t&nbsp;{serializeUnit(unit)}\n\t\t\t</>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<InfixMecanism value={explanation as EvaluatedNode}>\n\t\t\t\t<p>\n\t\t\t\t\t<strong>Unité : </strong>\n\t\t\t\t\t{serializeUnit(unit)}\n\t\t\t\t</p>\n\t\t\t</InfixMecanism>\n\t\t)\n\t}\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport { useState } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { Mecanism } from './common/Mecanism'\n\ntype Props = EvaluatedNode<'variations'>\n\nexport default function Variations({ nodeValue, explanation, unit }: Props) {\n\tconst activeCaseIndex = explanation.findIndex(\n\t\t({ condition }) => (condition as EvaluatedNode).nodeValue === true,\n\t)\n\n\tlet activeCase\n\tif (activeCaseIndex !== undefined) {\n\t\tactiveCase = explanation[activeCaseIndex]\n\t\texplanation = [\n\t\t\t...explanation.slice(0, activeCaseIndex),\n\t\t\t...explanation.slice(activeCaseIndex + 1),\n\t\t]\n\t}\n\n\tconst [isExpanded, setIsExpanded] = useState(!activeCase)\n\treturn (\n\t\t<Mecanism name=\"variations\" unit={unit} value={nodeValue}>\n\t\t\t<ul>\n\t\t\t\t{activeCase && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Case {...(activeCase as CaseProps)} />\n\t\t\t\t\t\t<span style={{ paddingLeft: '1rem' }}>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"publicodes_btn-small\"\n\t\t\t\t\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{isExpanded ? 'Masquer' : 'Afficher'} les autres cas\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{isExpanded && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{explanation.map((currentCase, i) => (\n\t\t\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t\t\t<Case {...(currentCase as CaseProps)} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</Mecanism>\n\t)\n}\n\ntype CaseProps = {\n\tcondition: EvaluatedNode\n\tconsequence: EvaluatedNode\n}\nfunction Case({ condition, consequence }: CaseProps) {\n\treturn (\n\t\t<StyledCaseContainer>\n\t\t\t<StyledCase>\n\t\t\t\t<StyledCondition>\n\t\t\t\t\t{condition.nodeKind === 'constant' && condition.nodeValue === true ?\n\t\t\t\t\t\t<StyledText>Par défaut&nbsp;:&nbsp;</StyledText>\n\t\t\t\t\t:\t<>\n\t\t\t\t\t\t\t<StyledText>Condition&nbsp;:&nbsp;</StyledText>\n\t\t\t\t\t\t\t<StyledExplanation>\n\t\t\t\t\t\t\t\t<Explanation node={condition} />\n\t\t\t\t\t\t\t</StyledExplanation>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t</StyledCondition>\n\t\t\t\t<StyledExplanation>\n\t\t\t\t\t<Explanation node={consequence} />\n\t\t\t\t</StyledExplanation>\n\t\t\t</StyledCase>\n\t\t</StyledCaseContainer>\n\t)\n}\n\nconst StyledExplanation = styled.div``\nconst StyledText = styled.span`\n\tfont-weight: bold;\n`\nconst StyledCondition = styled.div`\n\tpadding-bottom: 1rem;\n\tpadding-top: 0.5rem;\n\tdisplay: flex;\n\talign-items: baseline;\n`\n\nconst StyledCase = styled.div`\n\tborder-left: 1rem solid hsl(36, 60%, 97%);\n\tpadding-left: 1rem;\n\tmargin-left: -1rem;\n`\n\nconst StyledCaseContainer = styled.div`\n\tpadding: 1rem 0;\n`\n", "import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { Mecanism } from './common/Mecanism'\nimport { StyledNodeValuePointer } from './common/NodeValueLeaf'\n\nexport default function UnePossibilité(node: EvaluatedNode<'une possibilité'>) {\n\treturn (\n\t\t<Mecanism\n\t\t\tname=\"une possibilité\"\n\t\t\tvalue={node.nodeValue}\n\t\t\tdocUrl=\"http://publi.codes/docs/manuel/une-possibilit%C3%A9\"\n\t\t>\n\t\t\t<ul>\n\t\t\t\t{node.explanation.map((possibility, i) => {\n\t\t\t\t\tconst notApplicable =\n\t\t\t\t\t\t(possibility.notApplicable as EvaluatedNode)?.nodeValue === true\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t\t{possibility.nodeKind === 'reference' ?\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<RuleLinkWithContext\n\t\t\t\t\t\t\t\t\t\tdottedName={possibility.dottedName as string}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<code\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: notApplicable ? 'line-through' : '',\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{possibility.publicodesValue}\n\t\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t\t</RuleLinkWithContext>\n\t\t\t\t\t\t\t\t\t{notApplicable && (\n\t\t\t\t\t\t\t\t\t\t<StyledNodeValuePointer>\n\t\t\t\t\t\t\t\t\t\t\tNon Applicable\n\t\t\t\t\t\t\t\t\t\t</StyledNodeValuePointer>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\tpossibility.nodeKind === 'constant' &&\n\t\t\t\t\t\t\t\tpossibility.type === 'string'\n\t\t\t\t\t\t\t) ?\n\t\t\t\t\t\t\t\t<code>{possibility.publicodesValue}</code>\n\t\t\t\t\t\t\t:\t<Explanation node={possibility} />}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</Mecanism>\n\t)\n}\n", "import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { Mecanism } from './common/Mecanism'\n\nexport default function MecanismArrondi(node: EvaluatedNode<'logarithme'>) {\n\treturn (\n\t\t<Mecanism name=\"logarithme\" value={node.nodeValue}>\n\t\t\t<Explanation node={node.explanation} />\n\t\t</Mecanism>\n\t)\n}\n", "import Engine, {\n\tEvaluatedNode,\n\tformatValue,\n\tPublicodesExpression,\n\tRuleNode,\n\tserializeUnit,\n\tutils,\n} from 'publicodes'\nimport { ComponentProps, useContext, useEffect, useRef } from 'react'\nimport { styled } from 'styled-components'\nimport {\n\tBasepathContext,\n\tdefaultRenderers,\n\tDottedNameContext,\n\tEngineContext,\n\tRenderersContext,\n\tSupportedRenderers,\n} from '../contexts'\nimport Explanation from '../Explanation'\nimport { useEngine } from '../hooks'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { getPrecision } from '../utils'\nimport { DeveloperAccordion } from './DeveloperAccordion'\nimport RuleHeader from './Header'\nimport { breakpointsWidth, RulesNav } from './RulesNav'\n\n/**\n * Display the documentation page of a given rule\n *\n * See the [sandbox](https://publi.codes/studio) to see the component in action (it is displayed on the right screen).\n *\n * @param props\n * @group Components\n *\n */\nexport default function RulePage({\n\tdocumentationPath,\n\trulePath,\n\tengine,\n\trenderers,\n\tsearchBar,\n\tlanguage,\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n\tnpmPackage,\n\tmobileMenuPortalId,\n\topenNavButtonPortalId,\n\tshowDevSection = true,\n}: {\n\t/**\n\t * The base path on which the documentation will be mounted. For example, if it is /documentation, the URL of the rule remuneration.primes will be /documentation/remuneration/primes.\n\t */\n\tdocumentationPath: string\n\t/**\n\t * The path of the rule to display.\n\t */\n\trulePath: string\n\t/**\n\t * The engine object whose calculations we want to display.\n\t */\n\tengine: Engine\n\t/**\n\t * The language in which to display the documentation (currently, only 'fr' and 'en' are supported).\n\t */\n\tlanguage: 'fr' | 'en'\n\t/**\n\t * The React components that will be used in the documentation page.\n\t */\n\trenderers: SupportedRenderers\n\t/**\n\t * Displays a search bar to navigate through the documentation\n\t * @default false\n\t */\n\tsearchBar?: boolean\n\t/**\n\t * The URL for the API documentation.\n\t */\n\tapiDocumentationUrl?: string\n\t/**\n\t * The URL for the API evaluation.\n\t */\n\tapiEvaluateUrl?: string\n\t/**\n\t * The name of the npm package.\n\t */\n\tnpmPackage?: string\n\t/**\n\t * The ID of the portal for the mobile menu.\n\t */\n\tmobileMenuPortalId?: string\n\t/**\n\t * The ID of the portal for the open navigation button.\n\t */\n\topenNavButtonPortalId?: string\n\t/**\n\t * Whether to show the development section.\n\t * @default true\n\t */\n\tshowDevSection?: boolean\n}) {\n\tconst currentEngineId =\n\t\ttypeof window !== 'undefined' &&\n\t\tnew URLSearchParams(window.location.search).get('currentEngineId')\n\n\tconst prevRenderers = useRef(renderers)\n\tuseEffect(() => {\n\t\tif (prevRenderers.current !== renderers) {\n\t\t\tprevRenderers.current = renderers\n\t\t}\n\t}, [renderers])\n\n\treturn (\n\t\t<EngineContext.Provider value={engine}>\n\t\t\t<BasepathContext.Provider value={documentationPath}>\n\t\t\t\t<RenderersContext.Provider value={defaultRenderers(renderers)}>\n\t\t\t\t\t<Rule\n\t\t\t\t\t\tdottedName={utils.decodeRuleName(rulePath)}\n\t\t\t\t\t\tsubEngineId={\n\t\t\t\t\t\t\tcurrentEngineId ? parseInt(currentEngineId, 10) : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\tapiDocumentationUrl={apiDocumentationUrl}\n\t\t\t\t\t\tapiEvaluateUrl={apiEvaluateUrl}\n\t\t\t\t\t\tnpmPackage={npmPackage}\n\t\t\t\t\t\tmobileMenuPortalId={mobileMenuPortalId}\n\t\t\t\t\t\topenNavButtonPortalId={openNavButtonPortalId}\n\t\t\t\t\t\tshowDevSection={showDevSection}\n\t\t\t\t\t\tsearchBar={searchBar}\n\t\t\t\t\t/>\n\t\t\t\t</RenderersContext.Provider>\n\t\t\t</BasepathContext.Provider>\n\t\t</EngineContext.Provider>\n\t)\n}\n\ntype RuleProps = {\n\tdottedName: string\n\tsubEngineId?: number\n} & Pick<\n\tComponentProps<typeof RulePage>,\n\t| 'language'\n\t| 'apiDocumentationUrl'\n\t| 'apiEvaluateUrl'\n\t| 'npmPackage'\n\t| 'mobileMenuPortalId'\n\t| 'openNavButtonPortalId'\n\t| 'showDevSection'\n\t| 'searchBar'\n>\n\nfunction Rule({\n\tdottedName,\n\tlanguage,\n\tsubEngineId,\n\tsearchBar = false,\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n\tnpmPackage,\n\tmobileMenuPortalId,\n\topenNavButtonPortalId,\n\tshowDevSection,\n}: RuleProps) {\n\tconst baseEngine = useEngine()\n\tconst { References, Text } = useContext(RenderersContext)\n\tconst subEngines = baseEngine.context.subEngines\n\tconst useSubEngine = subEngineId && subEngines.has(subEngineId)\n\tconst engine =\n\t\tuseSubEngine ? (subEngines.get(subEngineId) as Engine) : baseEngine\n\n\tif (!(dottedName in engine.context.parsedRules)) {\n\t\treturn <p>Cette règle est introuvable dans la base</p>\n\t}\n\n\tengine.resetCache()\n\tengine.cache.traversedVariablesStack = []\n\tconst rule = engine.evaluateNode(\n\t\tengine.context.parsedRules[dottedName],\n\t) as EvaluatedNode<'rule'>\n\n\tconst { description, question } = rule.rawNode\n\tconst { valeur, nullableParent, ruleDisabledByItsParent } = rule.explanation\n\n\tconst situation = buildSituationUsedInRule(engine, rule)\n\n\tconst references = References?.({\n\t\treferences: rule.rawNode.références,\n\t\tdottedName: rule.dottedName,\n\t})\n\treturn (\n\t\t<EngineContext.Provider value={engine}>\n\t\t\t<Container id=\"documentation-rule-root\">\n\t\t\t\t<RulesNav\n\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\tmobileMenuPortalId={mobileMenuPortalId}\n\t\t\t\t\topenNavButtonPortalId={openNavButtonPortalId}\n\t\t\t\t\tsearchBar={searchBar}\n\t\t\t\t/>\n\t\t\t\t<Article>\n\t\t\t\t\t<DottedNameContext.Provider value={dottedName}>\n\t\t\t\t\t\t<RuleHeader dottedName={dottedName} />\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<Text>{description || question || ''}</Text>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<p style={{ fontSize: '1.25rem', lineHeight: '2rem' }}>\n\t\t\t\t\t\t\tValeur :{' '}\n\t\t\t\t\t\t\t{formatValue(rule, { language, precision: getPrecision(rule) })}\n\t\t\t\t\t\t\t{rule.nodeValue === undefined && rule.unit && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tUnité : {serializeUnit(rule.unit)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t{ruleDisabledByItsParent && nullableParent && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<blockquote>\n\t\t\t\t\t\t\t\t\tCette règle est <strong>non applicable</strong> car elle\n\t\t\t\t\t\t\t\t\tappartient à l’espace de nom :{' '}\n\t\t\t\t\t\t\t\t\t<Explanation node={nullableParent} />\n\t\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{useSubEngine && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmargin: '1rem 0',\n\t\t\t\t\t\t\t\t\tpadding: '0rem 1rem',\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t\t\t\t\t\t\tcolumnGap: '1rem',\n\t\t\t\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\t\t\t\t\tbackground: 'hsl(220, 60%, 97.5%)',\n\t\t\t\t\t\t\t\t\tborderRadius: '0.25rem',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tVous naviguez la documentation avec un{' '}\n\t\t\t\t\t\t\t\t\t<strong>contexte</strong> d’évaluation{' '}\n\t\t\t\t\t\t\t\t\t<strong>spécifique</strong>.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<div style={{ flex: 1 }} />\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\ttextAlign: 'right',\n\t\t\t\t\t\t\t\t\t\tmarginTop: 0,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<RuleLinkWithContext\n\t\t\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\t\t\tuseSubEngine={false}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tRetourner à la version de base\n\t\t\t\t\t\t\t\t\t</RuleLinkWithContext>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<h2>Comment cette donnée est-elle calculée&nbsp;?</h2>\n\n\t\t\t\t\t\t{rule.possibilities && <Explanation node={rule.possibilities} />}\n\t\t\t\t\t\t<div id=\"documentation-rule-explanation\">\n\t\t\t\t\t\t\t<Explanation node={valeur} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{rule.rawNode.note && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3>Note</h3>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Text>{rule.rawNode.note}</Text>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{references && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3>Références</h3>\n\t\t\t\t\t\t\t\t{references}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t{showDevSection && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3>Informations techniques</h3>\n\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t\tSi vous êtes développeur/euse vous trouverez ci-dessous des\n\t\t\t\t\t\t\t\t\tinformations techniques utiles pour l’intégration de cette\n\t\t\t\t\t\t\t\t\trègle dans votre application.\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t<DeveloperAccordion\n\t\t\t\t\t\t\t\t\tengine={engine}\n\t\t\t\t\t\t\t\t\tsituation={situation}\n\t\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\t\trule={rule}\n\t\t\t\t\t\t\t\t\tapiDocumentationUrl={apiDocumentationUrl}\n\t\t\t\t\t\t\t\t\tapiEvaluateUrl={apiEvaluateUrl}\n\t\t\t\t\t\t\t\t\tnpmPackage={npmPackage}\n\t\t\t\t\t\t\t\t></DeveloperAccordion>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</DottedNameContext.Provider>\n\t\t\t\t</Article>\n\t\t\t</Container>\n\t\t</EngineContext.Provider>\n\t)\n}\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-wrap: nowrap;\n\talign-items: flex-start;\n\t@media (max-width: ${breakpointsWidth.lg}) {\n\t\tflex-direction: column;\n\t}\n`\n\nconst Article = styled.article`\n\tflex-shrink: 1;\n\tmax-width: 100%;\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tmin-width: 0;\n\t\tpadding-left: 1rem;\n\t\tborder-left: 1px solid #e6e6e6;\n\t\tmargin-left: -1px;\n\t}\n`\n\n// We get related-to-rule variables from the current situation\nfunction buildSituationUsedInRule<Names extends string>(\n\tengine: Engine<Names>,\n\trule: EvaluatedNode & RuleNode,\n): Partial<Record<Names, PublicodesExpression>> {\n\tconst currentSituation = engine.getSituation()\n\n\tconst situationUsedInRule = Object.fromEntries(\n\t\tObject.entries(currentSituation).filter(([dottedName]) => {\n\t\t\tif (dottedName === rule.dottedName) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\treturn rule.traversedVariables?.includes(dottedName)\n\t\t}),\n\t) as Record<Names, PublicodesExpression>\n\n\treturn situationUsedInRule\n}\n", "import { reduceAST, type EvaluatedNode } from 'publicodes'\nexport function getPrecision(rule: EvaluatedNode<'rule'>) {\n\tif (typeof rule.nodeValue !== 'number') {\n\t\treturn\n\t}\n\tconst precision = reduceAST<undefined | number>(\n\t\t(acc, node) => {\n\t\t\tif ((node as EvaluatedNode).nodeValue !== rule.nodeValue) {\n\t\t\t\treturn acc\n\t\t\t}\n\t\t\tif (node.nodeKind === 'constant') {\n\t\t\t\treturn 20\n\t\t\t}\n\t\t\tif (node.nodeKind !== 'arrondi') {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst precision = (node.explanation.arrondi as EvaluatedNode).nodeValue\n\t\t\tif (typeof precision === 'number') {\n\t\t\t\treturn precision\n\t\t\t}\n\t\t\tif (precision === true) {\n\t\t\t\treturn 0\n\t\t\t}\n\t\t},\n\t\tundefined,\n\t\trule.explanation.valeur,\n\t)\n\treturn precision\n}\n", "import Engine, { EvaluatedNode, RuleNode, utils } from 'publicodes'\nimport { useContext } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { RenderersContext } from '../contexts'\nimport RuleSource from './RuleSource'\n\nconst Ul = styled.ul`\n\tpadding: 0;\n\tmax-height: 400px;\n\toverflow: auto;\n\tlist-style: none;\n`\n\nconst Li = styled.li`\n\tposition: relative;\n\tpadding-left: 1.5rem;\n\n\t&::before {\n\t\tcontent: '●';\n\t\tfont-size: 80%;\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\twidth: 1.5rem;\n\t\ttext-align: center;\n\t\tcolor: #b3b3b3;\n\t\tmargin-bottom: 0.5rem;\n\t}\n`\n\nexport function DeveloperAccordion({\n\trule,\n\tengine,\n\tdottedName,\n\tsituation = {},\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n\tnpmPackage,\n}: {\n\trule: EvaluatedNode<'rule'>\n\tengine: Engine\n\tdottedName: string\n\tsituation?: Record<string, unknown>\n\tapiDocumentationUrl?: string\n\tapiEvaluateUrl?: string\n\tnpmPackage?: string\n}) {\n\tconst { Accordion } = useContext(RenderersContext)\n\n\tconst accordionItems = [\n\t\t{\n\t\t\ttitle: 'Règle et situation',\n\t\t\tid: 'rule-situation',\n\t\t\tchildren: (\n\t\t\t\t<>\n\t\t\t\t\t<ActualRule engine={engine} dottedName={dottedName} />\n\n\t\t\t\t\t<ActualSituation situation={situation} />\n\t\t\t\t</>\n\t\t\t),\n\t\t},\n\t\t(apiDocumentationUrl && apiEvaluateUrl) || npmPackage ?\n\t\t\t{\n\t\t\t\ttitle:\n\t\t\t\t\t'Réutiliser ce calcul (' +\n\t\t\t\t\t[\n\t\t\t\t\t\tapiDocumentationUrl && apiEvaluateUrl ? 'API REST' : null,\n\t\t\t\t\t\tnpmPackage ? 'Paquet NPM' : null,\n\t\t\t\t\t]\n\t\t\t\t\t\t.filter((x) => x !== null)\n\t\t\t\t\t\t.join(' / ') +\n\t\t\t\t\t')',\n\t\t\t\tid: 'usage',\n\t\t\t\tchildren: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{utils.isExperimental(\n\t\t\t\t\t\t\tengine.baseContext.parsedRules,\n\t\t\t\t\t\t\tdottedName,\n\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t<StyledWarning>\n\t\t\t\t\t\t\t\t<h5>⚠️ Cette règle est tagguée comme experimentale ⚠️</h5>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tCela veut dire qu’elle peut être modifiée, renommée, ou\n\t\t\t\t\t\t\t\t\tsupprimée sans qu’il n’y ait de changement de version majeure\n\t\t\t\t\t\t\t\t\tdans l’API.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</StyledWarning>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{npmPackage && (\n\t\t\t\t\t\t\t<PackageUsage\n\t\t\t\t\t\t\t\trule={rule}\n\t\t\t\t\t\t\t\tsituation={situation}\n\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\tnpmPackage={npmPackage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{apiDocumentationUrl && apiEvaluateUrl && (\n\t\t\t\t\t\t\t<ApiUsage\n\t\t\t\t\t\t\t\tsituation={situation}\n\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\tapiDocumentationUrl={apiDocumentationUrl}\n\t\t\t\t\t\t\t\tapiEvaluateUrl={apiEvaluateUrl}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t}\n\t\t:\tnull,\n\t\t{\n\t\t\ttitle: 'Dépendances et effets de la règle',\n\t\t\tid: 'dependencies-effects',\n\t\t\tchildren: (\n\t\t\t\t<>\n\t\t\t\t\t<MissingVars selfMissing={Object.keys(rule.missingVariables)} />\n\n\t\t\t\t\t<ReverseMissing\n\t\t\t\t\t\tengine={engine}\n\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\truleIsNotDefined={rule.nodeValue === undefined}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Effect\n\t\t\t\t\t\tengine={engine}\n\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\treplacements={rule.replacements}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t),\n\t\t},\n\t].filter(<T,>(elem: T | null): elem is T => elem !== null)\n\n\treturn <Accordion items={accordionItems}></Accordion>\n}\n\nfunction ActualRule({\n\tengine,\n\tdottedName,\n}: {\n\tengine: Engine<string>\n\tdottedName: string\n}) {\n\tconst { Code } = useContext(RenderersContext)\n\n\treturn (\n\t\t<section>\n\t\t\t<h5>Règle actuelle</h5>\n\t\t\t<Code tabs={{ dottedName }} />\n\t\t\t<RuleSource dottedName={dottedName} engine={engine} />\n\t\t</section>\n\t)\n}\n\nfunction ActualSituation({\n\tsituation,\n}: {\n\tsituation: Record<string, unknown>\n}) {\n\tconst { Code } = useContext(RenderersContext)\n\n\tconst keys = Object.keys(situation)\n\n\tconst tabs = {\n\t\tjson: JSON.stringify(situation, null, 2),\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<h5>Situation actuelle</h5>\n\t\t\t{keys.length ?\n\t\t\t\t<p>\n\t\t\t\t\tVoici les données que vous avez saisies dans notre simulateur sous\n\t\t\t\t\tforme de JSON.\n\t\t\t\t</p>\n\t\t\t:\t<p>\n\t\t\t\t\tVotre situation est pour l’instant vide, vous n’avez probablement pas\n\t\t\t\t\tencore fait de simulation.\n\t\t\t\t</p>\n\t\t\t}\n\t\t\t<Code tabs={tabs} />\n\t\t</section>\n\t)\n}\n\nconst LINK_NPM_LABEL = 'Retrouvez ce paquet sur NPM'\nconst LINK_PUBLICODES_LABEL = 'moteur Publicodes'\n\nfunction PackageUsage({\n\trule,\n\tsituation,\n\tdottedName,\n\tnpmPackage,\n}: {\n\trule: EvaluatedNode<'rule'>\n\tsituation: Record<string, unknown>\n\tdottedName: string\n\tnpmPackage: string\n}) {\n\tconst { Code, Link } = useContext(RenderersContext)\n\n\tconst tabs = {\n\t\tnpmPackage: `// npm i publicodes ${npmPackage}\n\nimport Engine, { formatValue } from 'publicodes'\nimport rules from '${npmPackage}'\n\nconst engine = new Engine(rules)\nengine.setSituation(${JSON.stringify(situation, null, 2)})\n\n// ${rule.title}\nconst evaluation = engine.evaluate(${JSON.stringify(dottedName)})\n\nconsole.log(formatValue(evaluation))\n`,\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<h5>Lancer un calcul avec Publicodes</h5>\n\t\t\t<p>\n\t\t\t\tVous pouvez installer notre package de règles pour l’utiliser avec le{' '}\n\t\t\t\t<Link\n\t\t\t\t\ttitle={`${LINK_PUBLICODES_LABEL}, accéder au site publi.codes, nouvelle fenêtre`}\n\t\t\t\t\thref=\"https://publi.codes/\"\n\t\t\t\t>\n\t\t\t\t\t{LINK_PUBLICODES_LABEL}\n\t\t\t\t</Link>{' '}\n\t\t\t\tet ainsi effectuer vos propres calculs. Voici un exemple avec votre\n\t\t\t\tsituation et la règle actuelle :\n\t\t\t</p>\n\t\t\t<Code tabs={tabs} />\n\n\t\t\t<p style={{ textAlign: 'right' }}>\n\t\t\t\t<Link\n\t\t\t\t\thref={'https://www.npmjs.com/package/' + npmPackage}\n\t\t\t\t\ttitle={`${LINK_NPM_LABEL}, accéder à la page npm du package Publicodes, nouvelle fenêtre`}\n\t\t\t\t>\n\t\t\t\t\t<span aria-hidden>📦</span> {LINK_NPM_LABEL}\n\t\t\t\t</Link>\n\t\t\t</p>\n\t\t</section>\n\t)\n}\n\nconst LINK_API_LABEL = 'En savoir plus sur notre API REST'\n\nfunction ApiUsage({\n\tsituation,\n\tdottedName,\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n}: {\n\tsituation: Record<string, unknown>\n\tdottedName: string\n\tapiDocumentationUrl: string\n\tapiEvaluateUrl: string\n}) {\n\tconst { Code, Link } = useContext(RenderersContext)\n\n\tconst data = {\n\t\texpressions: [dottedName],\n\t\tsituation: situation,\n\t}\n\n\tconst tabs = {\n\t\tcurl: `curl '${apiEvaluateUrl}' \\\\\n  -H 'accept: application/json' \\\\\n  -H 'content-type: application/json' \\\\\n  --data-raw $'${JSON.stringify(data).replace(/'/g, \"'\\\\''\")}' \\\\\n  --compressed`,\n\t\t'fetch js': `const request = await fetch(\"${apiEvaluateUrl}\", {\n  \"headers\": { \"content-type\": \"application/json\" },\n  \"method\": \"POST\",\n  \"body\": JSON.stringify(${JSON.stringify(data, null, 2)}),\n})\nconst { evaluate } = await request.json()\n\nconsole.log(evaluate)`,\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<h5>Utiliser notre API REST</h5>\n\t\t\t<p>\n\t\t\t\tVous trouverez ici un exemple d’utilisation de notre API REST via curl\n\t\t\t\tou un fetch javascript.\n\t\t\t</p>\n\t\t\t<Code tabs={tabs} />\n\t\t\t{apiDocumentationUrl && (\n\t\t\t\t<p style={{ textAlign: 'right' }}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={apiDocumentationUrl}\n\t\t\t\t\t\ttitle={`${LINK_API_LABEL}, accéder à la documentation, nouvelle fenêtre`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span aria-hidden>👩‍💻</span> {LINK_API_LABEL}\n\t\t\t\t\t</Link>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</section>\n\t)\n}\n\nfunction MissingVars({ selfMissing }: { selfMissing: string[] }) {\n\treturn (\n\t\t<section>\n\t\t\t<h5>Données manquantes</h5>\n\t\t\t{selfMissing?.length ?\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLes règles suivantes sont nécessaires pour le calcul mais n’ont pas\n\t\t\t\t\t\tété saisies dans la situation. Leur valeur par défaut est utilisée.\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<Ul>\n\t\t\t\t\t\t{selfMissing.map((dottedName) => (\n\t\t\t\t\t\t\t<Li key={dottedName}>\n\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Ul>\n\t\t\t\t</>\n\t\t\t:\t<p>Il n’y a pas de données manquante.</p>}\n\t\t</section>\n\t)\n}\n\nconst isReplacementOfThisRule = (node: RuleNode, dottedName: string) =>\n\tnode &&\n\t'replacements' in node &&\n\tnode.replacements.some(\n\t\t({ replacedReference }) => replacedReference.dottedName === dottedName,\n\t)\n\nfunction ReverseMissing({\n\tengine,\n\tdottedName,\n\truleIsNotDefined = false,\n}: {\n\tengine: Engine\n\tdottedName: string\n\truleIsNotDefined?: boolean\n}) {\n\tconst ruleNamesWithMissing = Array.from(\n\t\tengine.context.referencesMaps.rulesThatUse.get(dottedName) ?? [],\n\t).filter(\n\t\t(ruleName) =>\n\t\t\truleName !== '$EVALUATION' &&\n\t\t\truleName in engine.context.parsedRules &&\n\t\t\t!engine.context.parsedRules[ruleName].private &&\n\t\t\t!isReplacementOfThisRule(\n\t\t\t\tengine.context.parsedRules[ruleName],\n\t\t\t\tdottedName,\n\t\t\t),\n\t)\n\n\treturn (\n\t\t<section>\n\t\t\t<h5>Règles qui ont besoin de cette valeur</h5>\n\n\t\t\t{ruleNamesWithMissing.length ?\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLes règles suivantes ont besoin de la règle courante pour être\n\t\t\t\t\t\tcalculées :\n\t\t\t\t\t\t{ruleIsNotDefined && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\tLa règle courante n’étant pas encore définie, c’est sa valeur\n\t\t\t\t\t\t\t\tpar défaut qui est utilisée pour déterminer la valeur de ces\n\t\t\t\t\t\t\t\trègles.\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</p>\n\t\t\t\t\t<Ul>\n\t\t\t\t\t\t{ruleNamesWithMissing.map((dottedName) => (\n\t\t\t\t\t\t\t<Li key={dottedName}>\n\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Ul>\n\t\t\t\t</>\n\t\t\t:\t<p>Aucune règle n’utilise cette valeur.</p>}\n\t\t</section>\n\t)\n}\n\nfunction Effect({\n\tengine,\n\tdottedName,\n\treplacements,\n}: {\n\tengine: Engine\n\tdottedName: string\n\treplacements: RuleNode['replacements']\n}) {\n\tconst effects = Array.from(\n\t\tengine.context.referencesMaps.rulesThatUse.get(dottedName) ?? [],\n\t).filter(\n\t\t(ruleName) =>\n\t\t\truleName !== '$EVALUATION' &&\n\t\t\truleName in engine.context.parsedRules &&\n\t\t\t!engine.context.parsedRules[ruleName].private &&\n\t\t\tisReplacementOfThisRule(engine.context.parsedRules[ruleName], dottedName),\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<section>\n\t\t\t\t<h5>Effets sur d’autres règles</h5>\n\t\t\t\t{replacements.length ?\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tUne règle peut avoir des effets sur d’autres règles afin de\n\t\t\t\t\t\t\tmodifier leur comportement.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Ul>\n\t\t\t\t\t\t\t{replacements.map((replacement) => (\n\t\t\t\t\t\t\t\t<Li\n\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: '0.5rem' }}\n\t\t\t\t\t\t\t\t\tkey={replacement.replacedReference.dottedName}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Explanation node={replacement} />\n\t\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Ul>\n\t\t\t\t\t</>\n\t\t\t\t:\t<p>Cette règle ne modifie aucune autre règle.</p>}\n\t\t\t</section>\n\n\t\t\t<section>\n\t\t\t\t<h5>Règles qui peuvent avoir un effet sur cette valeur</h5>\n\t\t\t\t{effects.length ?\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tLes règles suivantes peuvent remplacer la valeur de la règle\n\t\t\t\t\t\t\tcourante :\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Ul>\n\t\t\t\t\t\t\t{effects.map((dottedName) => (\n\t\t\t\t\t\t\t\t<Li key={dottedName}>\n\t\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Ul>\n\t\t\t\t\t</>\n\t\t\t\t:\t<p>Aucune autre règle n’a d’effets sur cette valeur.</p>}\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nconst StyledWarning = styled.div``\n", "import Engine, { formatValue, utils } from 'publicodes'\nconst { encodeRuleName } = utils\n\ntype Props = { dottedName: string; engine: Engine }\n\nexport default function RuleSource({ engine, dottedName }: Props) {\n\tconst href = useRuleSource(engine, dottedName)\n\n\tif (typeof window !== 'undefined' && window.location.host === 'publi.codes') {\n\t\treturn null\n\t}\n\n\tconst linkLabel = 'Afficher la règle dans le bac à sable Publicodes'\n\n\treturn (\n\t\t<p style={{ textAlign: 'right' }}>\n\t\t\t<a\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\thref={href}\n\t\t\t\ttitle={`${linkLabel}, nouvelle fenêtre`}\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>\n\t\t\t\t<span aria-hidden>✍️</span> {linkLabel}\n\t\t\t</a>\n\t\t</p>\n\t)\n}\n\nexport const useRuleSource = (engine: Engine, dottedName: string) => {\n\t// Array.from is a workaround for https://github.com/facebook/docusaurus/issues/7606#issuecomment-1330452598\n\tconst dependencies = Array.from(\n\t\tengine.context.referencesMaps.referencesIn.get(dottedName) ?? [],\n\t)\n\n\tconst node = engine.evaluateNode(engine.context.parsedRules[dottedName])\n\n\tconst rules = {\n\t\t[dottedName]: Object.fromEntries(\n\t\t\tObject.entries(node.rawNode).filter(([key]) => key !== 'nom'),\n\t\t),\n\t}\n\n\t// When we import a rule in the Publicodes Studio, we need to provide a\n\t// simplified definition of its dependencies to avoid undefined references.\n\tconst situation = Object.fromEntries(\n\t\tdependencies\n\t\t\t.filter((name) => name !== dottedName && !name.endsWith(' . $SITUATION'))\n\t\t\t.map((dottedName) => [dottedName, formatValueForStudio(node)]),\n\t)\n\n\tconst source = encodeURIComponent(JSON.stringify({ rules, situation }))\n\n\treturn `https://publi.codes/studio/${encodeRuleName(dottedName)}#${source}`\n}\n\n// TODO: This formating function should be in the core code. We need to think\n// about the different options of the formatting options and our use cases\n// (putting a value in the URL #1169, importing a value in the Studio, showing a value\n// on screen)\nfunction formatValueForStudio(node: Parameters<typeof formatValue>[0]) {\n\tconst base = formatValue(node)\n\t\t.replace(/\\s\\/\\s/g, '/')\n\t\t.replace(/(\\d)\\s(\\d)/g, '$1$2')\n\t\t.replace(',', '.')\n\tif (base.match(/^[0-9]/) || base === 'Oui' || base === 'Non') {\n\t\treturn base.toLowerCase()\n\t} else if (base === '-') {\n\t\treturn 'non'\n\t} else {\n\t\treturn `'${base}'`\n\t}\n}\n", "import { utils } from 'publicodes'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { useEngine } from '../hooks'\nimport Meta from './Meta'\n\nexport default function RuleHeader({ dottedName }: { dottedName: string }) {\n\tconst engine = useEngine()\n\tconst {\n\t\ttitle,\n\t\trawNode: { description, question, icônes },\n\t} = engine.context.parsedRules[dottedName]\n\tconst displayTitle = icônes ? title + ' ' + icônes : title\n\treturn (\n\t\t<header>\n\t\t\t<Meta title={displayTitle} description={description || question} />\n\t\t\t<div>\n\t\t\t\t<span id=\"rules-nav-open-nav-button\">\n\t\t\t\t\t{/* Portal for OpenNavButton in RulesNav */}\n\t\t\t\t</span>\n\t\t\t\t{utils\n\t\t\t\t\t.ruleParents(dottedName)\n\t\t\t\t\t.reverse()\n\t\t\t\t\t.map((parentDottedName) => (\n\t\t\t\t\t\t<span key={parentDottedName}>\n\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={parentDottedName} displayIcon />\n\t\t\t\t\t\t\t<span aria-hidden>{' › '}</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<h1>\n\t\t\t\t<RuleLinkWithContext dottedName={dottedName} displayIcon />\n\t\t\t</h1>\n\t\t</header>\n\t)\n}\n", "import { useContext } from 'react'\nimport { RenderersContext } from '../contexts'\n\ntype PropType = {\n\ttitle: string\n\tdescription?: string\n}\n\nexport default function Meta({ title, description }: PropType) {\n\tconst { Head } = useContext(RenderersContext)\n\tif (!Head) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<Head>\n\t\t\t<title>{title}</title>\n\t\t\t<meta property=\"og:type\" content=\"article\" />\n\t\t\t<meta property=\"og:title\" content={title} />\n\t\t\t{description && <meta property=\"og:description\" content={description} />}\n\t\t\t{description && <meta name=\"description\" content={description} />}\n\t\t</Head>\n\t)\n}\n", "import { utils } from 'publicodes'\nimport {\n\tlazy,\n\tmemo,\n\tReactNode,\n\tRefObject,\n\tSuspense,\n\tuseCallback,\n\tuseEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport { styled } from 'styled-components'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { Arrow } from '../component/icons/Arrow'\nimport { Close } from '../component/icons/Close'\nimport { useEngine } from '../hooks'\n\nconst RulesSearch = lazy(() => import('./RulesSearch'))\n\ninterface Props {\n\tdottedName: string\n\tsearchBar: boolean\n\tmobileMenuPortalId?: string\n\topenNavButtonPortalId?: string\n}\n\nexport const RulesNav = ({\n\tdottedName,\n\tsearchBar,\n\tmobileMenuPortalId,\n\topenNavButtonPortalId,\n}: Props) => {\n\tconst baseEngine = useEngine()\n\tconst parsedRules = baseEngine.getParsedRules()\n\tconst parsedRulesNames = useMemo(\n\t\t() => Object.keys(parsedRules).sort((a, b) => a.localeCompare(b)),\n\t\t[parsedRules],\n\t)\n\n\tconst [navOpen, setNavOpen] = useState(false)\n\n\tconst initLevel = (dn: string) =>\n\t\tObject.fromEntries([\n\t\t\t[dn, true],\n\t\t\t...utils.ruleParents(dn).map((parent) => [parent, true]),\n\t\t] as [string, boolean][])\n\n\tconst [level, setLevel] = useState(initLevel(dottedName))\n\n\tuseEffect(() => {\n\t\tsetLevel((prev) => ({ ...prev, ...initLevel(dottedName) }))\n\t}, [dottedName])\n\n\tconst toggleDropdown = useCallback((ruleDottedName: string) => {\n\t\tsetLevel((prevLevel) =>\n\t\t\t!prevLevel[ruleDottedName] ?\n\t\t\t\t{\n\t\t\t\t\t...prevLevel,\n\t\t\t\t\t[ruleDottedName]: !prevLevel[ruleDottedName],\n\t\t\t\t}\n\t\t\t:\tObject.fromEntries(\n\t\t\t\t\tObject.entries(prevLevel).map(([dot, val]) =>\n\t\t\t\t\t\tdot.startsWith(ruleDottedName) ? [dot, false] : [dot, val],\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t)\n\t}, [])\n\n\tconst openNavButtonPortalElement =\n\t\ttypeof window === 'undefined' ? null : (\n\t\t\t(openNavButtonPortalId &&\n\t\t\t\twindow.document.getElementById(openNavButtonPortalId)) ||\n\t\t\twindow.document.getElementById('rules-nav-open-nav-button')\n\t\t)\n\n\tconst openNavButtonRef = useRef<HTMLButtonElement>(null)\n\n\tuseEffect(() => {\n\t\tif (openNavButtonRef.current && !navOpen) {\n\t\t\topenNavButtonRef.current.focus()\n\t\t}\n\t}, [openNavButtonRef, navOpen])\n\n\tconst navRef = useRef<HTMLDivElement>(null)\n\tuseEffect(() => {\n\t\tif (!navRef.current || !navOpen) {\n\t\t\treturn\n\t\t}\n\n\t\tconst focusableElements = navRef.current.querySelectorAll(\n\t\t\t'a[href], button, textarea, input, select, [tabindex]:not([tabindex=\"-1\"])',\n\t\t)\n\n\t\tconst firstElement = focusableElements[0] as HTMLElement\n\t\tconst lastElement = focusableElements[\n\t\t\tfocusableElements.length - 1\n\t\t] as HTMLElement\n\n\t\tconst handleKeyDown = (event: KeyboardEvent) => {\n\t\t\tif (openNavButtonPortalElement && navOpen) {\n\t\t\t\tif (event.key === 'Escape') {\n\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\tsetNavOpen(false)\n\t\t\t\t} else if (event.key === 'Tab' && navRef.current) {\n\t\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\t\tif (document.activeElement === firstElement) {\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\tlastElement.focus()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (document.activeElement === lastElement) {\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\tfirstElement.focus()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tnavRef.current.addEventListener('keydown', handleKeyDown)\n\n\t\treturn () => {\n\t\t\tif (navRef.current) {\n\t\t\t\tnavRef.current.removeEventListener('keydown', handleKeyDown)\n\t\t\t}\n\t\t}\n\t}, [navRef, navOpen])\n\n\tconst menu = (\n\t\t<Container $open={navOpen}>\n\t\t\t<Background\n\t\t\t\t$open={navOpen}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetNavOpen((open) => !open)\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t{/* Portal in Header */}\n\t\t\t{openNavButtonPortalElement &&\n\t\t\t\tReactDOM.createPortal(\n\t\t\t\t\t<OpenNavButton\n\t\t\t\t\t\tref={openNavButtonRef}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetNavOpen(true)\n\t\t\t\t\t\t\tif (navRef.current) {\n\t\t\t\t\t\t\t\tnavRef.current.focus()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tToutes les règles\n\t\t\t\t\t</OpenNavButton>,\n\t\t\t\t\topenNavButtonPortalElement,\n\t\t\t\t)}\n\t\t\t<NavContainer\n\t\t\t\trole={navOpen ? 'dialog' : undefined}\n\t\t\t\taria-modal={navOpen ? 'true' : undefined}\n\t\t\t\taria-label={navOpen ? 'Menu de navigation' : undefined}\n\t\t\t\t$open={navOpen}\n\t\t\t\tref={navRef}\n\t\t\t\ttabIndex={-1}\n\t\t\t>\n\t\t\t\t<nav\n\t\t\t\t\trole=\"navigation\"\n\t\t\t\t\taria-label=\"Menu de navigation sur les règles de la documentation\"\n\t\t\t\t>\n\t\t\t\t\t{searchBar ?\n\t\t\t\t\t\t<Suspense fallback={<p>Chargement...</p>}>\n\t\t\t\t\t\t\t<RulesSearch />\n\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t:\tnull}\n\t\t\t\t\t<NavUl\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetNavOpen(false)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trules={parsedRulesNames}\n\t\t\t\t\t\tlevel={level}\n\t\t\t\t\t\tnavRef={navRef}\n\t\t\t\t\t\ttoggleDropdown={toggleDropdown}\n\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\tparentName=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</nav>\n\t\t\t\t{navOpen && (\n\t\t\t\t\t<CloseButton\n\t\t\t\t\t\taria-label=\"Fermer le menu de navigation\"\n\t\t\t\t\t\tonClick={() => setNavOpen(false)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Close />\n\t\t\t\t\t</CloseButton>\n\t\t\t\t)}\n\t\t\t</NavContainer>\n\t\t</Container>\n\t)\n\n\tconst isMobileMenu =\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.matchMedia(`(max-width: ${breakpointsWidth.lg})`).matches\n\n\tconst mobileMenuPortalElement =\n\t\ttypeof window !== 'undefined' && mobileMenuPortalId ?\n\t\t\twindow.document.getElementById(mobileMenuPortalId)\n\t\t:\tnull\n\n\treturn isMobileMenu && mobileMenuPortalElement ?\n\t\t\tReactDOM.createPortal(menu, mobileMenuPortalElement)\n\t\t:\tmenu\n}\n\ntype NavUlProps = {\n\trules: string[]\n\tlevel: Record<string, boolean>\n\tnavRef: RefObject<HTMLDivElement>\n\tonClick: () => void\n\ttoggleDropdown: (name: string) => void\n\tdottedName: string\n\tparentName: string\n}\nconst NavUl = ({\n\trules,\n\tlevel,\n\tnavRef,\n\tonClick,\n\ttoggleDropdown,\n\tdottedName,\n\tparentName,\n}: NavUlProps) => {\n\treturn (\n\t\t<ul>\n\t\t\t{rules.map((ruleDottedName) => {\n\t\t\t\tconst parentDottedName = utils.ruleParent(ruleDottedName)\n\t\t\t\tif (parentDottedName !== parentName) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst open = ruleDottedName in level && level[ruleDottedName]\n\t\t\t\treturn (\n\t\t\t\t\t<MemoNavLi\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\tkey={ruleDottedName}\n\t\t\t\t\t\truleDottedName={ruleDottedName}\n\t\t\t\t\t\topen={open}\n\t\t\t\t\t\tactive={dottedName === ruleDottedName}\n\t\t\t\t\t\tonClickDropdown={toggleDropdown}\n\t\t\t\t\t\tnavRef={navRef}\n\t\t\t\t\t>\n\t\t\t\t\t\t{level[ruleDottedName] && (\n\t\t\t\t\t\t\t<NavUl\n\t\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\t\trules={rules}\n\t\t\t\t\t\t\t\tlevel={level}\n\t\t\t\t\t\t\t\tnavRef={navRef}\n\t\t\t\t\t\t\t\ttoggleDropdown={toggleDropdown}\n\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\tparentName={ruleDottedName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</MemoNavLi>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ul>\n\t)\n}\n\ntype NavLiProps = {\n\truleDottedName: string\n\topen: boolean\n\tactive: boolean\n\tonClick: () => void\n\tonClickDropdown: (ruleDottedName: string) => void\n\tnavRef: RefObject<HTMLDivElement>\n\tchildren?: ReactNode\n}\nconst NavLi = ({\n\truleDottedName,\n\topen,\n\tactive,\n\tonClick,\n\tonClickDropdown,\n\tnavRef,\n\tchildren,\n}: NavLiProps) => {\n\tconst baseEngine = useEngine()\n\n\tconst parsedRules = baseEngine.getParsedRules()\n\tconst childrenCount = Object.keys(parsedRules).reduce(\n\t\t(acc, ruleDot) =>\n\t\t\t(\n\t\t\t\truleDot.startsWith(ruleDottedName + ' . ') &&\n\t\t\t\truleDot.split(' . ').length === ruleDottedName.split(' . ').length + 1\n\t\t\t) ?\n\t\t\t\tacc + 1\n\t\t\t:\tacc,\n\t\t0,\n\t)\n\tconst initialRender = useRef(true)\n\tconst activeLi = useRef<HTMLLIElement>(null)\n\tuseEffect(() => {\n\t\tif (initialRender.current) {\n\t\t\tinitialRender.current = false\n\t\t\treturn\n\t\t}\n\t\tif (navRef.current && activeLi.current?.offsetTop) {\n\t\t\tnavRef.current.scrollTop = activeLi.current?.offsetTop\n\t\t}\n\t}, [active])\n\treturn (\n\t\t<li\n\t\t\tkey={ruleDottedName}\n\t\t\tref={active ? activeLi : undefined}\n\t\t\tstyle={{\n\t\t\t\tpaddingLeft: (ruleDottedName.split(' . ').length - 1) * 16,\n\t\t\t}}\n\t\t\tclassName={childrenCount > 0 ? 'dropdown ' : ''}\n\t\t>\n\t\t\t<span className={`content ${active ? 'active ' : ''}`}>\n\t\t\t\t<RuleLinkWithContext\n\t\t\t\t\tdottedName={ruleDottedName}\n\t\t\t\t\tdisplayIcon\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t/>\n\t\t\t\t{childrenCount > 0 && (\n\t\t\t\t\t<DropdownButton\n\t\t\t\t\t\taria-label={open ? 'Replier le sous-menu' : 'Déplier le sous-menu'}\n\t\t\t\t\t\taria-expanded={open}\n\t\t\t\t\t\tonClick={() => onClickDropdown(ruleDottedName)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StyledArrow $open={open} />\n\t\t\t\t\t</DropdownButton>\n\t\t\t\t)}\n\t\t\t</span>\n\t\t\t{children}\n\t\t</li>\n\t)\n}\n\nconst MemoNavLi = memo(NavLi)\n\nexport const breakpointsWidth = {\n\tsm: '576px',\n\tmd: '768px',\n\tlg: '992px',\n\txl: '1200px',\n}\n\nconst Container = styled.div<{ $open: boolean }>`\n\tz-index: 200;\n\toverflow: auto;\n\tposition: sticky;\n\ttop: 0;\n\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tmax-width: 50%;\n\t\tflex-shrink: 0;\n\t}\n`\n\nconst Background = styled.div<{ $open: boolean }>`\n\tbackground: rgb(0 0 0 / 25%);\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0;\n\tright: 0;\n\tz-index: 200;\n\ttransition: ease-in-out 0.25s;\n\ttransition-property: visibility, opacity;\n\tvisibility: ${({ $open }) => ($open ? 'visible' : 'hidden')};\n\topacity: ${({ $open }) => ($open ? '1' : '0')};\n\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tdisplay: none;\n\t}\n`\n\nconst OpenNavButton = styled.button`\n\tmargin: 0.25rem 0;\n\tmargin-right: 0.5rem;\n\tbackground: none;\n\tborder: 1px solid rgb(29, 66, 140);\n\tborder-radius: 3px;\n\tcolor: rgb(29, 66, 140);\n\tpadding: 0.5rem;\n\tdisplay: inline-block;\n\n\t&:hover {\n\t\tbackground-color: rgb(219, 231, 255);\n\t}\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tdisplay: none;\n\t}\n`\n\nconst NavContainer = styled.div<{ $open: boolean }>`\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tflex-shrink: 0;\n\t}\n\tborder-right: 1px solid #e6e6e6;\n\toverflow: auto;\n\tmax-height: calc(100vh - 2rem);\n\tposition: sticky;\n\ttop: 0;\n\t@media (max-width: ${breakpointsWidth.lg}) {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tpadding-top: 1rem;\n\t\tpadding-right: 2rem;\n\t\tbottom: 0;\n\t\tz-index: 200;\n\t\tmax-height: initial;\n\t\tbackground: white;\n\t\tmax-width: 80vw;\n\t\theight: 100%;\n\n\t\ttransition: all ease-in-out 0.25s;\n\t\t${({ $open }) => ($open ? '' : 'transform: translateX(-100%);')}\n\t}\n\n\t&:focus {\n\t\toutline: none;\n\t}\n\n\tul {\n\t\tflex-wrap: nowrap;\n\t\tmargin: 0;\n\n\t\tpadding: 0;\n\t\tlist-style: none;\n\t\tli {\n\t\t\tmargin-bottom: 3px;\n\t\t\tmax-width: 350px;\n\t\t\t.content {\n\t\t\t\tborder-radius: 3px;\n\t\t\t\tpadding: 3px 1rem;\n\t\t\t\tdisplay: flex;\n\t\t\t\twidth: fit-content;\n\t\t\t\talign-items: center;\n\t\t\t\tflex-direction: row-reverse;\n\t\t\t\tflex-wrap: nowrap;\n\t\t\t}\n\n\t\t\tspan {\n\t\t\t\t&.active {\n\t\t\t\t\tbackground-color: #e6e6e6;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&:not(.active) a {\n\t\t\t\tfont-weight: normal;\n\t\t\t}\n\t\t\t&:not(.dropdown) .content:after {\n\t\t\t\tcontent: ' ';\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tbackground-color: #b3b3b3;\n\t\t\t\tmin-width: 0.5rem;\n\t\t\t\tmin-height: 0.5rem;\n\t\t\t\tborder-radius: 0.5rem;\n\t\t\t\tmargin-left: 0.5rem;\n\t\t\t\tmargin-right: 1.25rem;\n\t\t\t\tpointer-events: none;\n\t\t\t}\n\t\t}\n\t}\n`\n\nconst DropdownButton = styled.button`\n\tmargin-right: 0.75rem;\n\tflex-shrink: 0;\n\tbackground: none;\n\tborder: 1px solid #b3b3b3;\n\tborder-radius: 2rem;\n\twidth: 1.5rem;\n\theight: 1.5rem;\n\tcolor: #999;\n\tpadding: 0;\n\tdisplay: inline-block;\n`\n\nconst StyledArrow = styled(Arrow)<{ $open: boolean }>`\n\twidth: 100%;\n\ttransition: transform 0.1s;\n\theight: 100%;\n\ttransform: rotate(${({ $open }) => ($open ? '0deg' : '-90deg')});\n`\n\nconst CloseButton = styled.button`\n\tcursor: pointer;\n\tposition: absolute;\n\tborder-radius: 0.25rem;\n\ttop: 0.25rem;\n\tpadding: 0.25rem;\n\tright: 0.25rem;\n\theight: 1.5rem;\n\tbackground-color: transparent;\n\tborder: none;\n\n\t&:hover {\n\t\tbackground-color: #e6e6e6;\n\t}\n`\n", "interface Props {\n\tclassName?: string\n}\n\nexport const Close = ({ className }: Props) => (\n\t<svg\n\t\taria-hidden=\"true\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"16\"\n\t\theight=\"16\"\n\t\tviewBox=\"0 0 16 16\"\n\t\tfill=\"currentcolor\"\n\t\tclassName={className}\n\t>\n\t\t<path\n\t\t\td=\"M9.04286 8L13 11.9571V13H11.9571L8 9.04286L4.04286 13H3V11.9571L6.95714 8L3 4.04286V3H4.04286L8 6.95714L11.9571 3H13V4.04286L9.04286 8Z\"\n\t\t\tfill=\"currentcolor\"\n\t\t/>\n\t</svg>\n)\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "utils", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "formatValue", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "formatValue", "import_jsx_runtime", "import_react", "formatValue", "serializeUnit", "utils", "import_react", "utils", "import_jsx_runtime", "import_react", "formatValue", "utils", "import_jsx_runtime", "jsx", "jsxs", "styled", "Fragment", "useContext", "useState", "css", "formatValue", "StyledExplanation", "MecanismArrondi", "node", "precision", "dottedName", "utils", "useMemo", "ReactDOM", "useRef", "useEffect", "Container", "serializeUnit"]
}
