{
  "version": 3,
  "sources": ["../../../../node_modules/@publicodes/react-ui/src/contexts.tsx", "../../../../node_modules/@publicodes/react-ui/src/component/Accordion.tsx", "../../../../node_modules/@publicodes/react-ui/src/component/icons/Arrow.tsx", "../../../../node_modules/@publicodes/react-ui/src/component/Code.tsx", "../../../../node_modules/@publicodes/react-ui/src/rule/References.tsx", "../../../../node_modules/@publicodes/react-ui/src/hooks.ts", "../../../../node_modules/@publicodes/react-ui/src/RuleLink.tsx"],
  "sourcesContent": ["import Engine from 'publicodes'\nimport { ComponentProps, ComponentType, createContext, ReactNode } from 'react'\nimport { Accordion, AccordionProps, Code, CodeProps } from './component'\nimport References from './rule/References'\n\ntype PartialRequired<T, R extends keyof T> = Omit<T, R> & Required<Pick<T, R>>\n\nexport type AccordionItem = { title: string; id: string; children: ReactNode }\n\n/**\n * The custom renderers for the markdown content.\n */\nexport type SupportedRenderers = {\n\tLink?: ComponentType<{\n\t\tchildren: ReactNode\n\t\tto?: string\n\t\thref?: string\n\t\ttitle?: string\n\t\tsmall?: boolean\n\t\t'aria-label'?: string\n\t\tonClick?: () => void\n\t}>\n\n\tHead?: ComponentType<{ children: ReactNode }>\n\n\t/**\n\t * Used to render a rule description or title. Useful to parse markdown, links\n\t * or emojies.\n\t */\n\tText?: ComponentType<{ children: string }>\n\tReferences?: typeof References\n\t/**\n\t * Accordion used for developer documentation.\n\t */\n\tAccordion?: ComponentType<AccordionProps>\n\t/**\n\t * Block of code in pre\n\t */\n\tCode?: ComponentType<CodeProps>\n}\n\nconst DefaultTextRenderer = ({\n\tchildren,\n}: ComponentProps<RenderersCtx['Text']>) => <p>{children}</p>\n\nconst DefaultLinkRenderer = (props: ComponentProps<RenderersCtx['Link']>) => (\n\t<a {...props} />\n)\n\nexport type RenderersCtx = PartialRequired<\n\tSupportedRenderers,\n\t'References' | 'Text' | 'Code' | 'Link' | 'Accordion'\n>\n\nexport const defaultRenderers = (renderers: SupportedRenderers = {}) => {\n\tconst base: RenderersCtx = {\n\t\tReferences,\n\t\tText: DefaultTextRenderer,\n\t\tCode,\n\t\tAccordion,\n\t\tLink: DefaultLinkRenderer,\n\t}\n\n\treturn Object.fromEntries(\n\t\t(\n\t\t\t[...Object.keys(base), ...Object.keys(renderers)] as Array<\n\t\t\t\tkeyof SupportedRenderers\n\t\t\t>\n\t\t)\n\t\t\t.map((key) => [key, renderers[key] ?? base[key]])\n\t\t\t.filter(([, val]) => val),\n\t) as RenderersCtx\n}\n\nexport const RenderersContext = createContext<RenderersCtx>(defaultRenderers())\n\nexport const BasepathContext = createContext<string>('/documentation')\n\nexport const DottedNameContext = createContext<string | undefined>(undefined)\n\nexport const EngineContext = createContext<Engine<string> | undefined>(\n\tundefined,\n)\n", "import { useState } from 'react'\nimport { css, styled } from 'styled-components'\nimport { AccordionItem } from '../contexts'\nimport { Arrow } from './icons/Arrow'\n\nconst AccordionContainer = styled.div`\n\toverflow: hidden;\n\tborder-radius: 6px;\n\tborder: 1px solid #bbb;\n`\n\nconst H4 = styled.h4`\n\tfont-weight: 700;\n\tmargin: 2rem 0px 1rem;\n\tfont-size: 1.25rem;\n\tline-height: 1.75rem;\n\n\tbutton {\n\t\tdisplay: flex;\n\t\tflex-wrap: nowrap;\n\t\tflex-direction: row;\n\t\talign-content: center;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\ttext-align: left;\n\t\twidth: 100%;\n\t\theight: 50px;\n\t\tborder: none;\n\t\tpadding: 1.5rem;\n\t\tcursor: pointer;\n\t\tfont-size: 1rem;\n\t\tfont-weight: bold;\n\n\t\t&:hover {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n`\n\nconst AccordionWrapper = styled.div<{ i: number }>`\n\tborder: 0 solid #bbb;\n\t${({ i }) =>\n\t\ti > 0 &&\n\t\tcss`\n\t\t\tborder-top-width: 1px;\n\t\t`}\n\n\t& ${H4} {\n\t\tmargin: 0;\n\t}\n`\n\nconst Child = styled.div<{ open: boolean }>`\n\tdisplay: ${({ open }) => (open ? 'block' : 'none')};\n\tmargin: 1.5rem;\n`\n\nconst StyledArrow = styled(Arrow)<{ $isOpen: boolean }>`\n\tdisplay: inline-block;\n\twidth: 25px;\n\ttransition: transform 0.1s;\n\theight: 25px;\n\ttransform: rotate(${({ $isOpen }) => ($isOpen ? `180deg` : `360deg`)});\n`\n\nexport interface AccordionProps {\n\titems: AccordionItem[]\n}\n\nexport const Accordion = ({ items }: AccordionProps) => {\n\tconst [open, setOpen] = useState<boolean[]>([])\n\n\tconst toggleAccordion = (i: number) => () =>\n\t\tsetOpen((arr) => {\n\t\t\tarr[i] = !arr[i]\n\n\t\t\treturn [...arr]\n\t\t})\n\n\treturn (\n\t\t<AccordionContainer>\n\t\t\t{items.map(({ id, title, children }, i) => (\n\t\t\t\t<AccordionWrapper id={id} key={id} i={i}>\n\t\t\t\t\t<H4>\n\t\t\t\t\t\t<button onClick={toggleAccordion(i)}>\n\t\t\t\t\t\t\t<span>{title}</span>\n\t\t\t\t\t\t\t<StyledArrow $isOpen={open[i]} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</H4>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Child open={!!open[i]}>{children}</Child>\n\t\t\t\t\t</div>\n\t\t\t\t</AccordionWrapper>\n\t\t\t))}\n\t\t</AccordionContainer>\n\t)\n}\n", "interface Props {\n\tclassName?: string\n}\n\nexport const Arrow = ({ className }: Props) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\theight=\"24px\"\n\t\tviewBox=\"0 0 24 24\"\n\t\twidth=\"24px\"\n\t\tfill=\"#000000\"\n\t\tclassName={className}\n\t\taria-hidden=\"true\"\n\t>\n\t\t<path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n\t\t<path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\" />\n\t</svg>\n)\n", "import { useState } from 'react'\nimport { styled } from 'styled-components'\n\nconst PreWrapper = styled.div`\n\tposition: relative;\n\t:hover button,\n\t:focus-within button {\n\t\topacity: 1;\n\t}\n`\n\nconst Bar = styled.div`\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\tmargin: 0 0.5rem;\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 0.5rem;\n\tline-height: 0;\n\n\t& button {\n\t\ttransform: translateT(-50%);\n\t\tmargin: 0;\n\t\tpadding: 1px 3px;\n\t\ttransition: opacity ease-in-out 0.1s;\n\t\tcursor: pointer;\n\t}\n`\n\nconst Pre = styled.pre`\n\toverflow: auto;\n\tpadding: 0.5rem;\n\tbackground-color: #e6e9ec;\n\tborder-radius: 0.25rem;\n`\n\nexport interface CodeProps {\n\ttabs: { [name: string]: string }\n}\n\nexport const Code = ({ tabs }: CodeProps) => {\n\tconst [tab, setTab] = useState<string>()\n\tconst tabKeys = Object.keys(tabs)\n\n\tconst activeTab = tab ?? tabKeys[0]\n\n\treturn (\n\t\t<PreWrapper>\n\t\t\t<Bar>\n\t\t\t\t{typeof navigator !== 'undefined' && navigator.clipboard && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tvoid navigator.clipboard.writeText(tabs[activeTab])\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tcopier\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{tabKeys.length > 1 &&\n\t\t\t\t\ttabKeys\n\t\t\t\t\t\t.filter((name) => name !== activeTab)\n\t\t\t\t\t\t.map((name) => (\n\t\t\t\t\t\t\t<button key={name} onClick={() => setTab(name)}>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t))}\n\t\t\t</Bar>\n\t\t\t<Pre>\n\t\t\t\t<code>{tabs[activeTab]}</code>\n\t\t\t</Pre>\n\t\t</PreWrapper>\n\t)\n}\n", "import { capitalise0 } from 'publicodes'\n\ntype ReferencesProps = {\n\treferences?: Record<string, string>\n\tdottedName?: string // Useful for extending reference component in userdom\n}\n\nexport default function References({ references }: ReferencesProps) {\n\tif (!references) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<ul>\n\t\t\t{Object.entries(references).map(([name, link]) => (\n\t\t\t\t<li\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t}}\n\t\t\t\t\tkey={name}\n\t\t\t\t>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={link}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginRight: '1rem',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{capitalise0(name)}\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n}\n", "import { useContext } from 'react'\nimport { EngineContext } from './contexts'\n\nexport const useEngine = () => {\n\tconst engine = useContext(EngineContext)\n\tif (!engine) {\n\t\tthrow new Error('Engine expected')\n\t}\n\n\treturn engine\n}\n", "import Engine, { utils } from 'publicodes'\nimport { ComponentProps, useContext } from 'react'\nimport {\n\tBasepathContext,\n\tDottedNameContext,\n\tRenderersContext,\n\tSupportedRenderers,\n} from './contexts'\nimport { useEngine } from './hooks'\n\nconst { encodeRuleName } = utils\n\n/**\n * Create a link to a rule in the documentation.\n *\n * @param props\n * @group Components\n *\n */\nexport function RuleLink<Name extends string>({\n\tdottedName,\n\tengine,\n\tcurrentEngineId,\n\tdocumentationPath,\n\tdisplayIcon = false,\n\tlinkComponent,\n\tchildren,\n\t...propsRest\n}: {\n\t/**\n\t * The dotted name of the rule.\n\t */\n\tdottedName: Name\n\t/**\n\t * The engine instance containing the rule.\n\t */\n\tengine: Engine<Name>\n\t/**\n\t * The base path for the documentation.\n\t */\n\tdocumentationPath: string\n\t/**\n\t * Whether to display an icon next to the link.\n\t */\n\tdisplayIcon?: boolean\n\t/**\n\t * The current engine ID, if applicable.\n\t */\n\tcurrentEngineId?: number\n\t/**\n\t * A custom link component to use for rendering the link.\n\t */\n\tlinkComponent?: SupportedRenderers['Link']\n\t/**\n\t * The children to render inside the link\n\t * @default The title of the rule\n\t */\n\tchildren?: React.ReactNode\n\t/**\n\t * The href attribute for the link.\n\t */\n\thref?: string\n\t/**\n\t * The title attribute for the link.\n\t */\n\ttitle?: string\n\t/**\n\t * Whether to render the link in a smaller size.\n\t */\n\tsmall?: boolean\n\t/**\n\t * The aria-label attribute for the link.\n\t */\n\t'aria-label'?: string\n\t/**\n\t * * Custom function when the link is clicked\n\t */\n\tonClick?: () => void\n}) {\n\tconst renderers = useContext(RenderersContext)\n\tconst dottedNameContext = utils.findCommonAncestor(\n\t\tuseContext(DottedNameContext) ?? dottedName,\n\t\tdottedName,\n\t)\n\tconst Link = linkComponent || renderers.Link\n\tif (!Link) {\n\t\tthrow new Error('You must provide a <Link /> component.')\n\t}\n\tconst rule = engine.context.parsedRules[dottedName]\n\tconst newPath = documentationPath + '/' + encodeRuleName(dottedName)\n\tconst contextTitle = [\n\t\t...utils\n\t\t\t.ruleParents(dottedName)\n\t\t\t.reverse()\n\t\t\t.filter((name) => name.startsWith(`${dottedNameContext} . `))\n\t\t\t.map((name) => engine.context.parsedRules[name]?.title.trim()),\n\t\trule.title?.trim(),\n\t].join(' › ')\n\n\tif (!rule) {\n\t\tthrow new Error(`Unknown rule: ${dottedName}`)\n\t}\n\n\treturn (\n\t\t<Link\n\t\t\t{...propsRest}\n\t\t\taria-label={\n\t\t\t\tpropsRest['aria-label'] ??\n\t\t\t\t(rule.title &&\n\t\t\t\t\trule.title + ', voir les détails du calcul pour : ' + rule.title)\n\t\t\t}\n\t\t\tto={\n\t\t\t\tnewPath + (currentEngineId ? `?currentEngineId=${currentEngineId}` : '')\n\t\t\t}\n\t\t>\n\t\t\t{children || contextTitle || rule.dottedName.split(' . ').slice(-1)[0]}{' '}\n\t\t\t{displayIcon && rule.rawNode.icônes && <span>{rule.rawNode.icônes}</span>}\n\t\t</Link>\n\t)\n}\n\nexport function RuleLinkWithContext(\n\tprops: Omit<\n\t\tComponentProps<typeof RuleLink>,\n\t\t'engine' | 'documentationPath'\n\t> & {\n\t\tuseSubEngine?: boolean\n\t},\n) {\n\tconst engine = useEngine()\n\tconst documentationPath = useContext(BasepathContext)\n\tconst currentEngineIdFromUrl =\n\t\ttypeof window !== 'undefined' &&\n\t\tnew URLSearchParams(window.location.search).get('currentEngineId')\n\tconst currentEngineId =\n\t\t(props.useSubEngine !== false &&\n\t\t\t(props.currentEngineId ||\n\t\t\t\tengine.context.subEngineId ||\n\t\t\t\t(currentEngineIdFromUrl && Number.parseInt(currentEngineIdFromUrl)))) ||\n\t\tundefined\n\treturn (\n\t\t<RuleLink\n\t\t\tengine={engine}\n\t\t\tcurrentEngineId={currentEngineId}\n\t\t\tdocumentationPath={documentationPath}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "jsx", "jsxs", "styled", "useState", "useContext", "_a"]
}
