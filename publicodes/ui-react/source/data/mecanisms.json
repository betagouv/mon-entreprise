{
  "applicable si": {
    "chainable": "oui",
    "description": "Renvoie `non` si la condition est égale à `non`. Renvoie la valeur sinon.\nPermet de désactiver une règle ou une valeur.",
    "retourne": "Valeur | non",
    "exemples": {
      "base": "ancienneté: 4 mois prime de vacances:\n  applicable si: ancienneté >= 1 an\n  valeur: 200€"
    }
  },
  "non applicable si": {
    "chainable": "oui",
    "description": "Renvoit `non` si la condition n'est pas égale à `non`\nPermet de désactiver une règle ou une valeur.",
    "retourne": "Valeur | non",
    "exemples": {
      "base": "ancienneté: 4 mois prime de vacances:\n  non applicable si: ancienneté < 1 an\n  valeur: 200€"
    }
  },
  "une de ces conditions": {
    "description": "Renvoie `oui` si l'une des règles listées est _applicable_.\n\nÉquivaut à un `ou` logique.",
    "retourne": "Booléen",
    "exemples": {
      "base": "âge: 17 ans mineur émancipé: oui peut voter:\n  une de ces conditions:\n    - âge >= 18 ans\n    - mineur émancipé"
    }
  },
  "toutes ces conditions": {
    "description": "Renvoie `oui` si toutes toutes les règles listées sont _applicables_.\n\nÉquivaut à un `et` logique.",
    "argument": [
      "*",
      "..."
    ],
    "exemples": {
      "base": "âge: 17 ans citoyenneté française: oui peut voter:\n  toutes ces conditions:\n    - citoyenneté française\n    - âge >= 18 ans"
    }
  },
  "produit": {
    "description": "C'est une multiplication adaptée pour exprimer au mieux les cotisations.\n\nSa propriété `assiette` est multipliée par un pourcentage `taux`, ou par un `facteur` quand ce nom est plus approprié.\n\nLa multiplication peut être plafonnée : ce plafond sépare l'assiette en deux, et la partie au-dessus du plafond est tout simplement ignorée. Dans ce cas, elle se comporte comme une barème en taux marginaux à deux tranches, la deuxième au taux nul et allant de `plafond` à l'infini.",
    "argument": {
      "assiette": "Valeur à multiplier",
      "taux": "Taux à appliquer",
      "facteur": "Facteur multiplicatif",
      "plafond": "Plafond au-dessus duquel le taux appliqué est nul"
    },
    "exemples": {
      "base": "cotisation:\n  produit:\n    assiette: 2000 €/mois\n    taux: 5%",
      "assiette plafonnée": "plafond sécurité sociale: 3000 €/mois assiette cotisation: 15000 €/mois chômage:\n  produit:\n    assiette: assiette cotisation\n    plafond: 400% * plafond sécurité sociale\n    taux: 4%"
    }
  },
  "variations": {
    "description": "Contient une liste de conditions (`si`) et leurs conséquences associées (`alors`), ainsi qu'un cas par défaut (`sinon`).\n\nPour la première condition vraie dans la liste, on retient la valeur qui lui est associée.\n\nSi aucune condition n'est vraie, alors ce mécanisme renvoie implicitement `non`.\n\nCe mécanisme peut aussi être utilisé au sein d'un autre mécanisme avec des attributs, tel que `produit` ou `barème`.",
    "arguments": [
      {
        "si": "condition à vérifier",
        "alors": "consequence évaluée si la condition est vrai"
      },
      "...",
      {
        "sinon": "consequence évaluée si aucune des conditions précédente n'était applicable"
      }
    ],
    "exemples": {
      "base": "taux réduit: oui\ntaux allocation familiales:\n  variations:\n    - si: taux réduit\n      alors: 3.45%\n    - sinon: 5.25%",
      "dans un produit": "assiette cotisation: 2300 €/mois\ntaux réduit: oui\nallocation familiales:\n  produit:\n    assiette: assiette cotisation\n    variations:\n      - si: taux réduit\n        alors:\n          taux: 3.45%\n      - sinon:\n          taux: 5.25%"
    }
  },
  "somme": {
    "description": "Somme de chaque terme de la liste.\n\nSi un des termes n'est pas applicable, il vaut zéro.\n\nOn peut retrancher des valeurs grâce à l'opérateur unaire `-`",
    "arguments": [
      "*",
      "..."
    ],
    "exemples": {
      "base": "exemple:\n  somme:\n    - 15.89 €\n    - 12% * 14 €\n    - (-20 €)",
      "terme non applicable": "a: 50 € b:\n  applicable si: non\n  valeur: 20 €\n\nsomme:\n  somme:\n    - a\n    - b\n    - 40 €"
    }
  },
  "le maximum de": {
    "description": "Renvoie la valeur numérique de la liste de propositions fournie qui est la plus grande.\n\nPour ajouter un plancher à une valeur, préférer l'utilisation du mécanisme `encadrement`.",
    "exemples": {
      "base": "max:\n  le maximum de:\n    - 50\n    - 100"
    }
  },
  "le minimum de": {
    "description": "Renvoie la valeur numérique de la liste de propositions fournie qui est la plus petite.\n\nPour plafonner une valeur, préférer l'utilisation du mécanisme `encadrement`.",
    "exemples": {
      "base": "min:\n  le minimum de:\n    - 50\n    - 100"
    }
  },
  "arrondi": {
    "chainable": "oui",
    "description": "Arrondit à l'entier le plus proche, ou à une précision donnée.",
    "exemples": {
      "base": "arrondi:\n  arrondi: oui\n  valeur: 12.45",
      "nombre de décimales": "arrondi:\n  arrondi: 2 décimales\n  valeur: 2/3"
    }
  },
  "recalcul": {
    "description": "Relance le calcul d'une règle dans une situation différente de la situation courante. Permet par exemple de calculer le montant des cotisations au niveau du SMIC, même si le salaire est plus élevé dans la situation actuelle.",
    "exemples": {
      "base": "brut: 2000€\ncotisations:\n  produit:\n    assiette: brut\n    taux: 20%\n\ncotisations pour un SMIC:\n  recalcul:\n    règle: cotisations\n    avec:\n      brut: 1500 €"
    }
  },
  "barème": {
    "description": "C'est un barème en taux marginaux, mécanisme de calcul connu de par son utilisation dans le calcul de l'impôt sur le revenu.\nL'assiette est décomposée en plusieurs tranches, qui sont multipliées par un taux spécifique et enfin additionnées pour donner le résultat.\nLes tranches sont souvent exprimées sous forme de facteurs d'une variable que l'on appelle `multiplicateur`, par exemple une fois le plafond de la sécurité sociale.",
    "exemples": {
      "sans multiplicateur": "revenu imposable: 54126 € impôt sur le revenu:\n  barème:\n    assiette: revenu imposable\n    tranches:\n      - taux: 0%\n        plafond: 9807 €\n      - taux: 14%\n        plafond: 27086 €\n      - taux: 30%\n        plafond: 72617 €\n      - taux: 41%\n        plafond: 153783 €\n      - taux: 45%",
      "avec multiplicateur": "retraite de base:\n  barème:\n    assiette: assiette retraite\n    multiplicateur: plafond sécurité sociale temps plein\n    tranches:\n      - taux: 17.75%\n        plafond: 1\n      - taux: 0.6%\n  arrondi: oui"
    }
  },
  "grille": {
    "description": "C'est un barème sous la forme d'une grille de correspondance simple. C'est le mécanisme de calcul de l'impôt neutre, aussi appelé impôt non personnalisé.\nIl est composé de tranches qui se suivent. Il suffit de trouver l'assiette qui correspond à la tranche, et de selectionner le montant associé à l'assiette.",
    "exemples": {
      "grille avec multiplicateur et unité": "SMIC horaire: 10 €/heure revenu moyen: 1200€/an trimestres validés:\n  grille:\n    unité: trimestres validés/an\n    assiette: revenu moyen\n    multiplicateur: SMIC horaire\n    tranches:\n      - montant: 0\n        plafond: 150 heures/an\n      - montant: 1\n        plafond: 300 heures/an\n      - montant: 2\n        plafond: 450 heures/an\n      - montant: 3\n        plafond: 600 heures/an\n      - montant: 4"
    }
  },
  "taux progressif": {
    "description": "Ce mécanisme permet de calculer un taux progressif. On spécifie pour chaque tranche le plafond et le taux associé. Le taux effectif renvoyé est calculé en lissant la différence de taux entre la borne inférieure et supérieure de l'assiette.\n\nPar exemple, si nous nous avons les tranches suivantes :\n\n- taux: 50% / plafond: 0\n- taux: 100% / plafond: 1000\n\nPour une assiette de 500, le taux retourné sera 75%, car il correspond au taux situé à la moitié de la tranche correspondante.",
    "exemples": {
      "base": "chiffre d'affaires: 30000 €/an plafond: 3000 €/mois taux réduction de cotisation:\n  taux progressif:\n    assiette: chiffre d'affaires\n    multiplicateur: plafond\n    tranches:\n      - taux: 100%\n        plafond: 75%\n      - taux: 0%\n        plafond: 100%"
    }
  },
  "composantes": {
    "description": "Beaucoup de cotisations sont composées de deux parties qui partagent la méthode de calcul mais diffèrent selons certains paramètres. Pour ne pas définir deux variables quasi-redondantes, on utilise ce mécanisme.\nCela permet d'avoir une écriture factorisée, plus facile à lire.\nDans les calculs, `composantes` se comporte **exactement comme une somme**. La documentation, elle, sera adaptée pour montrer chaque composante.\nIl est possible par exemple pour le mécanisme `produit` de garder en commun l'assiette, et de déclarer des composantes pour le taux.\nChaque composante peut également contenir un champs `attributs` de type objet contenant les mécanismes chainés à appliquer à la composante en question.\nLorsque l'on utilise l'attribut `nom`, cela aboutit à la définition de règles imbriquées pour chacun des termes de la somme.",
    "exemples": {
      "base": "composante:\n  produit:\n    assiette: assiette de base\n    composantes:\n      - taux: 2%\n      - taux: 4%\n        plafond: plafond sécurité sociale",
      "Cotisations": "cotisation 1:\n  produit:\n    assiette: assiette de base\n    composantes:\n      - attributs:\n          nom: employeur\n        taux: 5%\n      - attributs:\n          nom: salarié\n        taux: 1%\n\ncotisations salariales :\n  somme:\n    - cotisation 1 . salarié\n    # ...",
      "TVA": "prix:\n  produit:\n    assiette: 50€\n    composantes:\n      - attributs:\n          nom: HT\n      - attributs:\n          nom: TVA\n        taux: 20%\n\nvérification:\n  prix = prix . HT + prix . TVA"
    }
  },
  "abattement": {
    "chainable": "oui",
    "description": "Permet de réduire le montant d'une valeur.\nLe résultat vaudra toujours au moins zéro, y compris quand le montant de l'abattement est plus grand que le montant abattu.\nIl est possible d'utiliser le mécanisme `abattement` de deux manières :\n  - soit en indiquant un montant de la même unité que la valeur, qui lui sera alors soustrait\n  - soit en indiquant un pourcentage qui sera utilisé pour calculer l'abattement de manière relative",
    "exemples": {
      "abattement simple": "revenu imposable:\n  valeur: 10000€\n  abattement: 2000€",
      "abattement supérieur à la valeur": "revenu imposable:\n  valeur: 1000€\n  abattement: 2000€",
      "abattement relatif": "revenu imposable:\n  valeur: 2000€\n  abattement: 10%"
    }
  },
  "plancher": {
    "chainable": "oui",
    "description": "Permet d'ajouter un plancher à une valeur.",
    "exemples": {
      "base": "revenus: -500€ assiette des cotisations:\n  valeur: revenus\n  plancher: 0 €"
    }
  },
  "plafond": {
    "chainable": "oui",
    "description": "Permet de plafonner une valeur.",
    "exemples": {
      "base": "salaire: 1300€/mois déduction fiscale:\n  valeur: salaire * 10%\n  plafond: 5000 €/an"
    }
  },
  "durée": {
    "description": "Permet d'obtenir le nombre de jours entre deux dates",
    "exemples": {
      "base": "date d'embauche: 14/04/2008 ancienneté en fin d'année:\n  unité: an\n  durée:\n    depuis: date d'embauche\n    jusqu'à: 31/12/2020"
    }
  },
  "unité": {
    "chainable": "oui",
    "description": "Permet de convertir explicitement une unité.\n\nAffiche un avertissement si la conversion n'est pas possible à cause d'unités incompatibles.\n",
    "exemples": {
      "base": "salaire:\n  valeur: 35 k€/an\n  unité: €/mois"
    }
  },
  "par défaut": {
    "chainable": "oui",
    "description": "Permet de donner une valeur par défaut pour le calcul, sans influer sur les variables manquantes retournées.\n\nUtile dans le cas d'une situation incomplète où l'on veut quand même retourner une première estimation.\n",
    "exemples": {
      "base": "prix TTC:\n  assiette: prix HT * (100% + TVA)\nTVA:\n  par défaut: 20%"
    }
  },
  "synchronisation": {
    "description": "Permet de récupérer certaines informations, telles que les codes postaux des villes, à partir d'APIs externes, telles que l'[API des communes de France](https://geo.api.gouv.fr/decoupage-administratif/communes).\n\nAttention : ce mécanisme est encore en cours de développement, et sa syntaxe n'est pas stable. Se référer aux exemples existants."
  },
  "inversion numérique": {
    "chainable": "oui",
    "description": "Il est souhaitable de rédiger les règles de calcul en publicodes de la même façon qu'elles sont décrites dans la loi ou les interprétations administratives ou juridiques existantes. En conséquence, certaines variables n'auront donc pas de méthode de calcul clairement explicitée, il s'agira donc de la déduire des autres valeurs renseignées.\n\nDe façon simplifiée, il s'agira donc, à partir d'une règle existante explicitant `y = ƒ(x)` de calculer `x` à partir de `y`.\n\nL'inversion numérique permet d'estimer la valeur de la variable en question au plus près à partir d'un des _objectifs_, listés dans la propriété `avec`. Il faut alors renseigner une valeur cible pour ces objectifs.\n\nL'algorithme utilisé est la [méthode de Brent](https://fr.wikipedia.org/wiki/M%C3%A9thode_de_Brent). L'idée générale est de prendre une valeur au hasard pour la variable en question, et d'améliorer mathématiquement le choix jusqu'à ce que les valeurs cibles soient toutes suffisamment proches des objectifs.\n\nSi on demande au moteur la valeur d'une variable qui a pour formule une inversion, il va vérifier qu'une des variables `avec` a bien une valeur (calculée ou saisie), et procéder à l'inversion décrite plus haut à partir de celle-ci. Sinon, ces possibilités d'inversions seront listées comme manquantes."
  },
  "résoudre la référence circulaire": {
    "description": "Active le calcul itératif pour trouver la valeur de la règle qui résout\nla référence circulaire.\n\nIl est possible pour une règle de se référencer elle-même. Par défaut, le\nmoteur considère qu'il s'agit d'un cycle non voulu, et renvoie 'null' comme valeur\npour la règle en question, en affichant un avertissement.\n\nMais dans certains cas, la formule est bonne et le cycle est voulu. La valeur de la\nrègle attendue est donc celle qui résout l'équation obtenue via la référence cyclique.\n\nLorsque l'on active cette fonctionnalité, le moteur va procéder par essai-erreur jusqu'à\ntrouver cette valeur.\n\nNote : la résolution de cycle est coûteuse en temps de calcul. Il faut donc veiller à\nne pas la cumuler avec l'évaluation d'un autre mécanisme coûteux comme l'inversion numérique\npar exemple.\n",
    "exemples": {
      "base": "x:\n  valeur: 4 * x - 5\n  résoudre la référence circulaire: oui",
      "calcul du revenu professionnel": "chiffre d'affaires: 10000 €/an\ncotisations: 25% * revenu professionnel\nrevenu professionnel:\n  valeur: chiffre d'affaires - cotisations\n  résoudre la référence circulaire: oui"
    }
  }
}
