{"version":3,"sources":["../src/index.ts","../src/Explanation.tsx","../src/mecanisms/common/InfixMecanism.tsx","../src/mecanisms/Arrondi.tsx","../src/mecanisms/Barème.tsx","../src/mecanisms/common/Mecanism.tsx","../src/mecanisms/common/NodeValueLeaf.tsx","../src/mecanisms/common/mecanismColors.ts","../src/mecanisms/common/DefaultInlineMecanism.tsx","../src/mecanisms/Reference.tsx","../src/mecanisms/Condition.tsx","../src/mecanisms/Constant.tsx","../src/mecanisms/Contexte.tsx","../src/mecanisms/Durée.tsx","../src/mecanisms/EstNonApplicable.tsx","../src/mecanisms/EstNonDéfini.tsx","../src/mecanisms/Grille.tsx","../src/mecanisms/InversionNumérique.tsx","../src/mecanisms/Operation.tsx","../src/mecanisms/Replacement.tsx","../src/mecanisms/ReplacementRule.tsx","../src/mecanisms/Rule.tsx","../src/mecanisms/RésoudreRéférenceCirculaire.tsx","../src/mecanisms/Situation.tsx","../src/mecanisms/TauxProgressif.tsx","../src/mecanisms/Texte.tsx","../src/mecanisms/UnePossibilité.tsx","../src/mecanisms/Unité.tsx","../src/mecanisms/Variations.tsx","../src/rule/RulePage.tsx","../src/rule/DeveloperAccordion.tsx","../src/rule/RuleSource.tsx","../src/rule/Header.tsx","../src/rule/Meta.tsx","../src/rule/RulesNav.tsx"],"sourcesContent":["import { utils } from 'publicodes'\nexport { default as Explanation } from './Explanation'\nexport { RuleLink } from './RuleLink'\nexport { default as RulePage } from './rule/RulePage'\n\nexport function getDocumentationSiteMap({ engine, documentationPath }) {\n\tconst parsedRules = engine.context.parsedRules\n\treturn Object.fromEntries(\n\t\tObject.keys(parsedRules)\n\t\t\t.filter(\n\t\t\t\t(dottedName) =>\n\t\t\t\t\t!dottedName.match(/(\\$SITUATION|\\$EVALUATION|\\$INTERNAL)/),\n\t\t\t)\n\t\t\t.map((dottedName) => [\n\t\t\t\tdocumentationPath + '/' + utils.encodeRuleName(dottedName),\n\t\t\t\tdottedName,\n\t\t\t]),\n\t)\n}\n","import { ASTNode, transformAST } from 'publicodes'\nimport { useEngine } from './hooks'\nimport Arrondi from './mecanisms/Arrondi'\nimport Barème from './mecanisms/Barème'\nimport Condition from './mecanisms/Condition'\nimport Constant from './mecanisms/Constant'\nimport Contexte from './mecanisms/Contexte'\nimport Durée from './mecanisms/Durée'\nimport EstNonApplicable from './mecanisms/EstNonApplicable'\nimport EstNonDéfini from './mecanisms/EstNonDéfini'\nimport Grille from './mecanisms/Grille'\nimport InversionNumérique from './mecanisms/InversionNumérique'\nimport Operation from './mecanisms/Operation'\nimport Reference from './mecanisms/Reference'\nimport Replacement from './mecanisms/Replacement'\nimport ReplacementRule from './mecanisms/ReplacementRule'\nimport Rule from './mecanisms/Rule'\nimport RésoudreRéférenceCirculaire from './mecanisms/RésoudreRéférenceCirculaire'\nimport Situation from './mecanisms/Situation'\nimport TauxProgressif from './mecanisms/TauxProgressif'\nimport Texte from './mecanisms/Texte'\nimport UnePossibilité from './mecanisms/UnePossibilité'\nimport Unité from './mecanisms/Unité'\nimport Variations from './mecanisms/Variations'\nimport DefaultInlineMecanism from './mecanisms/common/DefaultInlineMecanism'\n\nconst UIComponents = {\n\tconstant: Constant,\n\tarrondi: Arrondi,\n\tbarème: Barème,\n\tdurée: Durée,\n\tgrille: Grille,\n\tinversion: InversionNumérique,\n\toperation: Operation,\n\ttexte: Texte,\n\treference: Reference,\n\t'est non applicable': EstNonApplicable,\n\t'est non défini': EstNonDéfini,\n\trule: Rule,\n\tcondition: Condition,\n\t'dans la situation': Situation,\n\tcontexte: Contexte,\n\treplacement: Replacement,\n\treplacementRule: ReplacementRule,\n\t'taux progressif': TauxProgressif,\n\t'une possibilité': UnePossibilité,\n\t'résoudre référence circulaire': RésoudreRéférenceCirculaire,\n\tunité: Unité,\n\t'variable manquante': (node) => <Explanation node={node.explanation} />,\n\tvariations: Variations,\n} as const\n\nexport default function Explanation({ node }: { node: ASTNode }) {\n\tconst visualisationKind = node.sourceMap?.mecanismName ?? node.nodeKind\n\tconst engine = useEngine()\n\tconst evaluateEverything = transformAST((node) => {\n\t\tif ('nodeValue' in node || 'replacementRule' === node.nodeKind) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn engine.evaluateNode(node)\n\t}, false)\n\tconst displayedNode = evaluateEverything(node)\n\tconst Component =\n\t\tUIComponents[visualisationKind] ??\n\t\t(node.sourceMap?.mecanismName ? DefaultInlineMecanism : undefined)\n\n\tif (!Component) {\n\t\tthrow new Error(`Unknown visualisation: ${visualisationKind}`)\n\t}\n\n\treturn <Component {...displayedNode} />\n}\n","import { EvaluatedNode } from 'publicodes/src/AST/types'\nimport React from 'react'\nimport Explanation from '../../Explanation'\n\nexport const InfixMecanism = ({\n\tvalue,\n\tprefixed,\n\tchildren,\n}: {\n\tvalue: EvaluatedNode\n\tchildren: React.ReactNode\n\tprefixed?: boolean\n}) => {\n\treturn (\n\t\t<div>\n\t\t\t{prefixed && children}\n\t\t\t<div\n\t\t\t\tclassName=\"value\"\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tmargin: '1rem 0',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Explanation node={value} />\n\t\t\t</div>\n\t\t\t{!prefixed && children}\n\t\t</div>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { InfixMecanism } from './common/InfixMecanism'\n\nexport default function MecanismArrondi(node: EvaluatedNode<'arrondi'>) {\n\treturn (\n\t\t<InfixMecanism value={node.explanation.valeur as EvaluatedNode}>\n\t\t\t<p>\n\t\t\t\t<strong>Arrondi : </strong>\n\t\t\t\t<Explanation node={node.explanation.arrondi} />\n\t\t\t</p>\n\t\t</InfixMecanism>\n\t)\n}\n","import { EvaluatedNode, parseUnit } from 'publicodes'\nimport { NodeKind } from 'publicodes/src/AST/types'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { Mecanism } from './common/Mecanism'\nimport { NodeValueLeaf } from './common/NodeValueLeaf'\n\ntype EvaluatedTranche =\n\tEvaluatedNode<'barème'>['explanation']['tranches'][number] &\n\t\tEvaluatedNode & {\n\t\t\tplafond: EvaluatedNode\n\t\t}\n\nexport type BaremeExplanation = {\n\ttranches: Array<EvaluatedTranche>\n\tmultiplicateur: EvaluatedNode<NodeKind, number>\n\tassiette: EvaluatedNode<NodeKind, number>\n}\n\ntype Props = EvaluatedNode<'barème', number> & {\n\texplanation: BaremeExplanation\n}\nexport default function Barème({ nodeValue, explanation, unit }: Props) {\n\treturn (\n\t\t<Mecanism name=\"barème\" value={nodeValue} unit={unit}>\n\t\t\t<StyledComponent>\n\t\t\t\t<ul className=\"properties\">\n\t\t\t\t\t<BarèmeAttributes explanation={explanation} />\n\t\t\t\t\t<TrancheTable\n\t\t\t\t\t\ttranches={explanation.tranches}\n\t\t\t\t\t\tmultiplicateur={explanation.multiplicateur}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* nous avons remarqué que la notion de taux moyen pour un barème à 2 tranches est moins pertinent pour les règles de calcul des indépendants. Règle empirique à faire évoluer ! */}\n\t\t\t\t\t{nodeValue != undefined && explanation.tranches.length > 2 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<b>Taux moyen : </b>\n\t\t\t\t\t\t\t<NodeValueLeaf\n\t\t\t\t\t\t\t\tdata={(100 * nodeValue) / (explanation.assiette.nodeValue ?? 1)}\n\t\t\t\t\t\t\t\tunit={parseUnit('%')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</StyledComponent>\n\t\t</Mecanism>\n\t)\n}\n\nexport const BarèmeAttributes = ({\n\texplanation,\n}: Pick<Props, 'explanation'>) => {\n\tconst multiplicateur = explanation.multiplicateur\n\treturn (\n\t\t<>\n\t\t\t<li key=\"assiette\">\n\t\t\t\t<span className=\"key\">Assiette : </span>\n\t\t\t\t<span className=\"value\">\n\t\t\t\t\t<Explanation node={explanation.assiette} />\n\t\t\t\t</span>\n\t\t\t</li>\n\t\t\t{multiplicateur && !multiplicateur.isDefault && (\n\t\t\t\t<li key=\"multiplicateur\">\n\t\t\t\t\t<span className=\"key\">Multiplicateur : </span>\n\t\t\t\t\t<span className=\"value\">\n\t\t\t\t\t\t<Explanation node={multiplicateur} />\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\ntype TrancheTableProps = {\n\ttranches: Array<EvaluatedTranche>\n\tmultiplicateur: EvaluatedNode\n}\nexport const TrancheTable = ({\n\ttranches,\n\tmultiplicateur,\n}: TrancheTableProps) => {\n\tconst activeTranche = tranches.find(({ isActive }) => isActive)\n\tif (!tranches.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<table className=\"tranches\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Plafonds des tranches</th>\n\t\t\t\t\t{'taux' in tranches[0] && <th>Taux</th>}\n\t\t\t\t\t{('montant' in tranches[0] ||\n\t\t\t\t\t\tactiveTranche?.nodeValue != undefined) && <th>Montant</th>}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{tranches.map((tranche, i) => (\n\t\t\t\t\t<Tranche key={i} tranche={tranche} multiplicateur={multiplicateur} />\n\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\ntype TrancheProps = {\n\ttranche: EvaluatedTranche\n\tmultiplicateur: EvaluatedNode\n}\nconst Tranche = ({ tranche, multiplicateur }: TrancheProps) => {\n\tconst isHighlighted = tranche.isActive\n\treturn (\n\t\t<tr className={`tranche ${isHighlighted ? 'activated' : ''}`}>\n\t\t\t<td key=\"tranche\">\n\t\t\t\t{tranche.plafond.nodeValue === Infinity ?\n\t\t\t\t\t'Au-delà du dernier plafond'\n\t\t\t\t:\t<>\n\t\t\t\t\t\tInférieur à <Explanation node={tranche.plafond} />\n\t\t\t\t\t\t{multiplicateur && !multiplicateur.isDefault && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{' × '}\n\t\t\t\t\t\t\t\t<Explanation node={multiplicateur} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</td>\n\t\t\t{'taux' in tranche && (\n\t\t\t\t<td key=\"taux\">\n\t\t\t\t\t<Explanation node={tranche.taux} />\n\t\t\t\t</td>\n\t\t\t)}\n\t\t\t{(tranche.nodeValue != undefined || 'montant' in tranche) && (\n\t\t\t\t<td key=\"value\">\n\t\t\t\t\t{'montant' in tranche ?\n\t\t\t\t\t\t<Explanation node={tranche.montant} />\n\t\t\t\t\t:\t<NodeValueLeaf data={tranche.nodeValue} unit={tranche.unit} />}\n\t\t\t\t</td>\n\t\t\t)}\n\t\t</tr>\n\t)\n}\n\nexport const StyledComponent = styled.div`\n\ttable {\n\t\tmargin: 1em 0;\n\t\twidth: 100%;\n\t\ttext-align: left;\n\t\tfont-weight: 400;\n\t}\n\ttable td {\n\t\tpadding: 0.1em 0.4em;\n\t}\n\ttable th {\n\t\tfont-weight: 600;\n\t}\n\ttable th:first-letter {\n\t\ttext-transform: uppercase;\n\t}\n\t.tranche:nth-child(2n) {\n\t\tbackground: var(--lightestColor);\n\t}\n\t.tranche.activated {\n\t\tbackground: var(--lighterColor);\n\t\tfont-weight: bold;\n\t}\n`\n","import { Evaluation, Unit } from 'publicodes'\nimport { css, styled } from 'styled-components'\nimport { NodeValueLeaf } from './NodeValueLeaf'\nimport mecanismColors from './mecanismColors'\n\n// Un élément du graphe de calcul qui a une valeur interprétée (à afficher)\nexport type Props = {\n\tname: string\n\tvalue?: Evaluation\n\tunit?: Unit\n\tchildren: React.ReactNode\n\tdisplayName?: boolean\n}\nexport function Mecanism({\n\tname,\n\tvalue,\n\tchildren,\n\tunit,\n\tdisplayName = true,\n}: Props) {\n\treturn (\n\t\t<StyledMecanism mecanismName={name}>\n\t\t\t{displayName && <MecanismName name={name}>{name}</MecanismName>}\n\t\t\t<div>\n\t\t\t\t{children}\n\n\t\t\t\t{value !== undefined && (\n\t\t\t\t\t<StyledMecanismValue>\n\t\t\t\t\t\t<small> =&nbsp;</small>\n\t\t\t\t\t\t<NodeValueLeaf data={value} unit={unit} />\n\t\t\t\t\t</StyledMecanismValue>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</StyledMecanism>\n\t)\n}\n\nconst StyledMecanism = styled.div<{ mecanismName: string }>`\n\tborder: 1px solid;\n\tmax-width: 100%;\n\tborder-radius: 3px;\n\tpadding: 0.5rem 1rem;\n\tposition: relative;\n\tflex: 1;\n\tflex-direction: column;\n\ttext-align: left;\n\tborder-color: ${({ mecanismName }) => mecanismColors(mecanismName)};\n\t.properties > li {\n\t\tmargin: 1rem 0;\n\t}\n`\n\nconst MecanismName = ({\n\tname,\n\tinline = false,\n\tchildren,\n}: {\n\tname: string\n\tinline?: boolean\n\tchildren: React.ReactNode\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<StyledMecanismName\n\t\t\t\tname={name}\n\t\t\t\tinline={inline}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\thref={`https://publi.codes/docs/api/mécanismes#${name}`}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</StyledMecanismName>\n\t\t</>\n\t)\n}\n\nconst StyledMecanismName = styled.a<{ name: string; inline?: boolean }>`\n\tbackground-color: ${({ name }) => mecanismColors(name)} !important;\n\tfont-size: inherit;\n\tdisplay: inline-block;\n\tfont-weight: inherit;\n\twidth: fit-content;\n\tfont-family: inherit;\n\tpadding: 0.4rem 0.6rem !important;\n\tcolor: white !important;\n\ttransition: hover 0.2s;\n\t:hover {\n\t\tcolor: white;\n\t}\n\t${(props) =>\n\t\tprops.inline ?\n\t\t\tcss`\n\t\t\t\tborder-radius: 0.3rem;\n\t\t\t\tmargin-bottom: 0.5rem;\n\t\t\t`\n\t\t:\tcss`\n\t\t\t\ttop: -0.5rem;\n\t\t\t\tposition: relative;\n\t\t\t\tmargin-left: -1rem;\n\t\t\t\tborder-radius: 0 !important;\n\t\t\t\tborder-bottom-right-radius: 0.3rem !important;\n\t\t\t\t::first-letter {\n\t\t\t\t\ttext-transform: capitalize;\n\t\t\t\t}\n\t\t\t`}\n\t:hover {\n\t\topacity: 0.8;\n\t}\n`\n\nconst StyledMecanismValue = styled.div`\n\ttext-align: right;\n\tmargin-top: 1rem;\n\tfont-weight: bold;\n`\n","import { Evaluation, Unit, formatValue } from 'publicodes'\nimport { styled } from 'styled-components'\n\ntype Props = {\n\tdata: Evaluation\n\tunit: Unit | undefined\n}\n\nexport const NodeValueLeaf = ({ data, unit }: Props) => {\n\treturn (\n\t\t<StyledNodeValuePointer\n\t\t\tclassName=\"node-value-pointer\"\n\t\t\ttitle={data === null ? 'Non applicable' : ''}\n\t\t\taria-label={data === null ? 'Valeur non applicable' : ''}\n\t\t>\n\t\t\t{data === null ?\n\t\t\t\t<span aria-hidden>-</span>\n\t\t\t:\tformatValue({ nodeValue: data, unit })}\n\t\t</StyledNodeValuePointer>\n\t)\n}\n\nconst StyledNodeValuePointer = styled.span`\n\tbackground: white;\n\tborder-bottom: 0 !important;\n\tfont-size: 0.875rem;\n\tline-height: 1.25rem;\n\tmargin: 0 0.2rem;\n\tflex-shrink: 0;\n\tpadding: 0.1rem 0.2rem;\n\ttext-decoration: none !important;\n\tbox-shadow:\n\t\t0px 1px 2px 1px #d9d9d9,\n\t\t0 0 0 1px #d9d9d9;\n\tborder: 1px solid #f8f9fa;\n\tborder-radius: 0.2rem;\n`\n","const colors = {\n\t'applicable si': '#7B1FA2',\n\t'non applicable si': '#7B1FA2',\n\t'est applicable': '#00796B',\n\t'est non applicable': '#00796B',\n\t'est défini': '#00796B',\n\t'est non défini': '#00796B',\n\tsomme: '#18457B',\n\tplafond: '#EF6C00',\n\tplancher: '#EF6C00',\n\tabattement: '#B73731',\n\tproduit: '#2ecc71',\n\t'une de ces conditions': '#3498db',\n\t'toutes ces conditions': '#3498db',\n\t'le maximum de': '#795548',\n\t'le minimum de': '#795548',\n\tvariations: '#FF9800',\n\t'par défaut': '#00695C',\n\t'taux progressif': '#795548',\n\tbarème: '#9B296F',\n\tgrille: '#AD1457',\n\tavec: '#2653ce',\n}\nexport default (name) => colors[name] || 'palevioletred'\n","import { ASTNode, EvaluatedNode } from 'publicodes'\nimport { useContext, useMemo, useState } from 'react'\nimport { css, styled } from 'styled-components'\nimport Explanation from '../../Explanation'\nimport { EngineContext } from '../../contexts'\nimport { UnfoldIsEnabledContext } from '../Reference'\nimport { Mecanism } from './Mecanism'\n\nexport default function DefaultInlineMecanism({\n\tsourceMap,\n\tnodeValue,\n\tunit,\n}: EvaluatedNode & {\n\tsourceMap: NonNullable<EvaluatedNode['sourceMap']>\n}) {\n\tconst { args, mecanismName } = sourceMap\n\n\tconst isChainableMecanism =\n\t\t'valeur' in args && mecanismName in args && Object.keys(args).length === 2\n\tconst isUnaryMecanism = 'valeur' in args && Object.keys(args).length === 1\n\n\treturn (\n\t\t<>\n\t\t\t{isChainableMecanism && <ListOrScalarExplanation node={args.valeur} />}\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginTop: isChainableMecanism ? '1rem' : 0,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Mecanism name={mecanismName} value={nodeValue} unit={unit}>\n\t\t\t\t\t{isChainableMecanism ?\n\t\t\t\t\t\t<ListOrScalarExplanation\n\t\t\t\t\t\t\tnode={args[mecanismName]}\n\t\t\t\t\t\t\tmecanismName={mecanismName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t: isUnaryMecanism ?\n\t\t\t\t\t\t<ListOrScalarExplanation\n\t\t\t\t\t\t\tnode={args.valeur}\n\t\t\t\t\t\t\tmecanismName={mecanismName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t:\t<ul>\n\t\t\t\t\t\t\t{Object.entries(args).map(([key, value]) => (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t\t\t\t\t\tpadding: '0.25rem 0',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>{key}&nbsp;:&nbsp;</span>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<ListOrScalarExplanation node={value} />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t}\n\t\t\t\t</Mecanism>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nfunction ListOrScalarExplanation({\n\tnode,\n\tmecanismName,\n}: {\n\tnode: ASTNode | Array<ASTNode>\n\tmecanismName?: string\n}) {\n\tif (Array.isArray(node)) {\n\t\tconst sign =\n\t\t\tmecanismName === 'produit' ? '×'\n\t\t\t: mecanismName === 'somme' ? '+'\n\t\t\t: undefined\n\t\treturn (\n\t\t\t<Table\n\t\t\t\texplanation={node as Array<EvaluatedNode>}\n\t\t\t\thideNotApplicable={mecanismName !== 'produit'}\n\t\t\t\tsign={sign}\n\t\t\t/>\n\t\t)\n\t}\n\treturn <Explanation node={node} />\n}\n\n// We want to put non applicable rules a the bottom of list #1055\nconst isZeroOrNotApplicable = (x: ASTNode) => {\n\tconst nodeValue = useContext(EngineContext)?.evaluate(x).nodeValue\n\treturn nodeValue === null || nodeValue === 0\n}\n\ntype TableProps = {\n\texplanation: Array<EvaluatedNode>\n\thideNotApplicable?: boolean\n\tsign?: string\n}\n\nfunction Table({ explanation, hideNotApplicable = true, sign }: TableProps) {\n\tconst [applicableExplanation, notApplicableExplanation] = explanation.reduce(\n\t\t(acc, x) => {\n\t\t\tacc[hideNotApplicable && isZeroOrNotApplicable(x) ? 1 : 0].push(x)\n\t\t\treturn acc\n\t\t},\n\t\t[[], []] as [Array<EvaluatedNode>, Array<EvaluatedNode>],\n\t)\n\tconst [showNotApplicable, setShowNotApplicable] = useState(\n\t\tapplicableExplanation.length === 0,\n\t)\n\tconst id = useMemo(\n\t\t() => 'notApplicableExplanation' + Math.random().toString(36).substring(7),\n\t\t[],\n\t)\n\treturn (\n\t\t<>\n\t\t\t<StyledListContainer $sign={sign}>\n\t\t\t\t{applicableExplanation.map((node: EvaluatedNode, i) => (\n\t\t\t\t\t<Row key={i} node={node} />\n\t\t\t\t))}\n\t\t\t</StyledListContainer>\n\t\t\t{notApplicableExplanation.length > 0 &&\n\t\t\t\tapplicableExplanation.length !== 0 && (\n\t\t\t\t\t<StyledButtonContainer\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextAlign: 'right',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\taria-expanded={showNotApplicable}\n\t\t\t\t\t\t\taria-controls={id}\n\t\t\t\t\t\t\tclassName=\"publicodes_btn-small\"\n\t\t\t\t\t\t\tonClick={() => setShowNotApplicable(!showNotApplicable)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{showNotApplicable ?\n\t\t\t\t\t\t\t\t'Masquer les valeurs non applicable'\n\t\t\t\t\t\t\t:\t`Voir toute la liste`}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</StyledButtonContainer>\n\t\t\t\t)}\n\t\t\t{showNotApplicable && (\n\t\t\t\t<StyledListContainer\n\t\t\t\t\tid={id}\n\t\t\t\t\t$sign={sign}\n\t\t\t\t\t$showFirst={applicableExplanation.length > 0}\n\t\t\t\t>\n\t\t\t\t\t{notApplicableExplanation.map((node: EvaluatedNode, i) => (\n\t\t\t\t\t\t<Row key={i} node={node} />\n\t\t\t\t\t))}\n\t\t\t\t</StyledListContainer>\n\t\t\t)}\n\t\t</>\n\t)\n}\nconst StyledButtonContainer = styled.div`\n\tmargin: 0.5rem 0;\n\tmargin-left: 1rem;\n`\nconst StyledListContainer = styled.ul<{\n\t$sign?: string\n\t$showFirst?: boolean\n}>`\n\tmargin: 0;\n\tmargin-left: 1rem;\n\n\t${({ $sign, $showFirst }) =>\n\t\t$sign &&\n\t\t!$showFirst &&\n\t\tcss`\n\t\t\t& > li:first-child::marker {\n\t\t\t\tcontent: '';\n\t\t\t}\n\t\t`}\n\t${({ $sign }) =>\n\t\t$sign &&\n\t\tcss`\n\t\t\t& > li::marker {\n\t\t\t\tfont-weight: bold;\n\t\t\t\tcontent: '${$sign}  ';\n\t\t\t}\n\t\t`}\n`\n\n/* La colonne peut au clic afficher une nouvelle colonne qui sera une autre somme imbriquée */\nfunction Row({ node }: { node: EvaluatedNode }) {\n\treturn (\n\t\t<StyledRow style={{ padding: '0.25rem 0' }}>\n\t\t\t<UnfoldIsEnabledContext.Provider value={true}>\n\t\t\t\t<Explanation node={node} />\n\t\t\t</UnfoldIsEnabledContext.Provider>\n\t\t</StyledRow>\n\t)\n}\n\nconst StyledRow = styled.li`\n\t> * {\n\t\twidth: 100%;\n\t}\n`\n","import { EvaluatedNode } from 'publicodes/src/AST/types'\nimport { createContext, useContext, useState } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { EngineContext } from '../contexts'\nimport { NodeValueLeaf } from './common/NodeValueLeaf'\n\n// Un élément du graphe de calcul qui a une valeur interprétée (à afficher)\nexport default function Reference(\n\tnode: EvaluatedNode<'reference'> & {\n\t\tdottedName: string\n\t},\n) {\n\tconst engine = useContext(EngineContext)\n\tconst { dottedName, nodeValue, unit } = node\n\tconst rule = engine?.context.parsedRules[node.dottedName]\n\tif (!rule) {\n\t\tthrow new Error(`Unknown rule: ${dottedName}`)\n\t}\n\tconst [folded, setFolded] = useState(true)\n\tconst isFoldEnabled = useContext(UnfoldIsEnabledContext)\n\n\tif (\n\t\tnode.dottedName === node.contextDottedName + ' . ' + node.name &&\n\t\t!node.name.includes(' . ') &&\n\t\trule.virtualRule\n\t) {\n\t\treturn <Explanation node={engine?.evaluate(rule)} />\n\t}\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflex: isFoldEnabled ? 1 : 'initial',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tmaxWidth: '100%',\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span style={{ paddingRight: '0.2rem' }}>\n\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t</span>\n\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 1,\n\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{isFoldEnabled && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<UnfoldButton\n\t\t\t\t\t\t\t\tonClick={() => setFolded(!folded)}\n\t\t\t\t\t\t\t\taria-expanded={!folded}\n\t\t\t\t\t\t\t\tclassName=\"publicodes_btn-small\"\n\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\tfolded ?\n\t\t\t\t\t\t\t\t\t\t'Déplier, afficher le détail'\n\t\t\t\t\t\t\t\t\t:\t'Replier, afficher le détail'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{folded ? 'Déplier' : 'Replier'}\n\t\t\t\t\t\t\t</UnfoldButton>\n\t\t\t\t\t\t\t<StyledGuide />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{nodeValue !== undefined && (\n\t\t\t\t\t\t<NodeValueLeaf data={nodeValue} unit={unit} />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>{' '}\n\t\t\t{!folded && (\n\t\t\t\t<div>\n\t\t\t\t\t<UnfoldIsEnabledContext.Provider value={false}>\n\t\t\t\t\t\t<Explanation node={engine?.evaluate(rule)} />\n\t\t\t\t\t</UnfoldIsEnabledContext.Provider>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport const UnfoldIsEnabledContext = createContext<boolean>(false)\n\nconst UnfoldButton = styled.button`\n\ttext-transform: none !important;\n`\nconst StyledGuide = styled.div`\n\t@media (max-width: 500px) {\n\t\t/* border: none; */\n\t}\n\tmargin: 0.5rem;\n\tflex: 1;\n\tborder-bottom: 2px dotted lightgray;\n`\n","import { EvaluatedNode } from 'publicodes'\nimport DefaultInlineMecanism from './common/DefaultInlineMecanism'\n\nexport default function MecanismCondition(node: EvaluatedNode<'condition'>) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{ mecanismName: node.nodeKind, args: node.explanation }}\n\t\t/>\n\t)\n}\n","import { EvaluatedNode, formatValue } from 'publicodes'\n\nexport default function Constant({\n\tnodeValue,\n\ttype,\n\tfullPrecision,\n\tunit,\n}: EvaluatedNode<'constant'>) {\n\tif (nodeValue === undefined) {\n\t\treturn null\n\t}\n\tif (nodeValue === null) {\n\t\treturn <span className=\"value\">{formatValue({ nodeValue })}</span>\n\t} else if (fullPrecision) {\n\t\treturn (\n\t\t\t<span className={type}>\n\t\t\t\t{formatValue(\n\t\t\t\t\t{ nodeValue, unit },\n\t\t\t\t\t{\n\t\t\t\t\t\tprecision: 5,\n\t\t\t\t\t},\n\t\t\t\t)}\n\t\t\t</span>\n\t\t)\n\t} else {\n\t\treturn <span className=\"value\">{formatValue({ nodeValue, unit })}</span>\n\t}\n}\n","import { EvaluatedNode } from 'publicodes'\nimport { Fragment } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { EngineContext } from '../contexts'\nimport { useEngine } from '../hooks'\nimport { Mecanism } from './common/Mecanism'\n\nexport default function Contexte({ explanation }: EvaluatedNode<'contexte'>) {\n\tconst engine = useEngine()\n\tconst contexteEngine =\n\t\texplanation.subEngineId ?\n\t\t\tengine.subEngines[explanation.subEngineId] ?? engine\n\t\t:\tengine\n\n\treturn (\n\t\t<>\n\t\t\t<Mecanism name=\"contexte\">\n\t\t\t\t<p>\n\t\t\t\t\tCe calcul est effectué en changeant les valeurs des règles suivantes :\n\t\t\t\t</p>\n\t\t\t\t<StyledDL>\n\t\t\t\t\t{explanation.contexte.map(([origin, newValue]) => (\n\t\t\t\t\t\t<Fragment key={origin.dottedName as string}>\n\t\t\t\t\t\t\t<dt>\n\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={origin.dottedName as string} />\n\t\t\t\t\t\t\t</dt>\n\t\t\t\t\t\t\t<dd>\n\t\t\t\t\t\t\t\t<span aria-hidden> = </span>\n\t\t\t\t\t\t\t\t<Explanation node={newValue} />\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t))}\n\t\t\t\t</StyledDL>\n\t\t\t</Mecanism>\n\t\t\t<EngineContext.Provider value={contexteEngine}>\n\t\t\t\t<Explanation node={explanation.valeur} />\n\t\t\t</EngineContext.Provider>\n\t\t</>\n\t)\n}\n\nconst StyledDL = styled.dl`\n\tdisplay: grid;\n\tgrid-template-columns: auto 1fr;\n\tgap: 0.6rem;\n\tline-height: 1.75;\n\tdd {\n\t\tmargin: 0;\n\t\tdisplay: flex;\n\t\tgap: 0.5rem;\n\t}\n\t@media (max-width: 600px) {\n\t\tgrid-template-columns: auto;\n\t\tline-height: initial;\n\t\tdd {\n\t\t\tjustify-content: flex-end;\n\t\t\tmargin-bottom: 0.5rem;\n\t\t}\n\t}\n`\n","import { EvaluatedNode } from 'publicodes'\nimport DefaultInlineMecanism from './common/DefaultInlineMecanism'\n\nexport default function MecanismDurée(node: EvaluatedNode<'durée'>) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{ mecanismName: node.nodeKind, args: node.explanation }}\n\t\t/>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes'\nimport DefaultInlineMecanism from './common/DefaultInlineMecanism'\n\nexport default function MecanismEstNonApplicable(\n\tnode: EvaluatedNode<'est non applicable'>,\n) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{\n\t\t\t\tmecanismName: node.nodeKind,\n\t\t\t\targs: { valeur: node.explanation },\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes'\nimport DefaultInlineMecanism from './common/DefaultInlineMecanism'\n\nexport default function MecanismEstNonDéfini(\n\tnode: EvaluatedNode<'est non défini'>,\n) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{\n\t\t\t\tmecanismName: node.nodeKind,\n\t\t\t\targs: { valeur: node.explanation },\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes'\nimport {\n\tBaremeExplanation,\n\tBarèmeAttributes,\n\tStyledComponent,\n\tTrancheTable,\n} from './Barème'\nimport { Mecanism } from './common/Mecanism'\n\ntype Props = EvaluatedNode<'grille', number> & {\n\texplanation: BaremeExplanation\n}\nexport default function Grille({ nodeValue, explanation, unit }: Props) {\n\treturn (\n\t\t<StyledComponent>\n\t\t\t<Mecanism name=\"grille\" value={nodeValue} unit={unit}>\n\t\t\t\t<ul className=\"properties\">\n\t\t\t\t\t<BarèmeAttributes explanation={explanation} />\n\t\t\t\t\t<TrancheTable\n\t\t\t\t\t\ttranches={explanation.tranches}\n\t\t\t\t\t\tmultiplicateur={explanation.multiplicateur}\n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t</Mecanism>\n\t\t</StyledComponent>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { useEngine } from '../hooks'\nimport { Mecanism } from './common/Mecanism'\n\nexport default function InversionNumérique({\n\tnodeValue,\n\texplanation,\n}: EvaluatedNode<'inversion'>) {\n\tconst engine = useEngine()\n\n\treturn (\n\t\t<Mecanism name=\"inversion numérique\" value={nodeValue}>\n\t\t\t{engine.cache.inversionFail && explanation.inversionGoal ?\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCette valeur devrait pouvoir être estimée à partir d’une autre\n\t\t\t\t\t\tvariable qui possède une formule de calcul et dont la valeur a été\n\t\t\t\t\t\tfixée dans la simulation :\n\t\t\t\t\t</p>\n\t\t\t\t\t<Explanation node={explanation.inversionGoal} />\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMalheureusement, il a été impossible de retrouver une valeur pour\n\t\t\t\t\t\tcette formule qui permette d’atterrir sur la valeur demandée.\n\t\t\t\t\t</p>\n\t\t\t\t</>\n\t\t\t: explanation.inversionGoal ?\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCette valeur a été estimée à partir d’une autre variable qui possède\n\t\t\t\t\t\tune formule de calcul et dont la valeur a été fixée dans la\n\t\t\t\t\t\tsimulation :\n\t\t\t\t\t</p>\n\t\t\t\t\t<Explanation node={explanation.inversionGoal} />\n\t\t\t\t</>\n\t\t\t:\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCette formule de calcul n’existe pas, mais on peut la calculer par\n\t\t\t\t\t\tinversion en utilisant les formules des règles suivantes :\n\t\t\t\t\t</p>\n\t\t\t\t\t<ul id=\"inversionsPossibles\">\n\t\t\t\t\t\t{explanation.inversionCandidates.map((el) => (\n\t\t\t\t\t\t\t<li key={el.dottedName}>\n\t\t\t\t\t\t\t\t<Explanation node={el} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</>\n\t\t\t}\n\t\t</Mecanism>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { NodeValueLeaf } from './common/NodeValueLeaf'\n\ntype Props = EvaluatedNode<'operation'> & {\n\texplanation: [EvaluatedNode, EvaluatedNode]\n}\n\nexport default function Operation({\n\tnodeValue,\n\texplanation,\n\toperator,\n\tunit,\n}: Props) {\n\tconst isUnaryOperation =\n\t\texplanation[0].nodeValue === 0 &&\n\t\toperator === '−' &&\n\t\texplanation[0].nodeKind === 'constant'\n\n\treturn (\n\t\t<StyledOperation className=\"operation\" role=\"math\">\n\t\t\t<span>(</span>\n\t\t\t{!isUnaryOperation && (\n\t\t\t\t<>\n\t\t\t\t\t<Explanation node={explanation[0]} />\n\t\t\t\t\t&nbsp;\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{operator}&nbsp;\n\t\t\t<Explanation node={explanation[1]} />\n\t\t\t{nodeValue != undefined && (\n\t\t\t\t<span className=\"result\">\n\t\t\t\t\t<small> =&nbsp;</small>\n\t\t\t\t\t<NodeValueLeaf data={nodeValue} unit={unit} />\n\t\t\t\t</span>\n\t\t\t)}\n\t\t\t<span>)</span>\n\t\t</StyledOperation>\n\t)\n}\n\nconst StyledOperation = styled.div`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 0.125rem;\n\t> .operation ::before,\n\t> .operation ::after {\n\t\tcontent: '';\n\t}\n\t.result {\n\t\tmargin-left: 0.2rem;\n\t}\n\t.operation .result {\n\t\tdisplay: none;\n\t}\n`\n","import { ASTNode, EvaluatedNode } from 'publicodes'\nimport { useId, useState } from 'react'\nimport Explanation from '../Explanation'\nimport { useEngine } from '../hooks'\n\nexport default function Replacement(node: EvaluatedNode<'variations'>) {\n\tconst engine = useEngine()\n\tconst sourceMaps = node.sourceMap as {\n\t\tmecanismName: 'replacement'\n\t\targs: {\n\t\t\toriginalNode: EvaluatedNode<'reference'>\n\t\t\tapplicableReplacements: Array<ASTNode<'replacementRule'>>\n\t\t}\n\t}\n\tconst originalNode = sourceMaps.args.originalNode\n\tconst applicableReplacement = sourceMaps.args.applicableReplacements.find(\n\t\t({ definitionRule }) =>\n\t\t\tengine.evaluate(definitionRule).nodeValue === node.nodeValue,\n\t)\n\n\tif (!applicableReplacement || applicableReplacement.replaceByNonApplicable) {\n\t\toriginalNode.nodeValue = node.nodeValue\n\t\treturn <Explanation node={originalNode} />\n\t}\n\tconst [showOriginal, setShowOriginal] = useState(false)\n\tconst id = useId()\n\treturn (\n\t\t<>\n\t\t\t<span\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'inline-flex',\n\t\t\t\t\tmaxWidth: '100%',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\tflex: '1 1 0%',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{showOriginal && (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\topacity: '0.6',\n\t\t\t\t\t\t\t\ttextDecoration: 'line-through',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Explanation node={originalNode} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t<Explanation node={applicableReplacement.definitionRule} />\n\t\t\t\t</span>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginLeft: '0.4rem',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => setShowOriginal(!showOriginal)}\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"publicodes_btn-small\"\n\t\t\t\t\t\taria-expanded={showOriginal}\n\t\t\t\t\t\taria-controls={id}\n\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\tshowOriginal ?\n\t\t\t\t\t\t\t\t'Cacher la valeur d’origine'\n\t\t\t\t\t\t\t:\t'Voir la valeur d’origine'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t🔄\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</span>\n\t\t</>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\n\nexport default function ReplacementMecanism(\n\tnode: EvaluatedNode<'replacementRule'>,\n) {\n\treturn (\n\t\t<span>\n\t\t\tRemplace <Explanation node={node.replacedReference} />{' '}\n\t\t\t{node.rawNode.dans && (\n\t\t\t\t<>\n\t\t\t\t\tdans{' '}\n\t\t\t\t\t{node.whiteListedNames\n\t\t\t\t\t\t.map((child, i) => <Explanation key={i} node={child} />)\n\t\t\t\t\t\t.join(', ')}\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{node.rawNode['sauf dans'] && (\n\t\t\t\t<>\n\t\t\t\t\tsauf dans{' '}\n\t\t\t\t\t{node.blackListedNames\n\t\t\t\t\t\t.map((child, i) => <Explanation key={i} node={child} />)\n\t\t\t\t\t\t.join(', ')}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</span>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { DottedNameContext } from '../contexts'\n\nexport default function RuleMecanism({\n\texplanation,\n\tdottedName,\n}: EvaluatedNode<'rule'>) {\n\treturn (\n\t\t<Styled>\n\t\t\t<DottedNameContext.Provider value={dottedName}>\n\t\t\t\t<StyledExplanation>\n\t\t\t\t\t<Explanation node={explanation.valeur} />\n\t\t\t\t</StyledExplanation>\n\t\t\t</DottedNameContext.Provider>\n\t\t</Styled>\n\t)\n}\nconst StyledExplanation = styled.div`\n\tborder-left: 1rem solid hsl(220, 60%, 97.5%);\n\tpadding-left: 1rem;\n\tmargin-left: -2rem;\n`\n\nconst Styled = styled.div`\n\tmargin-top: 0.5rem;\n\tmargin-bottom: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n`\n","import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { Mecanism } from './common/Mecanism'\n\nexport default function MecanismRésoudreRéférenceCirculaire({\n\texplanation,\n}: EvaluatedNode<'résoudre référence circulaire'>) {\n\treturn (\n\t\t<Mecanism\n\t\t\tname=\"résoudre la référence circulaire\"\n\t\t\tvalue={explanation.valeur}\n\t\t>\n\t\t\t<p>\n\t\t\t\t{' '}\n\t\t\t\tCette valeur a été retrouvé en résolvant la référence circulaire dans la\n\t\t\t\tformule ci dessous :{' '}\n\t\t\t</p>\n\n\t\t\t<Explanation node={explanation.valeur} />\n\t\t</Mecanism>\n\t)\n}\n","import { ASTNode, EvaluatedNode } from 'publicodes'\nimport { useContext } from 'react'\nimport Explanation from '../Explanation'\nimport { EngineContext } from '../contexts'\nimport { InfixMecanism } from './common/InfixMecanism'\n\ntype Props = {\n\tsourceMap: {\n\t\targs: {\n\t\t\tvaleur: EvaluatedNode\n\t\t\t'dans la situation': ASTNode<'reference'>\n\t\t}\n\t}\n} & EvaluatedNode<'condition'>\nexport default function MecanismSituation({ sourceMap }: Props) {\n\tconst engine = useContext(EngineContext)\n\n\tconst situationValeur = engine?.evaluate(\n\t\tsourceMap.args['dans la situation'],\n\t) as {\n\t\tnodeValue: number\n\t\texplanation: { valeur: ASTNode }\n\t}\n\n\treturn situationValeur?.nodeValue !== undefined ?\n\t\t\t<InfixMecanism prefixed value={sourceMap.args['valeur']}>\n\t\t\t\t<p>\n\t\t\t\t\t<strong>Valeur renseignée dans la simulation : </strong>\n\t\t\t\t\t<Explanation node={situationValeur.explanation.valeur} />\n\t\t\t\t</p>\n\t\t\t</InfixMecanism>\n\t\t:\t<Explanation node={sourceMap.args['valeur']} />\n}\n","import { EvaluatedNode } from 'publicodes'\nimport {\n\tBaremeExplanation,\n\tBarèmeAttributes,\n\tStyledComponent,\n\tTrancheTable,\n} from './Barème'\nimport { Mecanism } from './common/Mecanism'\n\ntype Props = EvaluatedNode<'taux progressif', number> & {\n\texplanation: BaremeExplanation\n}\nexport default function TauxProgressif({\n\tnodeValue,\n\texplanation,\n\tunit,\n}: Props) {\n\treturn (\n\t\t<StyledComponent>\n\t\t\t<Mecanism name=\"taux progressif\" value={nodeValue} unit={unit}>\n\t\t\t\t<ul className=\"properties\">\n\t\t\t\t\t<BarèmeAttributes explanation={explanation} />\n\t\t\t\t\t<TrancheTable\n\t\t\t\t\t\ttranches={explanation.tranches}\n\t\t\t\t\t\tmultiplicateur={explanation.multiplicateur}\n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t</Mecanism>\n\t\t</StyledComponent>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\n\nexport default function Texte({ explanation }: EvaluatedNode<'texte'>) {\n\treturn (\n\t\t<p>\n\t\t\t{explanation.map((element) =>\n\t\t\t\ttypeof element === 'string' ? element : (\n\t\t\t\t\t<Highlight key={element.rawNode}>\n\t\t\t\t\t\t<Explanation node={element} />\n\t\t\t\t\t</Highlight>\n\t\t\t\t),\n\t\t\t)}\n\t\t</p>\n\t)\n}\n\nconst Highlight = styled.span`\n\tborder: 1px solid rgba(0, 0, 0, 0.1);\n\tpadding: 0.2rem;\n\tposition: relative;\n\tborder-radius: 0.15rem;\n\tbackground-color: rgba(0, 0, 0, 0.05);\n`\n","import { EvaluatedNode } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { Mecanism } from './common/Mecanism'\n\nexport default function UnePossibilitéMecanism({\n\texplanation,\n}: EvaluatedNode<'une possibilité'>) {\n\treturn (\n\t\t<Mecanism name=\"une possibilité parmi\" value={undefined}>\n\t\t\t<ul>\n\t\t\t\t{explanation.map((node, i) => (\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t<Explanation node={node} />\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</Mecanism>\n\t)\n}\n","import { EvaluatedNode, formatValue, serializeUnit } from 'publicodes'\nimport Explanation from '../Explanation'\nimport { InfixMecanism } from './common/InfixMecanism'\n\nexport default function MecanismUnité({\n\tnodeValue,\n\texplanation,\n\tunit,\n}: EvaluatedNode<'unité'>) {\n\tif (explanation.nodeKind === 'constant') {\n\t\treturn formatValue({ nodeValue, unit })\n\t} else if (explanation.nodeKind === 'reference') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Explanation node={explanation} />\n\t\t\t\t&nbsp;{serializeUnit(unit)}\n\t\t\t</>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<InfixMecanism value={explanation as EvaluatedNode}>\n\t\t\t\t<p>\n\t\t\t\t\t<strong>Unité : </strong>\n\t\t\t\t\t{serializeUnit(unit)}\n\t\t\t\t</p>\n\t\t\t</InfixMecanism>\n\t\t)\n\t}\n}\n","import { EvaluatedNode } from 'publicodes'\nimport { useState } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { Mecanism } from './common/Mecanism'\n\ntype Props = EvaluatedNode<'variations'>\n\nexport default function Variations({ nodeValue, explanation, unit }: Props) {\n\tconst activeCaseIndex = explanation.findIndex(\n\t\t({ condition }) => (condition as EvaluatedNode).nodeValue === true,\n\t)\n\n\tlet activeCase\n\tif (activeCaseIndex !== undefined) {\n\t\tactiveCase = explanation[activeCaseIndex]\n\t\texplanation = [\n\t\t\t...explanation.slice(0, activeCaseIndex),\n\t\t\t...explanation.slice(activeCaseIndex + 1),\n\t\t]\n\t}\n\n\tconst [isExpanded, setIsExpanded] = useState(!activeCase)\n\treturn (\n\t\t<Mecanism name=\"variations\" unit={unit} value={nodeValue}>\n\t\t\t<ul>\n\t\t\t\t{activeCase && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Case {...activeCase} />\n\t\t\t\t\t\t<span style={{ paddingLeft: '1rem' }}>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"publicodes_btn-small\"\n\t\t\t\t\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{isExpanded ? 'Masquer' : 'Afficher'} les autres cas\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{isExpanded && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{explanation.map((currentCase, i) => (\n\t\t\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t\t\t<Case {...(currentCase as CaseProps)} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</Mecanism>\n\t)\n}\n\ntype CaseProps = {\n\tcondition: EvaluatedNode\n\tconsequence: EvaluatedNode\n}\nfunction Case({ condition, consequence }: CaseProps) {\n\treturn (\n\t\t<StyledCaseContainer>\n\t\t\t<StyledCase>\n\t\t\t\t<StyledCondition>\n\t\t\t\t\t{condition.nodeKind === 'constant' && condition.nodeValue === true ?\n\t\t\t\t\t\t<StyledText>Par défaut&nbsp;:&nbsp;</StyledText>\n\t\t\t\t\t:\t<>\n\t\t\t\t\t\t\t<StyledText>Condition&nbsp;:&nbsp;</StyledText>\n\t\t\t\t\t\t\t<StyledExplanation>\n\t\t\t\t\t\t\t\t<Explanation node={condition} />\n\t\t\t\t\t\t\t</StyledExplanation>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t</StyledCondition>\n\t\t\t\t<StyledExplanation>\n\t\t\t\t\t<Explanation node={consequence} />\n\t\t\t\t</StyledExplanation>\n\t\t\t</StyledCase>\n\t\t</StyledCaseContainer>\n\t)\n}\n\nconst StyledExplanation = styled.div``\nconst StyledText = styled.span`\n\tfont-weight: bold;\n`\nconst StyledCondition = styled.div`\n\tpadding-bottom: 1rem;\n\tpadding-top: 0.5rem;\n\tdisplay: flex;\n\talign-items: baseline;\n`\n\nconst StyledCase = styled.div`\n\tborder-left: 1rem solid hsl(36, 60%, 97%);\n\tpadding-left: 1rem;\n\tmargin-left: -1rem;\n`\n\nconst StyledCaseContainer = styled.div`\n\tpadding: 1rem 0;\n`\n","import Engine, {\n\tASTNode,\n\tEvaluatedNode,\n\tformatValue,\n\tPublicodesExpression,\n\tRuleNode,\n\tserializeUnit,\n\tutils,\n} from 'publicodes'\nimport { useContext, useEffect, useRef } from 'react'\nimport { styled } from 'styled-components'\nimport {\n\tBasepathContext,\n\tdefaultRenderers,\n\tDottedNameContext,\n\tEngineContext,\n\tRenderersContext,\n\tSupportedRenderers,\n} from '../contexts'\nimport Explanation from '../Explanation'\nimport { useEngine } from '../hooks'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { DeveloperAccordion } from './DeveloperAccordion'\nimport RuleHeader from './Header'\nimport { breakpointsWidth, RulesNav } from './RulesNav'\n\ntype RulePageProps = {\n\tdocumentationPath: string\n\trulePath: string\n\tengine: Engine\n\tlanguage: 'fr' | 'en'\n\trenderers: SupportedRenderers\n\tsearchBar?: boolean\n\tapiDocumentationUrl?: string\n\tapiEvaluateUrl?: string\n\tnpmPackage?: string\n\tmobileMenuPortalId?: string\n\topenNavButtonPortalId?: string\n\tshowDevSection?: boolean\n}\n\nexport default function RulePage({\n\tdocumentationPath,\n\trulePath,\n\tengine,\n\trenderers,\n\tsearchBar,\n\tlanguage,\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n\tnpmPackage,\n\tmobileMenuPortalId,\n\topenNavButtonPortalId,\n\tshowDevSection = true,\n}: RulePageProps) {\n\tconst currentEngineId =\n\t\ttypeof window !== 'undefined' &&\n\t\tnew URLSearchParams(window.location.search).get('currentEngineId')\n\n\tconst prevRenderers = useRef(renderers)\n\tuseEffect(() => {\n\t\tif (prevRenderers.current !== renderers) {\n\t\t\tprevRenderers.current = renderers\n\t\t}\n\t}, [renderers])\n\n\treturn (\n\t\t<EngineContext.Provider value={engine}>\n\t\t\t<BasepathContext.Provider value={documentationPath}>\n\t\t\t\t<RenderersContext.Provider value={defaultRenderers(renderers)}>\n\t\t\t\t\t<Rule\n\t\t\t\t\t\tdottedName={utils.decodeRuleName(rulePath)}\n\t\t\t\t\t\tsubEngineId={\n\t\t\t\t\t\t\tcurrentEngineId ? parseInt(currentEngineId) : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\tapiDocumentationUrl={apiDocumentationUrl}\n\t\t\t\t\t\tapiEvaluateUrl={apiEvaluateUrl}\n\t\t\t\t\t\tnpmPackage={npmPackage}\n\t\t\t\t\t\tmobileMenuPortalId={mobileMenuPortalId}\n\t\t\t\t\t\topenNavButtonPortalId={openNavButtonPortalId}\n\t\t\t\t\t\tshowDevSection={showDevSection}\n\t\t\t\t\t\tsearchBar={searchBar}\n\t\t\t\t\t/>\n\t\t\t\t</RenderersContext.Provider>\n\t\t\t</BasepathContext.Provider>\n\t\t</EngineContext.Provider>\n\t)\n}\n\ntype RuleProps = {\n\tdottedName: string\n\tsubEngineId?: number\n} & Pick<\n\tRulePageProps,\n\t| 'language'\n\t| 'apiDocumentationUrl'\n\t| 'apiEvaluateUrl'\n\t| 'npmPackage'\n\t| 'mobileMenuPortalId'\n\t| 'openNavButtonPortalId'\n\t| 'showDevSection'\n\t| 'searchBar'\n>\n\nfunction Rule({\n\tdottedName,\n\tlanguage,\n\tsubEngineId,\n\tsearchBar = false,\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n\tnpmPackage,\n\tmobileMenuPortalId,\n\topenNavButtonPortalId,\n\tshowDevSection,\n}: RuleProps) {\n\tconst baseEngine = useEngine()\n\tconst { References, Text } = useContext(RenderersContext)\n\n\tconst useSubEngine = subEngineId && baseEngine.subEngines[subEngineId]\n\tconst engine = useSubEngine ? baseEngine.subEngines[subEngineId] : baseEngine\n\n\tif (!(dottedName in engine.context.parsedRules)) {\n\t\treturn <p>Cette règle est introuvable dans la base</p>\n\t}\n\n\tengine.resetCache()\n\tengine.cache.traversedVariablesStack = []\n\tconst rule = engine.evaluateNode(\n\t\tengine.context.parsedRules[dottedName],\n\t) as EvaluatedNode<'rule'>\n\n\tconst { description, question } = rule.rawNode\n\tconst { valeur, nullableParent, ruleDisabledByItsParent } = rule.explanation\n\n\tconst situation = buildSituationUsedInRule(engine, rule)\n\n\tconst references = References?.({\n\t\treferences: rule.rawNode.références,\n\t\tdottedName: rule.dottedName,\n\t})\n\treturn (\n\t\t<EngineContext.Provider value={engine}>\n\t\t\t<Container id=\"documentation-rule-root\">\n\t\t\t\t<RulesNav\n\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\tmobileMenuPortalId={mobileMenuPortalId}\n\t\t\t\t\topenNavButtonPortalId={openNavButtonPortalId}\n\t\t\t\t\tsearchBar={searchBar}\n\t\t\t\t/>\n\t\t\t\t<Article>\n\t\t\t\t\t<DottedNameContext.Provider value={dottedName}>\n\t\t\t\t\t\t<RuleHeader dottedName={dottedName} />\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<Text>{description || question || ''}</Text>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<p style={{ fontSize: '1.25rem', lineHeight: '2rem' }}>\n\t\t\t\t\t\t\tValeur : {formatValue(rule, { language })}\n\t\t\t\t\t\t\t{rule.nodeValue === undefined && rule.unit && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tUnité : {serializeUnit(rule.unit)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t{ruleDisabledByItsParent && nullableParent && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<blockquote>\n\t\t\t\t\t\t\t\t\tCette règle est <strong>non applicable</strong> car elle\n\t\t\t\t\t\t\t\t\tappartient à l’espace de nom :{' '}\n\t\t\t\t\t\t\t\t\t<Explanation node={nullableParent} />\n\t\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{useSubEngine && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmargin: '1rem 0',\n\t\t\t\t\t\t\t\t\tpadding: '0rem 1rem',\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t\t\t\t\t\t\tcolumnGap: '1rem',\n\t\t\t\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\t\t\t\t\tbackground: 'hsl(220, 60%, 97.5%)',\n\t\t\t\t\t\t\t\t\tborderRadius: '0.25rem',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tVous naviguez la documentation avec un{' '}\n\t\t\t\t\t\t\t\t\t<strong>contexte</strong> d’évaluation{' '}\n\t\t\t\t\t\t\t\t\t<strong>spécifique</strong>.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<div style={{ flex: 1 }} />\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\ttextAlign: 'right',\n\t\t\t\t\t\t\t\t\t\tmarginTop: 0,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<RuleLinkWithContext\n\t\t\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\t\t\tuseSubEngine={false}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tRetourner à la version de base\n\t\t\t\t\t\t\t\t\t</RuleLinkWithContext>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<h2>Comment cette donnée est-elle calculée ?</h2>\n\t\t\t\t\t\t<div id=\"documentation-rule-explanation\">\n\t\t\t\t\t\t\t<Explanation node={valeur} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{rule.rawNode.note && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3>Note</h3>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Text>{rule.rawNode.note}</Text>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{references && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3>Références</h3>\n\t\t\t\t\t\t\t\t{references}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t{showDevSection && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3>Informations techniques</h3>\n\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t\tSi vous êtes développeur/euse vous trouverez ci-dessous des\n\t\t\t\t\t\t\t\t\tinformations techniques utiles pour l’intégration de cette\n\t\t\t\t\t\t\t\t\trègle dans votre application.\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t<DeveloperAccordion\n\t\t\t\t\t\t\t\t\tengine={engine}\n\t\t\t\t\t\t\t\t\tsituation={situation}\n\t\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\t\trule={rule}\n\t\t\t\t\t\t\t\t\tapiDocumentationUrl={apiDocumentationUrl}\n\t\t\t\t\t\t\t\t\tapiEvaluateUrl={apiEvaluateUrl}\n\t\t\t\t\t\t\t\t\tnpmPackage={npmPackage}\n\t\t\t\t\t\t\t\t></DeveloperAccordion>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</DottedNameContext.Provider>\n\t\t\t\t</Article>\n\t\t\t</Container>\n\t\t</EngineContext.Provider>\n\t)\n}\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-wrap: nowrap;\n\talign-items: flex-start;\n\t@media (max-width: ${breakpointsWidth.lg}) {\n\t\tflex-direction: column;\n\t}\n`\n\nconst Article = styled.article`\n\tflex-shrink: 1;\n\tmax-width: 100%;\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tmin-width: 0;\n\t\tpadding-left: 1rem;\n\t\tborder-left: 1px solid #e6e6e6;\n\t\tmargin-left: -1px;\n\t}\n`\n\nfunction buildSituationUsedInRule<Names extends string>(\n\tengine: Engine<Names>,\n\trule: EvaluatedNode & RuleNode,\n): Partial<Record<Names, PublicodesExpression>> {\n\tconst situation = [...(rule.traversedVariables as Names[]), rule.dottedName]\n\t\t.map((name) => {\n\t\t\tconst valeur = engine.context.parsedRules[`${name} . $SITUATION`]?.rawNode\n\t\t\t\t.valeur as ASTNode\n\t\t\treturn [name, valeur] as const\n\t\t})\n\t\t.filter(\n\t\t\t([, valeur]) =>\n\t\t\t\tvaleur &&\n\t\t\t\t!(valeur.nodeKind === 'constant' && valeur.nodeValue === undefined),\n\t\t)\n\t\t.reduce(\n\t\t\t(acc, [name, valeur]) => ({\n\t\t\t\t[name]:\n\t\t\t\t\ttypeof valeur === 'object' && valeur && 'rawNode' in valeur ?\n\t\t\t\t\t\tvaleur.rawNode\n\t\t\t\t\t:\tvaleur,\n\t\t\t\t...acc,\n\t\t\t}),\n\t\t\t{},\n\t\t)\n\n\treturn situation\n}\n","import Engine, { EvaluatedNode, RuleNode, utils } from 'publicodes'\nimport { useContext } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { RenderersContext } from '../contexts'\nimport RuleSource from './RuleSource'\n\nconst Ul = styled.ul`\n\tpadding: 0;\n\tmax-height: 400px;\n\toverflow: auto;\n\tlist-style: none;\n`\n\nconst Li = styled.li`\n\tposition: relative;\n\tpadding-left: 1.5rem;\n\n\t&::before {\n\t\tcontent: '●';\n\t\tfont-size: 80%;\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\twidth: 1.5rem;\n\t\ttext-align: center;\n\t\tcolor: #b3b3b3;\n\t\tmargin-bottom: 0.5rem;\n\t}\n`\n\nexport function DeveloperAccordion({\n\trule,\n\tengine,\n\tdottedName,\n\tsituation = {},\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n\tnpmPackage,\n}: {\n\trule: EvaluatedNode<'rule'>\n\tengine: Engine\n\tdottedName: string\n\tsituation?: Record<string, unknown>\n\tapiDocumentationUrl?: string\n\tapiEvaluateUrl?: string\n\tnpmPackage?: string\n}) {\n\tconst { Accordion } = useContext(RenderersContext)\n\n\tconst accordionItems = [\n\t\t{\n\t\t\ttitle: 'Règle et situation',\n\t\t\tid: 'rule-situation',\n\t\t\tchildren: (\n\t\t\t\t<>\n\t\t\t\t\t<ActualRule engine={engine} dottedName={dottedName} />\n\n\t\t\t\t\t<ActualSituation situation={situation} />\n\t\t\t\t</>\n\t\t\t),\n\t\t},\n\t\t(apiDocumentationUrl && apiEvaluateUrl) || npmPackage ?\n\t\t\t{\n\t\t\t\ttitle:\n\t\t\t\t\t'Réutiliser ce calcul (' +\n\t\t\t\t\t[\n\t\t\t\t\t\tapiDocumentationUrl && apiEvaluateUrl ? 'API REST' : null,\n\t\t\t\t\t\tnpmPackage ? 'Paquet NPM' : null,\n\t\t\t\t\t]\n\t\t\t\t\t\t.filter((x) => x !== null)\n\t\t\t\t\t\t.join(' / ') +\n\t\t\t\t\t')',\n\t\t\t\tid: 'usage',\n\t\t\t\tchildren: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{utils.isExperimental(\n\t\t\t\t\t\t\tengine.baseContext.parsedRules,\n\t\t\t\t\t\t\tdottedName,\n\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t<StyledWarning>\n\t\t\t\t\t\t\t\t<h4>⚠️ Cette règle est tagguée comme experimentale ⚠️</h4>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tCela veut dire qu’elle peut être modifiée, renommée, ou\n\t\t\t\t\t\t\t\t\tsupprimée sans qu’il n’y ait de changement de version majeure\n\t\t\t\t\t\t\t\t\tdans l’API.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</StyledWarning>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{npmPackage && (\n\t\t\t\t\t\t\t<PackageUsage\n\t\t\t\t\t\t\t\trule={rule}\n\t\t\t\t\t\t\t\tsituation={situation}\n\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\tnpmPackage={npmPackage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{apiDocumentationUrl && apiEvaluateUrl && (\n\t\t\t\t\t\t\t<ApiUsage\n\t\t\t\t\t\t\t\tsituation={situation}\n\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\tapiDocumentationUrl={apiDocumentationUrl}\n\t\t\t\t\t\t\t\tapiEvaluateUrl={apiEvaluateUrl}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t}\n\t\t:\tnull,\n\t\t{\n\t\t\ttitle: 'Dépendances et effets de la règle',\n\t\t\tid: 'dependencies-effects',\n\t\t\tchildren: (\n\t\t\t\t<>\n\t\t\t\t\t<MissingVars selfMissing={Object.keys(rule.missingVariables)} />\n\n\t\t\t\t\t<ReverseMissing\n\t\t\t\t\t\tengine={engine}\n\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\truleIsNotDefined={rule.nodeValue === undefined}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Effect\n\t\t\t\t\t\tengine={engine}\n\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\treplacements={rule.replacements}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t),\n\t\t},\n\t].filter(<T,>(elem: T | null): elem is T => elem !== null)\n\n\treturn <Accordion items={accordionItems}></Accordion>\n}\n\nfunction ActualRule({\n\tengine,\n\tdottedName,\n}: {\n\tengine: Engine<string>\n\tdottedName: string\n}) {\n\tconst { Code } = useContext(RenderersContext)\n\n\treturn (\n\t\t<section>\n\t\t\t<h4>Règle actuelle</h4>\n\t\t\t<Code tabs={{ dottedName }} />\n\t\t\t<RuleSource dottedName={dottedName} engine={engine} />\n\t\t</section>\n\t)\n}\n\nfunction ActualSituation({\n\tsituation,\n}: {\n\tsituation: Record<string, unknown>\n}) {\n\tconst { Code } = useContext(RenderersContext)\n\n\tconst keys = Object.keys(situation)\n\n\tconst tabs = {\n\t\tjson: JSON.stringify(situation, null, 2),\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<h4>Situation actuelle</h4>\n\t\t\t{keys.length ?\n\t\t\t\t<p>\n\t\t\t\t\tVoici les données que vous avez saisies dans notre simulateur sous\n\t\t\t\t\tforme de JSON.\n\t\t\t\t</p>\n\t\t\t:\t<p>\n\t\t\t\t\tVotre situation est pour l’instant vide, vous n’avez probablement pas\n\t\t\t\t\tencore fait de simulation.\n\t\t\t\t</p>\n\t\t\t}\n\t\t\t<Code tabs={tabs} />\n\t\t</section>\n\t)\n}\n\nconst LINK_NPM_LABEL = 'Retrouvez ce paquet sur NPM'\nconst LINK_PUBLICODES_LABEL = 'moteur Publicodes'\n\nfunction PackageUsage({\n\trule,\n\tsituation,\n\tdottedName,\n\tnpmPackage,\n}: {\n\trule: EvaluatedNode<'rule'>\n\tsituation: Record<string, unknown>\n\tdottedName: string\n\tnpmPackage: string\n}) {\n\tconst { Code, Link } = useContext(RenderersContext)\n\n\tconst tabs = {\n\t\tnpmPackage: `// npm i publicodes ${npmPackage}\n\nimport Engine, { formatValue } from 'publicodes'\nimport rules from '${npmPackage}'\n\nconst engine = new Engine(rules)\nengine.setSituation(${JSON.stringify(situation, null, 2)})\n\n// ${rule.title}\nconst evaluation = engine.evaluate(${JSON.stringify(dottedName)})\n\nconsole.log(formatValue(evaluation))\n`,\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<h4>Lancer un calcul avec Publicodes</h4>\n\t\t\t<p>\n\t\t\t\tVous pouvez installer notre package de règles pour l’utiliser avec le{' '}\n\t\t\t\t<Link\n\t\t\t\t\taria-label={`${LINK_PUBLICODES_LABEL}, accéder au site publi.codes, nouvelle fenêtre`}\n\t\t\t\t\thref=\"https://publi.codes/\"\n\t\t\t\t>\n\t\t\t\t\t{LINK_PUBLICODES_LABEL}\n\t\t\t\t</Link>{' '}\n\t\t\t\tet ainsi effectuer vos propres calculs. Voici un exemple avec votre\n\t\t\t\tsituation et la règle actuelle :\n\t\t\t</p>\n\t\t\t<Code tabs={tabs} />\n\n\t\t\t<p style={{ textAlign: 'right' }}>\n\t\t\t\t<Link\n\t\t\t\t\thref={'https://www.npmjs.com/package/' + npmPackage}\n\t\t\t\t\taria-label={`${LINK_NPM_LABEL}, accéder à la page npm du package Publicodes, nouvelle fenêtre`}\n\t\t\t\t>\n\t\t\t\t\t<span aria-hidden>📦</span> {LINK_NPM_LABEL}\n\t\t\t\t</Link>\n\t\t\t</p>\n\t\t</section>\n\t)\n}\n\nconst LINK_API_LABEL = 'En savoir plus sur notre API REST'\n\nfunction ApiUsage({\n\tsituation,\n\tdottedName,\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n}: {\n\tsituation: Record<string, unknown>\n\tdottedName: string\n\tapiDocumentationUrl: string\n\tapiEvaluateUrl: string\n}) {\n\tconst { Code, Link } = useContext(RenderersContext)\n\n\tconst data = {\n\t\texpressions: [dottedName],\n\t\tsituation: situation,\n\t}\n\n\tconst tabs = {\n\t\tcurl: `curl '${apiEvaluateUrl}' \\\\\n  -H 'accept: application/json' \\\\\n  -H 'content-type: application/json' \\\\\n  --data-raw $'${JSON.stringify(data).replace(/'/g, \"'\\\\''\")}' \\\\\n  --compressed`,\n\t\t'fetch js': `const request = await fetch(\"${apiEvaluateUrl}\", {\n  \"headers\": { \"content-type\": \"application/json\" },\n  \"method\": \"POST\",\n  \"body\": JSON.stringify(${JSON.stringify(data, null, 2)}),\n})\nconst { evaluate } = await request.json()\n\nconsole.log(evaluate)`,\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<h4>Utiliser notre API REST</h4>\n\t\t\t<p>\n\t\t\t\tVous trouverez ici un exemple d’utilisation de notre API REST via curl\n\t\t\t\tou un fetch javascript.\n\t\t\t</p>\n\t\t\t<Code tabs={tabs} />\n\t\t\t{apiDocumentationUrl && (\n\t\t\t\t<p style={{ textAlign: 'right' }}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={apiDocumentationUrl}\n\t\t\t\t\t\taria-label={`${LINK_API_LABEL}, accéder à la documentation, nouvelle fenêtre`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span aria-hidden>👩‍💻</span> {LINK_API_LABEL}\n\t\t\t\t\t</Link>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</section>\n\t)\n}\n\nfunction MissingVars({ selfMissing }: { selfMissing: string[] }) {\n\treturn (\n\t\t<section>\n\t\t\t<h4>Données manquantes</h4>\n\t\t\t{selfMissing?.length ?\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLes règles suivantes sont nécessaires pour le calcul mais n’ont pas\n\t\t\t\t\t\tété saisies dans la situation. Leur valeur par défaut est utilisée.\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<Ul>\n\t\t\t\t\t\t{selfMissing.map((dottedName) => (\n\t\t\t\t\t\t\t<Li key={dottedName}>\n\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Ul>\n\t\t\t\t</>\n\t\t\t:\t<p>Il n’y a pas de données manquante.</p>}\n\t\t</section>\n\t)\n}\n\nconst isReplacementOfThisRule = (node: RuleNode, dottedName: string) =>\n\tnode &&\n\t'replacements' in node &&\n\tnode.replacements.some(\n\t\t({ replacedReference }) => replacedReference.dottedName === dottedName,\n\t)\n\nfunction ReverseMissing({\n\tengine,\n\tdottedName,\n\truleIsNotDefined = false,\n}: {\n\tengine: Engine\n\tdottedName: string\n\truleIsNotDefined?: boolean\n}) {\n\tconst ruleNamesWithMissing = Array.from(\n\t\tengine.context.referencesMaps.rulesThatUse.get(dottedName) ?? [],\n\t).filter(\n\t\t(ruleName) =>\n\t\t\truleName !== '$EVALUATION' &&\n\t\t\truleName in engine.context.parsedRules &&\n\t\t\t!engine.context.parsedRules[ruleName].private &&\n\t\t\t!isReplacementOfThisRule(\n\t\t\t\tengine.context.parsedRules[ruleName],\n\t\t\t\tdottedName,\n\t\t\t),\n\t)\n\n\treturn (\n\t\t<section>\n\t\t\t<h4>Règles qui ont besoin de cette valeur</h4>\n\n\t\t\t{ruleNamesWithMissing.length ?\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLes règles suivantes ont besoin de la règle courante pour être\n\t\t\t\t\t\tcalculées :\n\t\t\t\t\t\t{ruleIsNotDefined && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\tLa règle courante n’étant pas encore définie, c’est sa valeur\n\t\t\t\t\t\t\t\tpar défaut qui est utilisée pour déterminer la valeur de ces\n\t\t\t\t\t\t\t\trègles.\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</p>\n\t\t\t\t\t<Ul>\n\t\t\t\t\t\t{ruleNamesWithMissing.map((dottedName) => (\n\t\t\t\t\t\t\t<Li key={dottedName}>\n\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Ul>\n\t\t\t\t</>\n\t\t\t:\t<p>Aucune règle n’utilise cette valeur.</p>}\n\t\t</section>\n\t)\n}\n\nfunction Effect({\n\tengine,\n\tdottedName,\n\treplacements,\n}: {\n\tengine: Engine\n\tdottedName: string\n\treplacements: RuleNode['replacements']\n}) {\n\tconst effects = Array.from(\n\t\tengine.context.referencesMaps.rulesThatUse.get(dottedName) ?? [],\n\t).filter(\n\t\t(ruleName) =>\n\t\t\truleName !== '$EVALUATION' &&\n\t\t\truleName in engine.context.parsedRules &&\n\t\t\t!engine.context.parsedRules[ruleName].private &&\n\t\t\tisReplacementOfThisRule(engine.context.parsedRules[ruleName], dottedName),\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<section>\n\t\t\t\t<h4>Effets sur d’autres règles</h4>\n\t\t\t\t{replacements.length ?\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tUne règle peut avoir des effets sur d’autres règles afin de\n\t\t\t\t\t\t\tmodifier leur comportement.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Ul>\n\t\t\t\t\t\t\t{replacements.map((replacement) => (\n\t\t\t\t\t\t\t\t<Li\n\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: '0.5rem' }}\n\t\t\t\t\t\t\t\t\tkey={replacement.replacedReference.dottedName}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Explanation node={replacement} />\n\t\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Ul>\n\t\t\t\t\t</>\n\t\t\t\t:\t<p>Cette règle ne modifie aucune autre règle.</p>}\n\t\t\t</section>\n\n\t\t\t<section>\n\t\t\t\t<h4>Règles qui peuvent avoir un effet sur cette valeur</h4>\n\t\t\t\t{effects.length ?\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tLes règles suivantes peuvent remplacer la valeur de la règle\n\t\t\t\t\t\t\tcourante :\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Ul>\n\t\t\t\t\t\t\t{effects.map((dottedName) => (\n\t\t\t\t\t\t\t\t<Li key={dottedName}>\n\t\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Ul>\n\t\t\t\t\t</>\n\t\t\t\t:\t<p>Aucune autre règle n’a d’effets sur cette valeur.</p>}\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nconst StyledWarning = styled.div``\n","import Engine, { formatValue, utils } from 'publicodes'\nconst { encodeRuleName } = utils\n\ntype Props = { dottedName: string; engine: Engine }\n\nexport default function RuleSource({ engine, dottedName }: Props) {\n\tconst href = useRuleSource(engine, dottedName)\n\n\tif (typeof window !== 'undefined' && window.location.host === 'publi.codes') {\n\t\treturn null\n\t}\n\n\tconst linkLabel = 'Afficher la règle dans le bac à sable Publicodes'\n\n\treturn (\n\t\t<p style={{ textAlign: 'right' }}>\n\t\t\t<a\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\thref={href}\n\t\t\t\taria-label={`${linkLabel}, nouvelle fenêtre`}\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>\n\t\t\t\t<span aria-hidden>✍️</span> {linkLabel}\n\t\t\t</a>\n\t\t</p>\n\t)\n}\n\nexport const useRuleSource = (engine: Engine, dottedName: string) => {\n\t// Array.from is a workaround for https://github.com/facebook/docusaurus/issues/7606#issuecomment-1330452598\n\tconst dependencies = Array.from(\n\t\tengine.context.referencesMaps.referencesIn.get(dottedName) ?? [],\n\t)\n\n\tconst node = engine.evaluateNode(engine.context.parsedRules[dottedName])\n\n\tconst rules = {\n\t\t[dottedName]: Object.fromEntries(\n\t\t\tObject.entries(node.rawNode).filter(([key]) => key !== 'nom'),\n\t\t),\n\t}\n\n\t// When we import a rule in the Publicodes Studio, we need to provide a\n\t// simplified definition of its dependencies to avoid undefined references.\n\tconst situation = Object.fromEntries(\n\t\tdependencies\n\t\t\t.filter((name) => name !== dottedName && !name.endsWith(' . $SITUATION'))\n\t\t\t.map((dottedName) => [dottedName, formatValueForStudio(node)]),\n\t)\n\n\tconst source = encodeURIComponent(JSON.stringify({ rules, situation }))\n\n\tconst baseURL =\n\t\ttypeof window !== 'undefined' && location.hostname === 'localhost' ?\n\t\t\t''\n\t\t:\t'https://publi.codes'\n\n\treturn `${baseURL}/studio/${encodeRuleName(dottedName)}#${source}`\n}\n\n// TODO: This formating function should be in the core code. We need to think\n// about the different options of the formatting options and our use cases\n// (putting a value in the URL #1169, importing a value in the Studio, showing a value\n// on screen)\nfunction formatValueForStudio(node: Parameters<typeof formatValue>[0]) {\n\tconst base = formatValue(node)\n\t\t.replace(/\\s\\/\\s/g, '/')\n\t\t.replace(/(\\d)\\s(\\d)/g, '$1$2')\n\t\t.replace(',', '.')\n\tif (base.match(/^[0-9]/) || base === 'Oui' || base === 'Non') {\n\t\treturn base.toLowerCase()\n\t} else if (base === '-') {\n\t\treturn 'non'\n\t} else {\n\t\treturn `'${base}'`\n\t}\n}\n","import { utils } from 'publicodes'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { useEngine } from '../hooks'\nimport Meta from './Meta'\n\nexport default function RuleHeader({ dottedName }: { dottedName: string }) {\n\tconst engine = useEngine()\n\tconst {\n\t\ttitle,\n\t\trawNode: { description, question, icônes },\n\t} = engine.context.parsedRules[dottedName]\n\tconst displayTitle = icônes ? title + ' ' + icônes : title\n\treturn (\n\t\t<header>\n\t\t\t<Meta title={displayTitle} description={description || question} />\n\t\t\t<div>\n\t\t\t\t<span id=\"rules-nav-open-nav-button\">\n\t\t\t\t\t{/* Portal for OpenNavButton in RulesNav */}\n\t\t\t\t</span>\n\t\t\t\t{utils\n\t\t\t\t\t.ruleParents(dottedName)\n\t\t\t\t\t.reverse()\n\t\t\t\t\t.map((parentDottedName) => (\n\t\t\t\t\t\t<span key={parentDottedName}>\n\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={parentDottedName} displayIcon />\n\t\t\t\t\t\t\t<span aria-hidden>{' › '}</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<h1>\n\t\t\t\t<RuleLinkWithContext dottedName={dottedName} displayIcon />\n\t\t\t</h1>\n\t\t</header>\n\t)\n}\n","import { useContext } from 'react'\nimport { RenderersContext } from '../contexts'\n\ntype PropType = {\n\ttitle: string\n\tdescription?: string\n}\n\nexport default function Meta({ title, description }: PropType) {\n\tconst { Head } = useContext(RenderersContext)\n\tif (!Head) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<Head>\n\t\t\t<title>{title}</title>\n\t\t\t<meta property=\"og:type\" content=\"article\" />\n\t\t\t<meta property=\"og:title\" content={title} />\n\t\t\t{description && <meta property=\"og:description\" content={description} />}\n\t\t\t{description && <meta name=\"description\" content={description} />}\n\t\t</Head>\n\t)\n}\n","import { utils } from 'publicodes'\nimport {\n\tlazy,\n\tmemo,\n\tRefObject,\n\tSuspense,\n\tuseCallback,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport { styled } from 'styled-components'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { Arrow } from '../component/icons'\nimport { useEngine } from '../hooks'\n\nconst RulesSearch = lazy(() => import('./RulesSearch'))\n\ninterface Props {\n\tdottedName: string\n\tsearchBar: boolean\n\tmobileMenuPortalId?: string\n\topenNavButtonPortalId?: string\n}\n\nexport const RulesNav = ({\n\tdottedName,\n\tsearchBar,\n\tmobileMenuPortalId,\n\topenNavButtonPortalId,\n}: Props) => {\n\tconst baseEngine = useEngine()\n\tconst parsedRules = baseEngine.getParsedRules()\n\tconst parsedRulesNames = Object.keys(parsedRules)\n\n\tconst [navOpen, setNavOpen] = useState(false)\n\n\tconst initLevel = (dn: string) =>\n\t\tObject.fromEntries([\n\t\t\t[dn, true],\n\t\t\t...utils.ruleParents(dn).map((parent) => [parent, true]),\n\t\t] as [string, boolean][])\n\n\tconst [level, setLevel] = useState(initLevel(dottedName))\n\n\tuseEffect(() => {\n\t\tsetLevel((prev) => ({ ...prev, ...initLevel(dottedName) }))\n\t}, [dottedName])\n\n\tconst toggleDropdown = useCallback((ruleDottedName: string) => {\n\t\tsetLevel((prevLevel) =>\n\t\t\t!prevLevel[ruleDottedName] ?\n\t\t\t\t{\n\t\t\t\t\t...prevLevel,\n\t\t\t\t\t[ruleDottedName]: !prevLevel[ruleDottedName],\n\t\t\t\t}\n\t\t\t:\tObject.fromEntries(\n\t\t\t\t\tObject.entries(prevLevel).map(([dot, val]) =>\n\t\t\t\t\t\tdot.startsWith(ruleDottedName) ? [dot, false] : [dot, val],\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t)\n\t}, [])\n\n\tconst openNavButtonPortalElement =\n\t\ttypeof window === 'undefined' ? null : (\n\t\t\t(openNavButtonPortalId &&\n\t\t\t\twindow.document.getElementById(openNavButtonPortalId)) ||\n\t\t\twindow.document.getElementById('rules-nav-open-nav-button')\n\t\t)\n\n\tconst navRef = useRef<HTMLHtmlElement>(null)\n\n\tconst menu = (\n\t\t<Container $open={navOpen}>\n\t\t\t<Background\n\t\t\t\t$open={navOpen}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetNavOpen((open) => !open)\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t{/* Portal in Header */}\n\t\t\t{openNavButtonPortalElement &&\n\t\t\t\tReactDOM.createPortal(\n\t\t\t\t\t<OpenNavButton onClick={() => setNavOpen(true)}>\n\t\t\t\t\t\tToutes les règles\n\t\t\t\t\t</OpenNavButton>,\n\t\t\t\t\topenNavButtonPortalElement,\n\t\t\t\t)}\n\n\t\t\t<Nav $open={navOpen} ref={navRef}>\n\t\t\t\t{searchBar ?\n\t\t\t\t\t<Suspense fallback={<p>Chargement...</p>}>\n\t\t\t\t\t\t<RulesSearch />\n\t\t\t\t\t</Suspense>\n\t\t\t\t:\tnull}\n\t\t\t\t<ul>\n\t\t\t\t\t{parsedRulesNames\n\t\t\t\t\t\t.sort((a, b) => a.localeCompare(b))\n\t\t\t\t\t\t.map((ruleDottedName) => {\n\t\t\t\t\t\t\tconst parentDottedName = utils.ruleParent(ruleDottedName)\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\truleDottedName.split(' . ').length > 1 &&\n\t\t\t\t\t\t\t\t!level[parentDottedName]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst open = ruleDottedName in level && level[ruleDottedName]\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<MemoNavLi\n\t\t\t\t\t\t\t\t\tkey={ruleDottedName}\n\t\t\t\t\t\t\t\t\truleDottedName={ruleDottedName}\n\t\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\t\tactive={dottedName === ruleDottedName}\n\t\t\t\t\t\t\t\t\tonClickDropdown={toggleDropdown}\n\t\t\t\t\t\t\t\t\tnavRef={navRef}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</Nav>\n\t\t</Container>\n\t)\n\n\tconst isMobileMenu =\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.matchMedia(`(max-width: ${breakpointsWidth.lg})`).matches\n\n\tconst mobileMenuPortalElement =\n\t\ttypeof window !== 'undefined' && mobileMenuPortalId ?\n\t\t\twindow.document.getElementById(mobileMenuPortalId)\n\t\t:\tnull\n\n\treturn isMobileMenu && mobileMenuPortalElement ?\n\t\t\tReactDOM.createPortal(menu, mobileMenuPortalElement)\n\t\t:\tmenu\n}\n\ntype NavLiProps = {\n\truleDottedName: string\n\topen: boolean\n\tactive: boolean\n\tonClickDropdown: (ruleDottedName: string) => void\n\tnavRef: RefObject<HTMLHtmlElement>\n}\nconst NavLi = ({\n\truleDottedName,\n\topen,\n\tactive,\n\tonClickDropdown,\n\tnavRef,\n}: NavLiProps) => {\n\tconst baseEngine = useEngine()\n\n\tconst parsedRules = baseEngine.getParsedRules()\n\tconst childrenCount = Object.keys(parsedRules).reduce(\n\t\t(acc, ruleDot) =>\n\t\t\t(\n\t\t\t\truleDot.startsWith(ruleDottedName + ' . ') &&\n\t\t\t\truleDot.split(' . ').length === ruleDottedName.split(' . ').length + 1\n\t\t\t) ?\n\t\t\t\tacc + 1\n\t\t\t:\tacc,\n\t\t0,\n\t)\n\n\tconst activeLi = useRef<HTMLLIElement>(null)\n\tuseEffect(() => {\n\t\tif (navRef.current && activeLi.current?.offsetTop) {\n\t\t\tnavRef.current.scrollTop = activeLi.current?.offsetTop\n\t\t}\n\t}, [active])\n\treturn (\n\t\t<li\n\t\t\tkey={ruleDottedName}\n\t\t\tref={active ? activeLi : undefined}\n\t\t\tstyle={{\n\t\t\t\tpaddingLeft: (ruleDottedName.split(' . ').length - 1) * 16,\n\t\t\t}}\n\t\t\tclassName={\n\t\t\t\t(childrenCount > 0 ? 'dropdown ' : '') + (active ? 'active ' : '')\n\t\t\t}\n\t\t>\n\t\t\t<span className=\"content\">\n\t\t\t\t{childrenCount > 0 && (\n\t\t\t\t\t<DropdownButton\n\t\t\t\t\t\taria-label={open ? 'Replier le sous-menu' : 'Déplier le sous-menu'}\n\t\t\t\t\t\taria-expanded={open}\n\t\t\t\t\t\tonClick={() => onClickDropdown(ruleDottedName)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StyledArrow $open={open} />\n\t\t\t\t\t</DropdownButton>\n\t\t\t\t)}\n\t\t\t\t<RuleLinkWithContext dottedName={ruleDottedName} displayIcon />\n\t\t\t</span>\n\t\t</li>\n\t)\n}\n\nconst MemoNavLi = memo(NavLi)\n\nexport const breakpointsWidth = {\n\tsm: '576px',\n\tmd: '768px',\n\tlg: '992px',\n\txl: '1200px',\n}\n\nconst Container = styled.div<{ $open: boolean }>`\n\tz-index: 200;\n\toverflow: auto;\n\tposition: sticky;\n\ttop: 0;\n\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tmax-width: 50%;\n\t\tflex-shrink: 0;\n\t}\n`\n\nconst Background = styled.div<{ $open: boolean }>`\n\tbackground: rgb(0 0 0 / 25%);\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0;\n\tright: 0;\n\tz-index: 200;\n\ttransition: ease-in-out 0.25s;\n\ttransition-property: visibility, opacity;\n\tvisibility: ${({ $open }) => ($open ? 'visible' : 'hidden')};\n\topacity: ${({ $open }) => ($open ? '1' : '0')};\n\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tdisplay: none;\n\t}\n`\n\nconst OpenNavButton = styled.button`\n\tmargin: 0.25rem 0;\n\tmargin-right: 0.5rem;\n\tbackground: none;\n\tborder: 1px solid rgb(29, 66, 140);\n\tborder-radius: 3px;\n\tcolor: rgb(29, 66, 140);\n\tpadding: 0.5rem;\n\tdisplay: inline-block;\n\n\t&:hover {\n\t\tbackground-color: rgb(219, 231, 255);\n\t}\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tdisplay: none;\n\t}\n`\n\nconst Nav = styled.nav<{ $open: boolean }>`\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tflex-shrink: 0;\n\t}\n\tborder-right: 1px solid #e6e6e6;\n\toverflow: auto;\n\tmax-height: calc(100vh - 2rem);\n\tposition: sticky;\n\ttop: 0;\n\t@media (max-width: ${breakpointsWidth.lg}) {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tpadding-top: 1rem;\n\t\tbottom: 0;\n\t\tz-index: 200;\n\t\tmax-height: initial;\n\t\tbackground: white;\n\t\tmax-width: 80vw;\n\t\theight: 100%;\n\n\t\ttransition: all ease-in-out 0.25s;\n\t\t${({ $open }) => ($open ? '' : 'transform: translateX(-100%);')}\n\t}\n\n\tul {\n\t\tflex-wrap: nowrap;\n\t\tmargin: 0;\n\n\t\tpadding: 0;\n\t\tlist-style: none;\n\t\tli {\n\t\t\tmargin-bottom: 3px;\n\t\t\tmax-width: 350px;\n\t\t\t.content {\n\t\t\t\tborder-radius: 3px;\n\t\t\t\tpadding: 3px 1rem;\n\t\t\t\tdisplay: flex;\n\t\t\t\twidth: fit-content;\n\t\t\t\talign-items: center;\n\t\t\t\tflex-direction: row;\n\t\t\t\tflex-wrap: nowrap;\n\t\t\t}\n\n\t\t\t&.active .content {\n\t\t\t\tbackground-color: #e6e6e6;\n\t\t\t}\n\t\t\t&:not(.active) a {\n\t\t\t\tfont-weight: normal;\n\t\t\t}\n\t\t\t&:not(.dropdown) .content:before {\n\t\t\t\tcontent: ' ';\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tbackground-color: #b3b3b3;\n\t\t\t\tmin-width: 0.5rem;\n\t\t\t\tmin-height: 0.5rem;\n\t\t\t\tborder-radius: 0.5rem;\n\t\t\t\tmargin-left: 0.5rem;\n\t\t\t\tmargin-right: 1.25rem;\n\t\t\t\tpointer-events: none;\n\t\t\t}\n\t\t}\n\t}\n`\n\nconst DropdownButton = styled.button`\n\tmargin-right: 0.75rem;\n\tflex-shrink: 0;\n\tbackground: none;\n\tborder: 1px solid #b3b3b3;\n\tborder-radius: 2rem;\n\twidth: 1.5rem;\n\theight: 1.5rem;\n\tcolor: #999;\n\tpadding: 0;\n\tdisplay: inline-block;\n`\n\nconst StyledArrow = styled(Arrow)<{ $open: boolean }>`\n\twidth: 100%;\n\ttransition: transform 0.1s;\n\theight: 100%;\n\ttransform: rotate(${({ $open }) => ($open ? '0deg' : '-90deg')});\n`\n"],"mappings":";;;;;;;;;;;;;AAAA,SAAS,SAAAA,cAAa;;;ACAtB,SAAkB,oBAAoB;;;ACcpC,SASE,KATF;AAVK,IAAM,gBAAgB,CAAC;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AACD,MAIM;AACL,SACC,qBAAC,SACC;AAAA,gBAAY;AAAA,IACb;AAAA,MAAC;AAAA;AAAA,QACA,WAAU;AAAA,QACV,OAAO;AAAA,UACN,UAAU;AAAA,UACV,QAAQ;AAAA,QACT;AAAA,QAEA,8BAAC,eAAY,MAAM,OAAO;AAAA;AAAA,IAC3B;AAAA,IACC,CAAC,YAAY;AAAA,KACf;AAEF;;;ACrBG,SACC,OAAAC,MADD,QAAAC,aAAA;AAHY,SAAR,gBAAiC,MAAgC;AACvE,SACC,gBAAAD,KAAC,iBAAc,OAAO,KAAK,YAAY,QACtC,0BAAAC,MAAC,OACA;AAAA,oBAAAD,KAAC,YAAO,wBAAU;AAAA,IAClB,gBAAAA,KAAC,eAAY,MAAM,KAAK,YAAY,SAAS;AAAA,KAC9C,GACD;AAEF;;;ACbA,SAAwB,iBAAiB;AAEzC,SAAS,UAAAE,eAAc;;;ACDvB,SAAS,KAAK,UAAAC,eAAc;;;ACD5B,SAA2B,mBAAmB;AAC9C,SAAS,cAAc;AAenB,gBAAAC,YAAA;AARG,IAAM,gBAAgB,CAAC,EAAE,MAAM,KAAK,MAAa;AACvD,SACC,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACA,WAAU;AAAA,MACV,OAAO,SAAS,OAAO,mBAAmB;AAAA,MAC1C,cAAY,SAAS,OAAO,0BAA0B;AAAA,MAErD,mBAAS,OACT,gBAAAA,KAAC,UAAK,eAAW,MAAC,eAAC,IAClB,YAAY,EAAE,WAAW,MAAM,KAAK,CAAC;AAAA;AAAA,EACxC;AAEF;AAEA,IAAM,yBAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACtBtC,IAAM,SAAS;AAAA,EACd,iBAAiB;AAAA,EACjB,qBAAqB;AAAA,EACrB,kBAAkB;AAAA,EAClB,sBAAsB;AAAA,EACtB,iBAAc;AAAA,EACd,qBAAkB;AAAA,EAClB,OAAO;AAAA,EACP,SAAS;AAAA,EACT,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,yBAAyB;AAAA,EACzB,yBAAyB;AAAA,EACzB,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,YAAY;AAAA,EACZ,iBAAc;AAAA,EACd,mBAAmB;AAAA,EACnB,aAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AACP;AACA,IAAO,yBAAQ,CAAC,SAAS,OAAO,IAAI,KAAK;;;AFDtB,SAwCjB,UAxCiB,OAAAC,MAKd,QAAAC,aALc;AATZ,SAAS,SAAS;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AACf,GAAU;AACT,SACC,gBAAAA,MAAC,kBAAe,cAAc,MAC5B;AAAA,mBAAe,gBAAAD,KAAC,gBAAa,MAAa,gBAAK;AAAA,IAChD,gBAAAC,MAAC,SACC;AAAA;AAAA,MAEA,UAAU,UACV,gBAAAA,MAAC,uBACA;AAAA,wBAAAD,KAAC,WAAM,oBAAQ;AAAA,QACf,gBAAAA,KAAC,iBAAc,MAAM,OAAO,MAAY;AAAA,SACzC;AAAA,OAEF;AAAA,KACD;AAEF;AAEA,IAAM,iBAAiBE,QAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBASb,CAAC,EAAE,aAAa,MAAM,uBAAe,YAAY,CAAC;AAAA;AAAA;AAAA;AAAA;AAMnE,IAAM,eAAe,CAAC;AAAA,EACrB;AAAA,EACA,SAAS;AAAA,EACT;AACD,MAIM;AACL,SACC,gBAAAF,KAAA,YACC,0BAAAA;AAAA,IAAC;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAO;AAAA,MACP,MAAM,8CAA2C,IAAI;AAAA,MAEpD;AAAA;AAAA,EACF,GACD;AAEF;AAEA,IAAM,qBAAqBE,QAAO;AAAA,qBACb,CAAC,EAAE,KAAK,MAAM,uBAAe,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAYpD,CAAC,UACF,MAAM,SACL;AAAA;AAAA;AAAA,OAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA;AAAA;AAAA;AAAA;AAAA;AAMJ,IAAM,sBAAsBA,QAAO;AAAA;AAAA;AAAA;AAAA;;;ADlF9B,SAOC,YAAAC,WAPD,OAAAC,MAOC,QAAAC,aAPD;AALU,SAAR,YAAwB,EAAE,WAAW,aAAa,KAAK,GAAU;AACvE,SACC,gBAAAD,KAAC,YAAS,MAAK,aAAS,OAAO,WAAW,MACzC,0BAAAA,KAAC,mBACA,0BAAAC,MAAC,QAAG,WAAU,cACb;AAAA,oBAAAD,KAAC,yBAAiB,aAA0B;AAAA,IAC5C,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACA,UAAU,YAAY;AAAA,QACtB,gBAAgB,YAAY;AAAA;AAAA,IAC7B;AAAA,IAEC,aAAa,UAAa,YAAY,SAAS,SAAS,KACxD,gBAAAC,MAAAF,WAAA,EACC;AAAA,sBAAAC,KAAC,OAAE,2BAAa;AAAA,MAChB,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACA,MAAO,MAAM,aAAc,YAAY,SAAS,aAAa;AAAA,UAC7D,MAAM,UAAU,GAAG;AAAA;AAAA,MACpB;AAAA,OACD;AAAA,KAEF,GACD,GACD;AAEF;AAEO,IAAM,wBAAmB,CAAC;AAAA,EAChC;AACD,MAAkC;AACjC,QAAM,iBAAiB,YAAY;AACnC,SACC,gBAAAC,MAAAF,WAAA,EACC;AAAA,oBAAAE,MAAC,QACA;AAAA,sBAAAD,KAAC,UAAK,WAAU,OAAM,yBAAW;AAAA,MACjC,gBAAAA,KAAC,UAAK,WAAU,SACf,0BAAAA,KAAC,eAAY,MAAM,YAAY,UAAU,GAC1C;AAAA,SAJO,UAKR;AAAA,IACC,kBAAkB,CAAC,eAAe,aAClC,gBAAAC,MAAC,QACA;AAAA,sBAAAD,KAAC,UAAK,WAAU,OAAM,+BAAiB;AAAA,MACvC,gBAAAA,KAAC,UAAK,WAAU,SACf,0BAAAA,KAAC,eAAY,MAAM,gBAAgB,GACpC;AAAA,SAJO,gBAKR;AAAA,KAEF;AAEF;AAMO,IAAM,eAAe,CAAC;AAAA,EAC5B;AAAA,EACA;AACD,MAAyB;AACxB,QAAM,gBAAgB,SAAS,KAAK,CAAC,EAAE,SAAS,MAAM,QAAQ;AAC9D,MAAI,CAAC,SAAS,QAAQ;AACrB,WAAO;AAAA,EACR;AACA,SACC,gBAAAC,MAAC,WAAM,WAAU,YAChB;AAAA,oBAAAD,KAAC,WACA,0BAAAC,MAAC,QACA;AAAA,sBAAAD,KAAC,QAAG,mCAAqB;AAAA,MACxB,UAAU,SAAS,CAAC,KAAK,gBAAAA,KAAC,QAAG,kBAAI;AAAA,OAChC,aAAa,SAAS,CAAC,KACxB,eAAe,aAAa,WAAc,gBAAAA,KAAC,QAAG,qBAAO;AAAA,OACvD,GACD;AAAA,IACA,gBAAAA,KAAC,WACC,mBAAS,IAAI,CAAC,SAAS,MACvB,gBAAAA,KAAC,WAAgB,SAAkB,kBAArB,CAAqD,CACnE,GACF;AAAA,KACD;AAEF;AAMA,IAAM,UAAU,CAAC,EAAE,SAAS,eAAe,MAAoB;AAC9D,QAAM,gBAAgB,QAAQ;AAC9B,SACC,gBAAAC,MAAC,QAAG,WAAW,WAAW,gBAAgB,cAAc,EAAE,IACzD;AAAA,oBAAAD,KAAC,QACC,kBAAQ,QAAQ,cAAc,WAC9B,kCACC,gBAAAC,MAAAF,WAAA,EAAE;AAAA;AAAA,MACU,gBAAAC,KAAC,eAAY,MAAM,QAAQ,SAAS;AAAA,MAC/C,kBAAkB,CAAC,eAAe,aAClC,gBAAAC,MAAAF,WAAA,EACE;AAAA;AAAA,QACD,gBAAAC,KAAC,eAAY,MAAM,gBAAgB;AAAA,SACpC;AAAA,OAEF,KAXM,SAaR;AAAA,IACC,UAAU,WACV,gBAAAA,KAAC,QACA,0BAAAA,KAAC,eAAY,MAAM,QAAQ,MAAM,KAD1B,MAER;AAAA,KAEC,QAAQ,aAAa,UAAa,aAAa,YAChD,gBAAAA,KAAC,QACC,uBAAa,UACb,gBAAAA,KAAC,eAAY,MAAM,QAAQ,SAAS,IACnC,gBAAAA,KAAC,iBAAc,MAAM,QAAQ,WAAW,MAAM,QAAQ,MAAM,KAHvD,OAIR;AAAA,KAEF;AAEF;AAEO,IAAM,kBAAkBE,QAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AI5ItC,SAAS,cAAAC,aAAY,SAAS,YAAAC,iBAAgB;AAC9C,SAAS,OAAAC,MAAK,UAAAC,eAAc;;;ACD5B,SAAS,eAAe,YAAY,gBAAgB;AACpD,SAAS,UAAAC,eAAc;AA0Bd,SAgCH,YAAAC,WAhCG,OAAAC,MAgCH,QAAAC,aAhCG;AAnBM,SAAR,UACN,MAGC;AACD,QAAM,SAAS,WAAW,aAAa;AACvC,QAAM,EAAE,YAAY,WAAW,KAAK,IAAI;AACxC,QAAM,OAAO,QAAQ,QAAQ,YAAY,KAAK,UAAU;AACxD,MAAI,CAAC,MAAM;AACV,UAAM,IAAI,MAAM,iBAAiB,UAAU,EAAE;AAAA,EAC9C;AACA,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAS,IAAI;AACzC,QAAM,gBAAgB,WAAW,sBAAsB;AAEvD,MACC,KAAK,eAAe,KAAK,oBAAoB,QAAQ,KAAK,QAC1D,CAAC,KAAK,KAAK,SAAS,KAAK,KACzB,KAAK,aACJ;AACD,WAAO,gBAAAD,KAAC,eAAY,MAAM,QAAQ,SAAS,IAAI,GAAG;AAAA,EACnD;AACA,SACC,gBAAAC;AAAA,IAAC;AAAA;AAAA,MACA,OAAO;AAAA,QACN,SAAS;AAAA,QACT,MAAM,gBAAgB,IAAI;AAAA,QAC1B,eAAe;AAAA,QACf,UAAU;AAAA,MACX;AAAA,MAEA;AAAA,wBAAAA;AAAA,UAAC;AAAA;AAAA,YACA,OAAO;AAAA,cACN,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,UAAU;AAAA,cACV,gBAAgB;AAAA,YACjB;AAAA,YAEA;AAAA,8BAAAD,KAAC,UAAK,OAAO,EAAE,cAAc,SAAS,GACrC,0BAAAA,KAAC,uBAAoB,YAAwB,GAC9C;AAAA,cAEA,gBAAAC;AAAA,gBAAC;AAAA;AAAA,kBACA,OAAO;AAAA,oBACN,MAAM;AAAA,oBAEN,SAAS;AAAA,oBACT,YAAY;AAAA,kBACb;AAAA,kBAEC;AAAA,qCACA,gBAAAA,MAAAF,WAAA,EACC;AAAA,sCAAAC;AAAA,wBAAC;AAAA;AAAA,0BACA,SAAS,MAAM,UAAU,CAAC,MAAM;AAAA,0BAChC,iBAAe,CAAC;AAAA,0BAChB,WAAU;AAAA,0BACV,cACC,SACC,sCACC;AAAA,0BAGF,mBAAS,eAAY;AAAA;AAAA,sBACvB;AAAA,sBACA,gBAAAA,KAAC,eAAY;AAAA,uBACd;AAAA,oBAGA,cAAc,UACd,gBAAAA,KAAC,iBAAc,MAAM,WAAW,MAAY;AAAA;AAAA;AAAA,cAE9C;AAAA;AAAA;AAAA,QACD;AAAA,QAAO;AAAA,QACN,CAAC,UACD,gBAAAA,KAAC,SACA,0BAAAA,KAAC,uBAAuB,UAAvB,EAAgC,OAAO,OACvC,0BAAAA,KAAC,eAAY,MAAM,QAAQ,SAAS,IAAI,GAAG,GAC5C,GACD;AAAA;AAAA;AAAA,EAEF;AAEF;AAEO,IAAM,yBAAyB,cAAuB,KAAK;AAElE,IAAM,eAAeE,QAAO;AAAA;AAAA;AAG5B,IAAM,cAAcA,QAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AD5EzB,qBAAAC,WACyB,OAAAC,MA2BlB,QAAAC,aA5BP;AAda,SAAR,sBAAuC;AAAA,EAC7C;AAAA,EACA;AAAA,EACA;AACD,GAEG;AACF,QAAM,EAAE,MAAM,aAAa,IAAI;AAE/B,QAAM,sBACL,YAAY,QAAQ,gBAAgB,QAAQ,OAAO,KAAK,IAAI,EAAE,WAAW;AAC1E,QAAM,kBAAkB,YAAY,QAAQ,OAAO,KAAK,IAAI,EAAE,WAAW;AAEzE,SACC,gBAAAA,MAAAF,WAAA,EACE;AAAA,2BAAuB,gBAAAC,KAAC,2BAAwB,MAAM,KAAK,QAAQ;AAAA,IACpE,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACA,OAAO;AAAA,UACN,WAAW,sBAAsB,SAAS;AAAA,QAC3C;AAAA,QAEA,0BAAAA,KAAC,YAAS,MAAM,cAAc,OAAO,WAAW,MAC9C,gCACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACA,MAAM,KAAK,YAAY;AAAA,YACvB;AAAA;AAAA,QACD,IACC,kBACD,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACA,MAAM,KAAK;AAAA,YACX;AAAA;AAAA,QACD,IACC,gBAAAA,KAAC,QACA,iBAAO,QAAQ,IAAI,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,MACrC,gBAAAC;AAAA,UAAC;AAAA;AAAA,YAEA,OAAO;AAAA,cACN,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,SAAS;AAAA,YACV;AAAA,YAEA;AAAA,8BAAAA,MAAC,UAAM;AAAA;AAAA,gBAAI;AAAA,iBAAa;AAAA,cACxB,gBAAAD,KAAC,UACA,0BAAAA,KAAC,2BAAwB,MAAM,OAAO,GACvC;AAAA;AAAA;AAAA,UAVK;AAAA,QAWN,CACA,GACF,GAEF;AAAA;AAAA,IACD;AAAA,KACD;AAEF;AAEA,SAAS,wBAAwB;AAAA,EAChC;AAAA,EACA;AACD,GAGG;AACF,MAAI,MAAM,QAAQ,IAAI,GAAG;AACxB,UAAM,OACL,iBAAiB,YAAY,SAC3B,iBAAiB,UAAU,MAC3B;AACH,WACC,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACA,aAAa;AAAA,QACb,mBAAmB,iBAAiB;AAAA,QACpC;AAAA;AAAA,IACD;AAAA,EAEF;AACA,SAAO,gBAAAA,KAAC,eAAY,MAAY;AACjC;AAGA,IAAM,wBAAwB,CAAC,MAAe;AAC7C,QAAM,YAAYE,YAAW,aAAa,GAAG,SAAS,CAAC,EAAE;AACzD,SAAO,cAAc,QAAQ,cAAc;AAC5C;AAQA,SAAS,MAAM,EAAE,aAAa,oBAAoB,MAAM,KAAK,GAAe;AAC3E,QAAM,CAAC,uBAAuB,wBAAwB,IAAI,YAAY;AAAA,IACrE,CAAC,KAAK,MAAM;AACX,UAAI,qBAAqB,sBAAsB,CAAC,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC;AACjE,aAAO;AAAA,IACR;AAAA,IACA,CAAC,CAAC,GAAG,CAAC,CAAC;AAAA,EACR;AACA,QAAM,CAAC,mBAAmB,oBAAoB,IAAIC;AAAA,IACjD,sBAAsB,WAAW;AAAA,EAClC;AACA,QAAM,KAAK;AAAA,IACV,MAAM,6BAA6B,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,CAAC;AAAA,IACzE,CAAC;AAAA,EACF;AACA,SACC,gBAAAF,MAAAF,WAAA,EACC;AAAA,oBAAAC,KAAC,uBAAoB,OAAO,MAC1B,gCAAsB,IAAI,CAAC,MAAqB,MAChD,gBAAAA,KAAC,OAAY,QAAH,CAAe,CACzB,GACF;AAAA,IACC,yBAAyB,SAAS,KAClC,sBAAsB,WAAW,KAChC,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACA,OAAO;AAAA,UACN,WAAW;AAAA,QACZ;AAAA,QAEA,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACA,iBAAe;AAAA,YACf,iBAAe;AAAA,YACf,WAAU;AAAA,YACV,SAAS,MAAM,qBAAqB,CAAC,iBAAiB;AAAA,YAErD,8BACA,uCACC;AAAA;AAAA,QACH;AAAA;AAAA,IACD;AAAA,IAED,qBACA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP,YAAY,sBAAsB,SAAS;AAAA,QAE1C,mCAAyB,IAAI,CAAC,MAAqB,MACnD,gBAAAA,KAAC,OAAY,QAAH,CAAe,CACzB;AAAA;AAAA,IACF;AAAA,KAEF;AAEF;AACA,IAAM,wBAAwBI,QAAO;AAAA;AAAA;AAAA;AAIrC,IAAM,sBAAsBA,QAAO;AAAA;AAAA;AAAA;AAAA,GAOhC,CAAC,EAAE,OAAO,WAAW,MACtB,SACA,CAAC,cACDC;AAAA;AAAA;AAAA;AAAA,GAIC;AAAA,GACA,CAAC,EAAE,MAAM,MACV,SACAA;AAAA;AAAA;AAAA,gBAGc,KAAK;AAAA;AAAA,GAElB;AAAA;AAIH,SAAS,IAAI,EAAE,KAAK,GAA4B;AAC/C,SACC,gBAAAL,KAAC,aAAU,OAAO,EAAE,SAAS,YAAY,GACxC,0BAAAA,KAAC,uBAAuB,UAAvB,EAAgC,OAAO,MACvC,0BAAAA,KAAC,eAAY,MAAY,GAC1B,GACD;AAEF;AAEA,IAAM,YAAYI,QAAO;AAAA;AAAA;AAAA;AAAA;;;AE7LvB,gBAAAE,YAAA;AAFa,SAAR,kBAAmC,MAAkC;AAC3E,SACC,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC,GAAG;AAAA,MACJ,WAAW,EAAE,cAAc,KAAK,UAAU,MAAM,KAAK,YAAY;AAAA;AAAA,EAClE;AAEF;;;ACVA,SAAwB,eAAAC,oBAAmB;AAYlC,gBAAAC,YAAA;AAVM,SAAR,SAA0B;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAA8B;AAC7B,MAAI,cAAc,QAAW;AAC5B,WAAO;AAAA,EACR;AACA,MAAI,cAAc,MAAM;AACvB,WAAO,gBAAAA,KAAC,UAAK,WAAU,SAAS,UAAAD,aAAY,EAAE,UAAU,CAAC,GAAE;AAAA,EAC5D,WAAW,eAAe;AACzB,WACC,gBAAAC,KAAC,UAAK,WAAW,MACf,UAAAD;AAAA,MACA,EAAE,WAAW,KAAK;AAAA,MAClB;AAAA,QACC,WAAW;AAAA,MACZ;AAAA,IACD,GACD;AAAA,EAEF,OAAO;AACN,WAAO,gBAAAC,KAAC,UAAK,WAAU,SAAS,UAAAD,aAAY,EAAE,WAAW,KAAK,CAAC,GAAE;AAAA,EAClE;AACD;;;AC1BA,SAAS,YAAAE,iBAAgB;AACzB,SAAS,UAAAC,eAAc;AAerB,qBAAAC,WAEE,OAAAC,OASG,QAAAC,aAXL;AARa,SAAR,SAA0B,EAAE,YAAY,GAA8B;AAC5E,QAAM,SAAS,UAAU;AACzB,QAAM,iBACL,YAAY,cACX,OAAO,WAAW,YAAY,WAAW,KAAK,SAC7C;AAEH,SACC,gBAAAA,MAAAF,WAAA,EACC;AAAA,oBAAAE,MAAC,YAAS,MAAK,YACd;AAAA,sBAAAD,MAAC,OAAE,0FAEH;AAAA,MACA,gBAAAA,MAAC,YACC,sBAAY,SAAS,IAAI,CAAC,CAAC,QAAQ,QAAQ,MAC3C,gBAAAC,MAACF,WAAA,EACA;AAAA,wBAAAC,MAAC,QACA,0BAAAA,MAAC,uBAAoB,YAAY,OAAO,YAAsB,GAC/D;AAAA,QACA,gBAAAC,MAAC,QACA;AAAA,0BAAAD,MAAC,UAAK,eAAW,MAAC,iBAAG;AAAA,UACrB,gBAAAA,MAAC,eAAY,MAAM,UAAU;AAAA,WAC9B;AAAA,WAPc,OAAO,UAQtB,CACA,GACF;AAAA,OACD;AAAA,IACA,gBAAAA,MAAC,cAAc,UAAd,EAAuB,OAAO,gBAC9B,0BAAAA,MAAC,eAAY,MAAM,YAAY,QAAQ,GACxC;AAAA,KACD;AAEF;AAEA,IAAM,WAAWE,QAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACtCtB,gBAAAC,aAAA;AAFa,SAAR,mBAA+B,MAA8B;AACnE,SACC,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC,GAAG;AAAA,MACJ,WAAW,EAAE,cAAc,KAAK,UAAU,MAAM,KAAK,YAAY;AAAA;AAAA,EAClE;AAEF;;;ACHE,gBAAAC,aAAA;AAJa,SAAR,yBACN,MACC;AACD,SACC,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC,GAAG;AAAA,MACJ,WAAW;AAAA,QACV,cAAc,KAAK;AAAA,QACnB,MAAM,EAAE,QAAQ,KAAK,YAAY;AAAA,MAClC;AAAA;AAAA,EACD;AAEF;;;ACRE,gBAAAC,aAAA;AAJa,SAAR,0BACN,MACC;AACD,SACC,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC,GAAG;AAAA,MACJ,WAAW;AAAA,QACV,cAAc,KAAK;AAAA,QACnB,MAAM,EAAE,QAAQ,KAAK,YAAY;AAAA,MAClC;AAAA;AAAA,EACD;AAEF;;;ACCI,SACC,OAAAC,OADD,QAAAC,aAAA;AAJW,SAAR,OAAwB,EAAE,WAAW,aAAa,KAAK,GAAU;AACvE,SACC,gBAAAD,MAAC,mBACA,0BAAAA,MAAC,YAAS,MAAK,UAAS,OAAO,WAAW,MACzC,0BAAAC,MAAC,QAAG,WAAU,cACb;AAAA,oBAAAD,MAAC,yBAAiB,aAA0B;AAAA,IAC5C,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACA,UAAU,YAAY;AAAA,QACtB,gBAAgB,YAAY;AAAA;AAAA,IAC7B;AAAA,KACD,GACD,GACD;AAEF;;;ACZI,qBAAAE,WACC,OAAAC,OADD,QAAAC,aAAA;AATW,SAAR,wBAAoC;AAAA,EAC1C;AAAA,EACA;AACD,GAA+B;AAC9B,QAAM,SAAS,UAAU;AAEzB,SACC,gBAAAD,MAAC,YAAS,MAAK,0BAAsB,OAAO,WAC1C,iBAAO,MAAM,iBAAiB,YAAY,gBAC1C,gBAAAC,MAAAF,WAAA,EACC;AAAA,oBAAAC,MAAC,OAAE,oMAIH;AAAA,IACA,gBAAAA,MAAC,eAAY,MAAM,YAAY,eAAe;AAAA,IAC9C,gBAAAA,MAAC,OAAE,2JAGH;AAAA,KACD,IACC,YAAY,gBACb,gBAAAC,MAAAF,WAAA,EACC;AAAA,oBAAAC,MAAC,OAAE,wLAIH;AAAA,IACA,gBAAAA,MAAC,eAAY,MAAM,YAAY,eAAe;AAAA,KAC/C,IACC,gBAAAC,MAAAF,WAAA,EACA;AAAA,oBAAAC,MAAC,OAAE,mJAGH;AAAA,IACA,gBAAAA,MAAC,QAAG,IAAG,uBACL,sBAAY,oBAAoB,IAAI,CAAC,OACrC,gBAAAA,MAAC,QACA,0BAAAA,MAAC,eAAY,MAAM,IAAI,KADf,GAAG,UAEZ,CACA,GACF;AAAA,KACD,GAEF;AAEF;;;AClDA,SAAS,UAAAE,eAAc;AAqBpB,SAEC,YAAAC,WAFD,OAAAC,OAEC,QAAAC,cAFD;AAbY,SAAR,UAA2B;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAAU;AACT,QAAM,mBACL,YAAY,CAAC,EAAE,cAAc,KAC7B,aAAa,YACb,YAAY,CAAC,EAAE,aAAa;AAE7B,SACC,gBAAAA,OAAC,mBAAgB,WAAU,aAAY,MAAK,QAC3C;AAAA,oBAAAD,MAAC,UAAK,eAAC;AAAA,IACN,CAAC,oBACD,gBAAAC,OAAAF,WAAA,EACC;AAAA,sBAAAC,MAAC,eAAY,MAAM,YAAY,CAAC,GAAG;AAAA,MAAE;AAAA,OAEtC;AAAA,IAEA;AAAA,IAAS;AAAA,IACV,gBAAAA,MAAC,eAAY,MAAM,YAAY,CAAC,GAAG;AAAA,IAClC,aAAa,UACb,gBAAAC,OAAC,UAAK,WAAU,UACf;AAAA,sBAAAD,MAAC,WAAM,oBAAQ;AAAA,MACf,gBAAAA,MAAC,iBAAc,MAAM,WAAW,MAAY;AAAA,OAC7C;AAAA,IAED,gBAAAA,MAAC,UAAK,eAAC;AAAA,KACR;AAEF;AAEA,IAAM,kBAAkBE,QAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACzC/B,SAAS,OAAO,YAAAC,iBAAgB;AAqBvB,SAKP,YAAAC,WALO,OAAAC,OAYL,QAAAC,cAZK;AAjBM,SAAR,YAA6B,MAAmC;AACtE,QAAM,SAAS,UAAU;AACzB,QAAM,aAAa,KAAK;AAOxB,QAAM,eAAe,WAAW,KAAK;AACrC,QAAM,wBAAwB,WAAW,KAAK,uBAAuB;AAAA,IACpE,CAAC,EAAE,eAAe,MACjB,OAAO,SAAS,cAAc,EAAE,cAAc,KAAK;AAAA,EACrD;AAEA,MAAI,CAAC,yBAAyB,sBAAsB,wBAAwB;AAC3E,iBAAa,YAAY,KAAK;AAC9B,WAAO,gBAAAD,MAAC,eAAY,MAAM,cAAc;AAAA,EACzC;AACA,QAAM,CAAC,cAAc,eAAe,IAAIE,UAAS,KAAK;AACtD,QAAM,KAAK,MAAM;AACjB,SACC,gBAAAF,MAAAD,WAAA,EACC,0BAAAE;AAAA,IAAC;AAAA;AAAA,MACA,OAAO;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA,MACX;AAAA,MAEA;AAAA,wBAAAA;AAAA,UAAC;AAAA;AAAA,YACA,OAAO;AAAA,cACN,SAAS;AAAA,cACT,eAAe;AAAA,cACf,MAAM;AAAA,YACP;AAAA,YAEC;AAAA,8BACA,gBAAAD;AAAA,gBAAC;AAAA;AAAA,kBACA;AAAA,kBACA,OAAO;AAAA,oBACN,SAAS;AAAA,oBACT,gBAAgB;AAAA,kBACjB;AAAA,kBAEA,0BAAAA,MAAC,eAAY,MAAM,cAAc;AAAA;AAAA,cAClC;AAAA,cAED,gBAAAA,MAAC,eAAY,MAAM,sBAAsB,gBAAgB;AAAA;AAAA;AAAA,QAC1D;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACA,OAAO;AAAA,cACN,YAAY;AAAA,YACb;AAAA,YAEA,0BAAAA;AAAA,cAAC;AAAA;AAAA,gBACA,SAAS,MAAM,gBAAgB,CAAC,YAAY;AAAA,gBAC5C,MAAK;AAAA,gBACL,WAAU;AAAA,gBACV,iBAAe;AAAA,gBACf,iBAAe;AAAA,gBACf,OACC,eACC,oCACC;AAAA,gBAEH;AAAA;AAAA,YAED;AAAA;AAAA,QACD;AAAA;AAAA;AAAA,EACD,GACD;AAEF;;;ACrEY,SAER,YAAAG,YAFQ,OAAAC,OAER,QAAAC,cAFQ;AALG,SAAR,oBACN,MACC;AACD,SACC,gBAAAA,OAAC,UAAK;AAAA;AAAA,IACI,gBAAAD,MAAC,eAAY,MAAM,KAAK,mBAAmB;AAAA,IAAG;AAAA,IACtD,KAAK,QAAQ,QACb,gBAAAC,OAAAF,YAAA,EAAE;AAAA;AAAA,MACI;AAAA,MACJ,KAAK,iBACJ,IAAI,CAAC,OAAO,MAAM,gBAAAC,MAAC,eAAoB,MAAM,SAAT,CAAgB,CAAE,EACtD,KAAK,IAAI;AAAA,OACZ;AAAA,IAEA,KAAK,QAAQ,WAAW,KACxB,gBAAAC,OAAAF,YAAA,EAAE;AAAA;AAAA,MACS;AAAA,MACT,KAAK,iBACJ,IAAI,CAAC,OAAO,MAAM,gBAAAC,MAAC,eAAoB,MAAM,SAAT,CAAgB,CAAE,EACtD,KAAK,IAAI;AAAA,OACZ;AAAA,KAEF;AAEF;;;AC1BA,SAAS,UAAAE,eAAc;AAYlB,gBAAAC,aAAA;AARU,SAAR,aAA8B;AAAA,EACpC;AAAA,EACA;AACD,GAA0B;AACzB,SACC,gBAAAA,MAAC,UACA,0BAAAA,MAAC,kBAAkB,UAAlB,EAA2B,OAAO,YAClC,0BAAAA,MAAC,qBACA,0BAAAA,MAAC,eAAY,MAAM,YAAY,QAAQ,GACxC,GACD,GACD;AAEF;AACA,IAAM,oBAAoBC,QAAO;AAAA;AAAA;AAAA;AAAA;AAMjC,IAAM,SAASA,QAAO;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACbnB,SAMA,OAAAC,OANA,QAAAC,cAAA;AARY,SAAR,mDAAqD;AAAA,EAC3D;AACD,GAAmD;AAClD,SACC,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACA,MAAK;AAAA,MACL,OAAO,YAAY;AAAA,MAEnB;AAAA,wBAAAA,OAAC,OACC;AAAA;AAAA,UAAI;AAAA,UAEgB;AAAA,WACtB;AAAA,QAEA,gBAAAD,MAAC,eAAY,MAAM,YAAY,QAAQ;AAAA;AAAA;AAAA,EACxC;AAEF;;;ACpBA,SAAS,cAAAE,mBAAkB;AAyBvB,SACC,OAAAC,OADD,QAAAC,cAAA;AAZW,SAAR,kBAAmC,EAAE,UAAU,GAAU;AAC/D,QAAM,SAASC,YAAW,aAAa;AAEvC,QAAM,kBAAkB,QAAQ;AAAA,IAC/B,UAAU,KAAK,mBAAmB;AAAA,EACnC;AAKA,SAAO,iBAAiB,cAAc,SACpC,gBAAAF,MAAC,iBAAc,UAAQ,MAAC,OAAO,UAAU,KAAK,QAAQ,GACrD,0BAAAC,OAAC,OACA;AAAA,oBAAAD,MAAC,YAAO,wDAAuC;AAAA,IAC/C,gBAAAA,MAAC,eAAY,MAAM,gBAAgB,YAAY,QAAQ;AAAA,KACxD,GACD,IACC,gBAAAA,MAAC,eAAY,MAAM,UAAU,KAAK,QAAQ,GAAG;AACjD;;;ACZI,SACC,OAAAG,OADD,QAAAC,cAAA;AARW,SAAR,eAAgC;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AACD,GAAU;AACT,SACC,gBAAAD,MAAC,mBACA,0BAAAA,MAAC,YAAS,MAAK,mBAAkB,OAAO,WAAW,MAClD,0BAAAC,OAAC,QAAG,WAAU,cACb;AAAA,oBAAAD,MAAC,yBAAiB,aAA0B;AAAA,IAC5C,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACA,UAAU,YAAY;AAAA,QACtB,gBAAgB,YAAY;AAAA;AAAA,IAC7B;AAAA,KACD,GACD,GACD;AAEF;;;AC7BA,SAAS,UAAAE,eAAc;AASjB,gBAAAC,aAAA;AANS,SAAR,MAAuB,EAAE,YAAY,GAA2B;AACtE,SACC,gBAAAA,MAAC,OACC,sBAAY;AAAA,IAAI,CAAC,YACjB,OAAO,YAAY,WAAW,UAC7B,gBAAAA,MAAC,aACA,0BAAAA,MAAC,eAAY,MAAM,SAAS,KADb,QAAQ,OAExB;AAAA,EAEF,GACD;AAEF;AAEA,IAAM,YAAYC,QAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACNnB,gBAAAC,aAAA;AARS,SAAR,4BAAwC;AAAA,EAC9C;AACD,GAAqC;AACpC,SACC,gBAAAA,MAAC,YAAS,MAAK,4BAAwB,OAAO,QAC7C,0BAAAA,MAAC,QACC,sBAAY,IAAI,CAAC,MAAM,MACvB,gBAAAA,MAAC,QACA,0BAAAA,MAAC,eAAY,MAAY,KADjB,CAET,CACA,GACF,GACD;AAEF;;;AClBA,SAAwB,eAAAC,cAAa,qBAAqB;AAavD,qBAAAC,YACC,OAAAC,OADD,QAAAC,cAAA;AATY,SAAR,mBAA+B;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AACD,GAA2B;AAC1B,MAAI,YAAY,aAAa,YAAY;AACxC,WAAOC,aAAY,EAAE,WAAW,KAAK,CAAC;AAAA,EACvC,WAAW,YAAY,aAAa,aAAa;AAChD,WACC,gBAAAD,OAAAF,YAAA,EACC;AAAA,sBAAAC,MAAC,eAAY,MAAM,aAAa;AAAA,MAAE;AAAA,MAC3B,cAAc,IAAI;AAAA,OAC1B;AAAA,EAEF,OAAO;AACN,WACC,gBAAAA,MAAC,iBAAc,OAAO,aACrB,0BAAAC,OAAC,OACA;AAAA,sBAAAD,MAAC,YAAO,yBAAQ;AAAA,MACf,cAAc,IAAI;AAAA,OACpB,GACD;AAAA,EAEF;AACD;;;AC3BA,SAAS,YAAAG,iBAAgB;AACzB,SAAS,UAAAC,gBAAc;AA0BjB,SAYD,YAAAC,YAZC,OAAAC,OAEC,QAAAC,cAFD;AApBS,SAAR,WAA4B,EAAE,WAAW,aAAa,KAAK,GAAU;AAC3E,QAAM,kBAAkB,YAAY;AAAA,IACnC,CAAC,EAAE,UAAU,MAAO,UAA4B,cAAc;AAAA,EAC/D;AAEA,MAAI;AACJ,MAAI,oBAAoB,QAAW;AAClC,iBAAa,YAAY,eAAe;AACxC,kBAAc;AAAA,MACb,GAAG,YAAY,MAAM,GAAG,eAAe;AAAA,MACvC,GAAG,YAAY,MAAM,kBAAkB,CAAC;AAAA,IACzC;AAAA,EACD;AAEA,QAAM,CAAC,YAAY,aAAa,IAAIC,UAAS,CAAC,UAAU;AACxD,SACC,gBAAAF,MAAC,YAAS,MAAK,cAAa,MAAY,OAAO,WAC9C,0BAAAC,OAAC,QACC;AAAA,kBACA,gBAAAA,OAAC,QACA;AAAA,sBAAAD,MAAC,QAAM,GAAG,YAAY;AAAA,MACtB,gBAAAA,MAAC,UAAK,OAAO,EAAE,aAAa,OAAO,GAClC,0BAAAC;AAAA,QAAC;AAAA;AAAA,UACA,WAAU;AAAA,UACV,SAAS,MAAM,cAAc,CAAC,UAAU;AAAA,UAEvC;AAAA,yBAAa,YAAY;AAAA,YAAW;AAAA;AAAA;AAAA,MACtC,GACD;AAAA,OACD;AAAA,IAEA,cACA,gBAAAD,MAAAD,YAAA,EACE,sBAAY,IAAI,CAAC,aAAa,MAC9B,gBAAAC,MAAC,QACA,0BAAAA,MAAC,QAAM,GAAI,aAA2B,KAD9B,CAET,CACA,GACF;AAAA,KAEF,GACD;AAEF;AAMA,SAAS,KAAK,EAAE,WAAW,YAAY,GAAc;AACpD,SACC,gBAAAA,MAAC,uBACA,0BAAAC,OAAC,cACA;AAAA,oBAAAD,MAAC,mBACC,oBAAU,aAAa,cAAc,UAAU,cAAc,OAC7D,gBAAAA,MAAC,cAAW,oCAAuB,IAClC,gBAAAC,OAAAF,YAAA,EACA;AAAA,sBAAAC,MAAC,cAAW,gCAAsB;AAAA,MAClC,gBAAAA,MAACG,oBAAA,EACA,0BAAAH,MAAC,eAAY,MAAM,WAAW,GAC/B;AAAA,OACD,GAEF;AAAA,IACA,gBAAAA,MAACG,oBAAA,EACA,0BAAAH,MAAC,eAAY,MAAM,aAAa,GACjC;AAAA,KACD,GACD;AAEF;AAEA,IAAMG,qBAAoBC,SAAO;AACjC,IAAM,aAAaA,SAAO;AAAA;AAAA;AAG1B,IAAM,kBAAkBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAO/B,IAAM,aAAaA,SAAO;AAAA;AAAA;AAAA;AAAA;AAM1B,IAAM,sBAAsBA,SAAO;AAAA;AAAA;;;A3BjDF,gBAAAC,aAAA;AAtBjC,IAAM,eAAe;AAAA,EACpB,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAQ;AAAA,EACR,YAAO;AAAA,EACP,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,WAAW;AAAA,EACX,OAAO;AAAA,EACP,WAAW;AAAA,EACX,sBAAsB;AAAA,EACtB,qBAAkB;AAAA,EAClB,MAAM;AAAA,EACN,WAAW;AAAA,EACX,qBAAqB;AAAA,EACrB,UAAU;AAAA,EACV,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,mBAAmB;AAAA,EACnB,sBAAmB;AAAA,EACnB,0CAAiC;AAAA,EACjC,YAAO;AAAA,EACP,sBAAsB,CAAC,SAAS,gBAAAA,MAAC,eAAY,MAAM,KAAK,aAAa;AAAA,EACrE,YAAY;AACb;AAEe,SAAR,YAA6B,EAAE,KAAK,GAAsB;AAChE,QAAM,oBAAoB,KAAK,WAAW,gBAAgB,KAAK;AAC/D,QAAM,SAAS,UAAU;AACzB,QAAM,qBAAqB,aAAa,CAACC,UAAS;AACjD,QAAI,eAAeA,SAAQ,sBAAsBA,MAAK,UAAU;AAC/D,aAAO;AAAA,IACR;AAEA,WAAO,OAAO,aAAaA,KAAI;AAAA,EAChC,GAAG,KAAK;AACR,QAAM,gBAAgB,mBAAmB,IAAI;AAC7C,QAAM,YACL,aAAa,iBAAiB,MAC7B,KAAK,WAAW,eAAe,wBAAwB;AAEzD,MAAI,CAAC,WAAW;AACf,UAAM,IAAI,MAAM,0BAA0B,iBAAiB,EAAE;AAAA,EAC9D;AAEA,SAAO,gBAAAD,MAAC,aAAW,GAAG,eAAe;AACtC;;;A4BxEA;AAAA,EAGC,eAAAE;AAAA,EAGA,iBAAAC;AAAA,EACA,SAAAC;AAAA,OACM;AACP,SAAS,cAAAC,aAAY,aAAAC,YAAW,UAAAC,eAAc;AAC9C,SAAS,UAAAC,gBAAc;;;ACVvB,SAA0C,SAAAC,cAAa;AACvD,SAAS,cAAAC,mBAAkB;AAC3B,SAAS,UAAAC,gBAAc;;;ACFvB,SAAiB,eAAAC,cAAa,aAAa;AAgBxC,SAMC,OAAAC,OAND,QAAAC,cAAA;AAfH,IAAM,EAAE,eAAe,IAAI;AAIZ,SAAR,WAA4B,EAAE,QAAQ,WAAW,GAAU;AACjE,QAAM,OAAO,cAAc,QAAQ,UAAU;AAE7C,MAAI,OAAO,WAAW,eAAe,OAAO,SAAS,SAAS,eAAe;AAC5E,WAAO;AAAA,EACR;AAEA,QAAM,YAAY;AAElB,SACC,gBAAAD,MAAC,OAAE,OAAO,EAAE,WAAW,QAAQ,GAC9B,0BAAAC;AAAA,IAAC;AAAA;AAAA,MACA,QAAO;AAAA,MACP;AAAA,MACA,cAAY,GAAG,SAAS;AAAA,MACxB,KAAI;AAAA,MAEJ;AAAA,wBAAAD,MAAC,UAAK,eAAW,MAAC,0BAAE;AAAA,QAAO;AAAA,QAAE;AAAA;AAAA;AAAA,EAC9B,GACD;AAEF;AAEO,IAAM,gBAAgB,CAAC,QAAgB,eAAuB;AAEpE,QAAM,eAAe,MAAM;AAAA,IAC1B,OAAO,QAAQ,eAAe,aAAa,IAAI,UAAU,KAAK,CAAC;AAAA,EAChE;AAEA,QAAM,OAAO,OAAO,aAAa,OAAO,QAAQ,YAAY,UAAU,CAAC;AAEvE,QAAM,QAAQ;AAAA,IACb,CAAC,UAAU,GAAG,OAAO;AAAA,MACpB,OAAO,QAAQ,KAAK,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,MAAM,QAAQ,KAAK;AAAA,IAC7D;AAAA,EACD;AAIA,QAAM,YAAY,OAAO;AAAA,IACxB,aACE,OAAO,CAAC,SAAS,SAAS,cAAc,CAAC,KAAK,SAAS,eAAe,CAAC,EACvE,IAAI,CAACE,gBAAe,CAACA,aAAY,qBAAqB,IAAI,CAAC,CAAC;AAAA,EAC/D;AAEA,QAAM,SAAS,mBAAmB,KAAK,UAAU,EAAE,OAAO,UAAU,CAAC,CAAC;AAEtE,QAAM,UACL,OAAO,WAAW,eAAe,SAAS,aAAa,cACtD,KACC;AAEH,SAAO,GAAG,OAAO,WAAW,eAAe,UAAU,CAAC,IAAI,MAAM;AACjE;AAMA,SAAS,qBAAqB,MAAyC;AACtE,QAAM,OAAOH,aAAY,IAAI,EAC3B,QAAQ,WAAW,GAAG,EACtB,QAAQ,eAAe,MAAM,EAC7B,QAAQ,KAAK,GAAG;AAClB,MAAI,KAAK,MAAM,QAAQ,KAAK,SAAS,SAAS,SAAS,OAAO;AAC7D,WAAO,KAAK,YAAY;AAAA,EACzB,WAAW,SAAS,KAAK;AACxB,WAAO;AAAA,EACR,OAAO;AACN,WAAO,IAAI,IAAI;AAAA,EAChB;AACD;;;ADpBI,qBAAAI,YACC,OAAAC,OADD,QAAAC,cAAA;AAhDJ,IAAM,KAAKC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAOlB,IAAM,KAAKA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBX,SAAS,mBAAmB;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,CAAC;AAAA,EACb;AAAA,EACA;AAAA,EACA;AACD,GAQG;AACF,QAAM,EAAE,UAAU,IAAIC,YAAW,gBAAgB;AAEjD,QAAM,iBAAiB;AAAA,IACtB;AAAA,MACC,OAAO;AAAA,MACP,IAAI;AAAA,MACJ,UACC,gBAAAF,OAAAF,YAAA,EACC;AAAA,wBAAAC,MAAC,cAAW,QAAgB,YAAwB;AAAA,QAEpD,gBAAAA,MAAC,mBAAgB,WAAsB;AAAA,SACxC;AAAA,IAEF;AAAA,IACC,uBAAuB,kBAAmB,aAC1C;AAAA,MACC,OACC,8BACA;AAAA,QACC,uBAAuB,iBAAiB,aAAa;AAAA,QACrD,aAAa,eAAe;AAAA,MAC7B,EACE,OAAO,CAAC,MAAM,MAAM,IAAI,EACxB,KAAK,KAAK,IACZ;AAAA,MACD,IAAI;AAAA,MACJ,UACC,gBAAAC,OAAAF,YAAA,EACE;AAAA,QAAAK,OAAM;AAAA,UACN,OAAO,YAAY;AAAA,UACnB;AAAA,QACD,KACC,gBAAAH,OAAC,iBACA;AAAA,0BAAAD,MAAC,QAAG,yFAAiD;AAAA,UACrD,gBAAAA,MAAC,OAAE,+KAIH;AAAA,WACD;AAAA,QAEA,cACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACD;AAAA,QAGA,uBAAuB,kBACvB,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACD;AAAA,SAEF;AAAA,IAEF,IACC;AAAA,IACF;AAAA,MACC,OAAO;AAAA,MACP,IAAI;AAAA,MACJ,UACC,gBAAAC,OAAAF,YAAA,EACC;AAAA,wBAAAC,MAAC,eAAY,aAAa,OAAO,KAAK,KAAK,gBAAgB,GAAG;AAAA,QAE9D,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA,kBAAkB,KAAK,cAAc;AAAA;AAAA,QACtC;AAAA,QAEA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA,cAAc,KAAK;AAAA;AAAA,QACpB;AAAA,SACD;AAAA,IAEF;AAAA,EACD,EAAE,OAAO,CAAK,SAA8B,SAAS,IAAI;AAEzD,SAAO,gBAAAA,MAAC,aAAU,OAAO,gBAAgB;AAC1C;AAEA,SAAS,WAAW;AAAA,EACnB;AAAA,EACA;AACD,GAGG;AACF,QAAM,EAAE,KAAK,IAAIG,YAAW,gBAAgB;AAE5C,SACC,gBAAAF,OAAC,aACA;AAAA,oBAAAD,MAAC,QAAG,+BAAc;AAAA,IAClB,gBAAAA,MAAC,QAAK,MAAM,EAAE,WAAW,GAAG;AAAA,IAC5B,gBAAAA,MAAC,cAAW,YAAwB,QAAgB;AAAA,KACrD;AAEF;AAEA,SAAS,gBAAgB;AAAA,EACxB;AACD,GAEG;AACF,QAAM,EAAE,KAAK,IAAIG,YAAW,gBAAgB;AAE5C,QAAM,OAAO,OAAO,KAAK,SAAS;AAElC,QAAM,OAAO;AAAA,IACZ,MAAM,KAAK,UAAU,WAAW,MAAM,CAAC;AAAA,EACxC;AAEA,SACC,gBAAAF,OAAC,aACA;AAAA,oBAAAD,MAAC,QAAG,gCAAkB;AAAA,IACrB,KAAK,SACL,gBAAAA,MAAC,OAAE,kGAGH,IACC,gBAAAA,MAAC,OAAE,wHAGJ;AAAA,IAED,gBAAAA,MAAC,QAAK,MAAY;AAAA,KACnB;AAEF;AAEA,IAAM,iBAAiB;AACvB,IAAM,wBAAwB;AAE9B,SAAS,aAAa;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACF,QAAM,EAAE,MAAM,KAAK,IAAIG,YAAW,gBAAgB;AAElD,QAAM,OAAO;AAAA,IACZ,YAAY,uBAAuB,UAAU;AAAA;AAAA;AAAA,qBAG1B,UAAU;AAAA;AAAA;AAAA,sBAGT,KAAK,UAAU,WAAW,MAAM,CAAC,CAAC;AAAA;AAAA,KAEnD,KAAK,KAAK;AAAA,qCACsB,KAAK,UAAU,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA,EAI9D;AAEA,SACC,gBAAAF,OAAC,aACA;AAAA,oBAAAD,MAAC,QAAG,8CAAgC;AAAA,IACpC,gBAAAC,OAAC,OAAE;AAAA;AAAA,MACoE;AAAA,MACtE,gBAAAD;AAAA,QAAC;AAAA;AAAA,UACA,cAAY,GAAG,qBAAqB;AAAA,UACpC,MAAK;AAAA,UAEJ;AAAA;AAAA,MACF;AAAA,MAAQ;AAAA,MAAI;AAAA,OAGb;AAAA,IACA,gBAAAA,MAAC,QAAK,MAAY;AAAA,IAElB,gBAAAA,MAAC,OAAE,OAAO,EAAE,WAAW,QAAQ,GAC9B,0BAAAC;AAAA,MAAC;AAAA;AAAA,QACA,MAAM,mCAAmC;AAAA,QACzC,cAAY,GAAG,cAAc;AAAA,QAE7B;AAAA,0BAAAD,MAAC,UAAK,eAAW,MAAC,uBAAE;AAAA,UAAO;AAAA,UAAE;AAAA;AAAA;AAAA,IAC9B,GACD;AAAA,KACD;AAEF;AAEA,IAAM,iBAAiB;AAEvB,SAAS,SAAS;AAAA,EACjB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACF,QAAM,EAAE,MAAM,KAAK,IAAIG,YAAW,gBAAgB;AAElD,QAAM,OAAO;AAAA,IACZ,aAAa,CAAC,UAAU;AAAA,IACxB;AAAA,EACD;AAEA,QAAM,OAAO;AAAA,IACZ,MAAM,SAAS,cAAc;AAAA;AAAA;AAAA,iBAGd,KAAK,UAAU,IAAI,EAAE,QAAQ,MAAM,OAAO,CAAC;AAAA;AAAA,IAE1D,YAAY,gCAAgC,cAAc;AAAA;AAAA;AAAA,2BAGjC,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvD;AAEA,SACC,gBAAAF,OAAC,aACA;AAAA,oBAAAD,MAAC,QAAG,qCAAuB;AAAA,IAC3B,gBAAAA,MAAC,OAAE,iHAGH;AAAA,IACA,gBAAAA,MAAC,QAAK,MAAY;AAAA,IACjB,uBACA,gBAAAA,MAAC,OAAE,OAAO,EAAE,WAAW,QAAQ,GAC9B,0BAAAC;AAAA,MAAC;AAAA;AAAA,QACA,IAAI;AAAA,QACJ,cAAY,GAAG,cAAc;AAAA,QAE7B;AAAA,0BAAAD,MAAC,UAAK,eAAW,MAAC,sCAAK;AAAA,UAAO;AAAA,UAAE;AAAA;AAAA;AAAA,IACjC,GACD;AAAA,KAEF;AAEF;AAEA,SAAS,YAAY,EAAE,YAAY,GAA8B;AAChE,SACC,gBAAAC,OAAC,aACA;AAAA,oBAAAD,MAAC,QAAG,mCAAkB;AAAA,IACrB,aAAa,SACb,gBAAAC,OAAAF,YAAA,EACC;AAAA,sBAAAC,MAAC,OAAE,4KAGH;AAAA,MAEA,gBAAAA,MAAC,MACC,sBAAY,IAAI,CAAC,eACjB,gBAAAA,MAAC,MACA,0BAAAA,MAAC,uBAAoB,YAAwB,KADrC,UAET,CACA,GACF;AAAA,OACD,IACC,gBAAAA,MAAC,OAAE,wDAAkC;AAAA,KACxC;AAEF;AAEA,IAAM,0BAA0B,CAAC,MAAgB,eAChD,QACA,kBAAkB,QAClB,KAAK,aAAa;AAAA,EACjB,CAAC,EAAE,kBAAkB,MAAM,kBAAkB,eAAe;AAC7D;AAED,SAAS,eAAe;AAAA,EACvB;AAAA,EACA;AAAA,EACA,mBAAmB;AACpB,GAIG;AACF,QAAM,uBAAuB,MAAM;AAAA,IAClC,OAAO,QAAQ,eAAe,aAAa,IAAI,UAAU,KAAK,CAAC;AAAA,EAChE,EAAE;AAAA,IACD,CAAC,aACA,aAAa,iBACb,YAAY,OAAO,QAAQ,eAC3B,CAAC,OAAO,QAAQ,YAAY,QAAQ,EAAE,WACtC,CAAC;AAAA,MACA,OAAO,QAAQ,YAAY,QAAQ;AAAA,MACnC;AAAA,IACD;AAAA,EACF;AAEA,SACC,gBAAAC,OAAC,aACA;AAAA,oBAAAD,MAAC,QAAG,sDAAqC;AAAA,IAExC,qBAAqB,SACrB,gBAAAC,OAAAF,YAAA,EACC;AAAA,sBAAAE,OAAC,OAAE;AAAA;AAAA,QAGD,oBACA,gBAAAA,OAAAF,YAAA,EACE;AAAA;AAAA,UAAI;AAAA,WAIN;AAAA,SAEF;AAAA,MACA,gBAAAC,MAAC,MACC,+BAAqB,IAAI,CAACK,gBAC1B,gBAAAL,MAAC,MACA,0BAAAA,MAAC,uBAAoB,YAAYK,aAAY,KADrCA,WAET,CACA,GACF;AAAA,OACD,IACC,gBAAAL,MAAC,OAAE,0DAAoC;AAAA,KAC1C;AAEF;AAEA,SAAS,OAAO;AAAA,EACf;AAAA,EACA;AAAA,EACA;AACD,GAIG;AACF,QAAM,UAAU,MAAM;AAAA,IACrB,OAAO,QAAQ,eAAe,aAAa,IAAI,UAAU,KAAK,CAAC;AAAA,EAChE,EAAE;AAAA,IACD,CAAC,aACA,aAAa,iBACb,YAAY,OAAO,QAAQ,eAC3B,CAAC,OAAO,QAAQ,YAAY,QAAQ,EAAE,WACtC,wBAAwB,OAAO,QAAQ,YAAY,QAAQ,GAAG,UAAU;AAAA,EAC1E;AAEA,SACC,gBAAAC,OAAAF,YAAA,EACC;AAAA,oBAAAE,OAAC,aACA;AAAA,sBAAAD,MAAC,QAAG,gDAA0B;AAAA,MAC7B,aAAa,SACb,gBAAAC,OAAAF,YAAA,EACC;AAAA,wBAAAC,MAAC,OAAE,gHAGH;AAAA,QACA,gBAAAA,MAAC,MACC,uBAAa,IAAI,CAAC,gBAClB,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACA,OAAO,EAAE,cAAc,SAAS;AAAA,YAGhC,0BAAAA,MAAC,eAAY,MAAM,aAAa;AAAA;AAAA,UAF3B,YAAY,kBAAkB;AAAA,QAGpC,CACA,GACF;AAAA,SACD,IACC,gBAAAA,MAAC,OAAE,8DAA0C;AAAA,OAChD;AAAA,IAEA,gBAAAC,OAAC,aACA;AAAA,sBAAAD,MAAC,QAAG,mEAAkD;AAAA,MACrD,QAAQ,SACR,gBAAAC,OAAAF,YAAA,EACC;AAAA,wBAAAC,MAAC,OAAE,2FAGH;AAAA,QACA,gBAAAA,MAAC,MACC,kBAAQ,IAAI,CAACK,gBACb,gBAAAL,MAAC,MACA,0BAAAA,MAAC,uBAAoB,YAAYK,aAAY,KADrCA,WAET,CACA,GACF;AAAA,SACD,IACC,gBAAAL,MAAC,OAAE,4EAAiD;AAAA,OACvD;AAAA,KACD;AAEF;AAEA,IAAM,gBAAgBE,SAAO;;;AErc7B,SAAS,SAAAI,cAAa;;;ACAtB,SAAS,cAAAC,mBAAkB;AAczB,SACC,OAAAC,OADD,QAAAC,cAAA;AANa,SAAR,KAAsB,EAAE,OAAO,YAAY,GAAa;AAC9D,QAAM,EAAE,KAAK,IAAIC,YAAW,gBAAgB;AAC5C,MAAI,CAAC,MAAM;AACV,WAAO;AAAA,EACR;AACA,SACC,gBAAAD,OAAC,QACA;AAAA,oBAAAD,MAAC,WAAO,iBAAM;AAAA,IACd,gBAAAA,MAAC,UAAK,UAAS,WAAU,SAAQ,WAAU;AAAA,IAC3C,gBAAAA,MAAC,UAAK,UAAS,YAAW,SAAS,OAAO;AAAA,IACzC,eAAe,gBAAAA,MAAC,UAAK,UAAS,kBAAiB,SAAS,aAAa;AAAA,IACrE,eAAe,gBAAAA,MAAC,UAAK,MAAK,eAAc,SAAS,aAAa;AAAA,KAChE;AAEF;;;ADRG,gBAAAG,OASG,QAAAC,cATH;AATY,SAAR,WAA4B,EAAE,WAAW,GAA2B;AAC1E,QAAM,SAAS,UAAU;AACzB,QAAM;AAAA,IACL;AAAA,IACA,SAAS,EAAE,aAAa,UAAU,YAAO;AAAA,EAC1C,IAAI,OAAO,QAAQ,YAAY,UAAU;AACzC,QAAM,eAAe,cAAS,QAAQ,MAAM,cAAS;AACrD,SACC,gBAAAA,OAAC,YACA;AAAA,oBAAAD,MAAC,QAAK,OAAO,cAAc,aAAa,eAAe,UAAU;AAAA,IACjE,gBAAAC,OAAC,SACA;AAAA,sBAAAD,MAAC,UAAK,IAAG,6BAET;AAAA,MACCE,OACC,YAAY,UAAU,EACtB,QAAQ,EACR,IAAI,CAAC,qBACL,gBAAAD,OAAC,UACA;AAAA,wBAAAD,MAAC,uBAAoB,YAAY,kBAAkB,aAAW,MAAC;AAAA,QAC/D,gBAAAA,MAAC,UAAK,eAAW,MAAE,sBAAM;AAAA,WAFf,gBAGX,CACA;AAAA,OACH;AAAA,IACA,gBAAAA,MAAC,QACA,0BAAAA,MAAC,uBAAoB,YAAwB,aAAW,MAAC,GAC1D;AAAA,KACD;AAEF;;;AElCA,SAAS,SAAAG,cAAa;AACtB;AAAA,EACC;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAAC;AAAA,OACM;AACP,OAAO,cAAc;AACrB,SAAS,UAAAC,gBAAc;AAgEpB,gBAAAC,OAgBA,QAAAC,cAhBA;AA3DH,IAAM,cAAc,KAAK,MAAM,OAAO,2BAAe,CAAC;AAS/C,IAAM,WAAW,CAAC;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,MAAa;AACZ,QAAM,aAAa,UAAU;AAC7B,QAAM,cAAc,WAAW,eAAe;AAC9C,QAAM,mBAAmB,OAAO,KAAK,WAAW;AAEhD,QAAM,CAAC,SAAS,UAAU,IAAIC,UAAS,KAAK;AAE5C,QAAM,YAAY,CAAC,OAClB,OAAO,YAAY;AAAA,IAClB,CAAC,IAAI,IAAI;AAAA,IACT,GAAGC,OAAM,YAAY,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,CAAC;AAAA,EACxD,CAAwB;AAEzB,QAAM,CAAC,OAAO,QAAQ,IAAID,UAAS,UAAU,UAAU,CAAC;AAExD,YAAU,MAAM;AACf,aAAS,CAAC,UAAU,EAAE,GAAG,MAAM,GAAG,UAAU,UAAU,EAAE,EAAE;AAAA,EAC3D,GAAG,CAAC,UAAU,CAAC;AAEf,QAAM,iBAAiB,YAAY,CAAC,mBAA2B;AAC9D;AAAA,MAAS,CAAC,cACT,CAAC,UAAU,cAAc,IACxB;AAAA,QACC,GAAG;AAAA,QACH,CAAC,cAAc,GAAG,CAAC,UAAU,cAAc;AAAA,MAC5C,IACC,OAAO;AAAA,QACP,OAAO,QAAQ,SAAS,EAAE;AAAA,UAAI,CAAC,CAAC,KAAK,GAAG,MACvC,IAAI,WAAW,cAAc,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,GAAG;AAAA,QAC1D;AAAA,MACD;AAAA,IACF;AAAA,EACD,GAAG,CAAC,CAAC;AAEL,QAAM,6BACL,OAAO,WAAW,cAAc,OAC9B,yBACA,OAAO,SAAS,eAAe,qBAAqB,KACrD,OAAO,SAAS,eAAe,2BAA2B;AAG5D,QAAM,SAAS,OAAwB,IAAI;AAE3C,QAAM,OACL,gBAAAD,OAAC,aAAU,OAAO,SACjB;AAAA,oBAAAD;AAAA,MAAC;AAAA;AAAA,QACA,OAAO;AAAA,QACP,SAAS,MAAM;AACd,qBAAW,CAAC,SAAS,CAAC,IAAI;AAAA,QAC3B;AAAA;AAAA,IACD;AAAA,IAGC,8BACA,SAAS;AAAA,MACR,gBAAAA,MAAC,iBAAc,SAAS,MAAM,WAAW,IAAI,GAAG,kCAEhD;AAAA,MACA;AAAA,IACD;AAAA,IAED,gBAAAC,OAAC,OAAI,OAAO,SAAS,KAAK,QACxB;AAAA,kBACA,gBAAAD,MAAC,YAAS,UAAU,gBAAAA,MAAC,OAAE,2BAAa,GACnC,0BAAAA,MAAC,eAAY,GACd,IACC;AAAA,MACF,gBAAAA,MAAC,QACC,2BACC,KAAK,CAAC,GAAG,MAAM,EAAE,cAAc,CAAC,CAAC,EACjC,IAAI,CAAC,mBAAmB;AACxB,cAAM,mBAAmBG,OAAM,WAAW,cAAc;AAExD,YACC,eAAe,MAAM,KAAK,EAAE,SAAS,KACrC,CAAC,MAAM,gBAAgB,GACtB;AACD,iBAAO;AAAA,QACR;AAEA,cAAM,OAAO,kBAAkB,SAAS,MAAM,cAAc;AAE5D,eACC,gBAAAH;AAAA,UAAC;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,QAAQ,eAAe;AAAA,YACvB,iBAAiB;AAAA,YACjB;AAAA;AAAA,UALK;AAAA,QAMN;AAAA,MAEF,CAAC,GACH;AAAA,OACD;AAAA,KACD;AAGD,QAAM,eACL,OAAO,WAAW,eAClB,OAAO,WAAW,eAAe,iBAAiB,EAAE,GAAG,EAAE;AAE1D,QAAM,0BACL,OAAO,WAAW,eAAe,qBAChC,OAAO,SAAS,eAAe,kBAAkB,IAChD;AAEH,SAAO,gBAAgB,0BACrB,SAAS,aAAa,MAAM,uBAAuB,IAClD;AACJ;AASA,IAAM,QAAQ,CAAC;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,MAAkB;AACjB,QAAM,aAAa,UAAU;AAE7B,QAAM,cAAc,WAAW,eAAe;AAC9C,QAAM,gBAAgB,OAAO,KAAK,WAAW,EAAE;AAAA,IAC9C,CAAC,KAAK,YAEJ,QAAQ,WAAW,iBAAiB,KAAK,KACzC,QAAQ,MAAM,KAAK,EAAE,WAAW,eAAe,MAAM,KAAK,EAAE,SAAS,IAErE,MAAM,IACL;AAAA,IACH;AAAA,EACD;AAEA,QAAM,WAAW,OAAsB,IAAI;AAC3C,YAAU,MAAM;AACf,QAAI,OAAO,WAAW,SAAS,SAAS,WAAW;AAClD,aAAO,QAAQ,YAAY,SAAS,SAAS;AAAA,IAC9C;AAAA,EACD,GAAG,CAAC,MAAM,CAAC;AACX,SACC,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEA,KAAK,SAAS,WAAW;AAAA,MACzB,OAAO;AAAA,QACN,cAAc,eAAe,MAAM,KAAK,EAAE,SAAS,KAAK;AAAA,MACzD;AAAA,MACA,YACE,gBAAgB,IAAI,cAAc,OAAO,SAAS,YAAY;AAAA,MAGhE,0BAAAC,OAAC,UAAK,WAAU,WACd;AAAA,wBAAgB,KAChB,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACA,cAAY,OAAO,yBAAyB;AAAA,YAC5C,iBAAe;AAAA,YACf,SAAS,MAAM,gBAAgB,cAAc;AAAA,YAE7C,0BAAAA,MAAC,eAAY,OAAO,MAAM;AAAA;AAAA,QAC3B;AAAA,QAED,gBAAAA,MAAC,uBAAoB,YAAY,gBAAgB,aAAW,MAAC;AAAA,SAC9D;AAAA;AAAA,IApBK;AAAA,EAqBN;AAEF;AAEA,IAAM,YAAY,KAAK,KAAK;AAErB,IAAM,mBAAmB;AAAA,EAC/B,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACL;AAEA,IAAM,YAAYI,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMH,iBAAiB,EAAE;AAAA;AAAA;AAAA;AAAA;AAMzC,IAAM,aAAaA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAUX,CAAC,EAAE,MAAM,MAAO,QAAQ,YAAY,QAAS;AAAA,YAChD,CAAC,EAAE,MAAM,MAAO,QAAQ,MAAM,GAAI;AAAA;AAAA,sBAExB,iBAAiB,EAAE;AAAA;AAAA;AAAA;AAKzC,IAAM,gBAAgBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAaP,iBAAiB,EAAE;AAAA;AAAA;AAAA;AAKzC,IAAM,MAAMA,SAAO;AAAA,sBACG,iBAAiB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQnB,iBAAiB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAarC,CAAC,EAAE,MAAM,MAAO,QAAQ,KAAK,+BAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CjE,IAAM,iBAAiBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAa9B,IAAM,cAAcA,SAAO,KAAK;AAAA;AAAA;AAAA;AAAA,qBAIX,CAAC,EAAE,MAAM,MAAO,QAAQ,SAAS,QAAS;AAAA;;;ALjR1D,SA2FG,YAAAC,YA3FH,OAAAC,OA2FG,QAAAC,cA3FH;AA7BU,SAAR,SAA0B;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,iBAAiB;AAClB,GAAkB;AACjB,QAAM,kBACL,OAAO,WAAW,eAClB,IAAI,gBAAgB,OAAO,SAAS,MAAM,EAAE,IAAI,iBAAiB;AAElE,QAAM,gBAAgBC,QAAO,SAAS;AACtC,EAAAC,WAAU,MAAM;AACf,QAAI,cAAc,YAAY,WAAW;AACxC,oBAAc,UAAU;AAAA,IACzB;AAAA,EACD,GAAG,CAAC,SAAS,CAAC;AAEd,SACC,gBAAAH,MAAC,cAAc,UAAd,EAAuB,OAAO,QAC9B,0BAAAA,MAAC,gBAAgB,UAAhB,EAAyB,OAAO,mBAChC,0BAAAA,MAAC,iBAAiB,UAAjB,EAA0B,OAAO,iBAAiB,SAAS,GAC3D,0BAAAA;AAAA,IAAC;AAAA;AAAA,MACA,YAAYI,OAAM,eAAe,QAAQ;AAAA,MACzC,aACC,kBAAkB,SAAS,eAAe,IAAI;AAAA,MAE/C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,EACD,GACD,GACD,GACD;AAEF;AAiBA,SAAS,KAAK;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAAc;AACb,QAAM,aAAa,UAAU;AAC7B,QAAM,EAAE,YAAY,KAAK,IAAIC,YAAW,gBAAgB;AAExD,QAAM,eAAe,eAAe,WAAW,WAAW,WAAW;AACrE,QAAM,SAAS,eAAe,WAAW,WAAW,WAAW,IAAI;AAEnE,MAAI,EAAE,cAAc,OAAO,QAAQ,cAAc;AAChD,WAAO,gBAAAL,MAAC,OAAE,yDAAwC;AAAA,EACnD;AAEA,SAAO,WAAW;AAClB,SAAO,MAAM,0BAA0B,CAAC;AACxC,QAAM,OAAO,OAAO;AAAA,IACnB,OAAO,QAAQ,YAAY,UAAU;AAAA,EACtC;AAEA,QAAM,EAAE,aAAa,SAAS,IAAI,KAAK;AACvC,QAAM,EAAE,QAAQ,gBAAgB,wBAAwB,IAAI,KAAK;AAEjE,QAAM,YAAY,yBAAyB,QAAQ,IAAI;AAEvD,QAAM,aAAa,aAAa;AAAA,IAC/B,YAAY,KAAK,QAAQ;AAAA,IACzB,YAAY,KAAK;AAAA,EAClB,CAAC;AACD,SACC,gBAAAA,MAAC,cAAc,UAAd,EAAuB,OAAO,QAC9B,0BAAAC,OAACK,YAAA,EAAU,IAAG,2BACb;AAAA,oBAAAN;AAAA,MAAC;AAAA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,IACD;AAAA,IACA,gBAAAA,MAAC,WACA,0BAAAC,OAAC,kBAAkB,UAAlB,EAA2B,OAAO,YAClC;AAAA,sBAAAD,MAAC,cAAW,YAAwB;AAAA,MACpC,gBAAAA,MAAC,aACA,0BAAAA,MAAC,QAAM,yBAAe,YAAY,IAAG,GACtC;AAAA,MAEA,gBAAAC,OAAC,OAAE,OAAO,EAAE,UAAU,WAAW,YAAY,OAAO,GAAG;AAAA;AAAA,QAC5CM,aAAY,MAAM,EAAE,SAAS,CAAC;AAAA,QACvC,KAAK,cAAc,UAAa,KAAK,QACrC,gBAAAN,OAAAF,YAAA,EACC;AAAA,0BAAAC,MAAC,QAAG;AAAA,UAAE;AAAA,UACGQ,eAAc,KAAK,IAAI;AAAA,WACjC;AAAA,SAEF;AAAA,MAEC,2BAA2B,kBAC3B,gBAAAR,MAAAD,YAAA,EACC,0BAAAE,OAAC,gBAAW;AAAA;AAAA,QACK,gBAAAD,MAAC,YAAO,4BAAc;AAAA,QAAS;AAAA,QAChB;AAAA,QAC/B,gBAAAA,MAAC,eAAY,MAAM,gBAAgB;AAAA,SACpC,GACD;AAAA,MAEA,gBACA,gBAAAC;AAAA,QAAC;AAAA;AAAA,UACA,OAAO;AAAA,YACN,QAAQ;AAAA,YACR,SAAS;AAAA,YACT,SAAS;AAAA,YACT,gBAAgB;AAAA,YAChB,WAAW;AAAA,YACX,YAAY;AAAA,YACZ,UAAU;AAAA,YACV,YAAY;AAAA,YACZ,cAAc;AAAA,UACf;AAAA,UAEA;AAAA,4BAAAA,OAAC,OAAE;AAAA;AAAA,cACqC;AAAA,cACvC,gBAAAD,MAAC,YAAO,sBAAQ;AAAA,cAAS;AAAA,cAAc;AAAA,cACvC,gBAAAA,MAAC,YAAO,2BAAU;AAAA,cAAS;AAAA,eAC5B;AAAA,YACA,gBAAAA,MAAC,SAAI,OAAO,EAAE,MAAM,EAAE,GAAG;AAAA,YACzB,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACA,OAAO;AAAA,kBACN,WAAW;AAAA,kBACX,WAAW;AAAA,gBACZ;AAAA,gBAEA,0BAAAA;AAAA,kBAAC;AAAA;AAAA,oBACA;AAAA,oBACA,cAAc;AAAA,oBACd;AAAA;AAAA,gBAED;AAAA;AAAA,YACD;AAAA;AAAA;AAAA,MACD;AAAA,MAED,gBAAAA,MAAC,QAAG,4DAAwC;AAAA,MAC5C,gBAAAA,MAAC,SAAI,IAAG,kCACP,0BAAAA,MAAC,eAAY,MAAM,QAAQ,GAC5B;AAAA,MAEC,KAAK,QAAQ,QACb,gBAAAC,OAAAF,YAAA,EACC;AAAA,wBAAAC,MAAC,QAAG,kBAAI;AAAA,QACR,gBAAAA,MAAC,SACA,0BAAAA,MAAC,QAAM,eAAK,QAAQ,MAAK,GAC1B;AAAA,SACD;AAAA,MAGA,cACA,gBAAAC,OAAAF,YAAA,EACC;AAAA,wBAAAC,MAAC,QAAG,8BAAU;AAAA,QACb;AAAA,SACF;AAAA,MAED,gBAAAA,MAAC,QAAG;AAAA,MAEH,kBACA,gBAAAC,OAAAF,YAAA,EACC;AAAA,wBAAAC,MAAC,QAAG,qCAAuB;AAAA,QAC3B,gBAAAA,MAAC,QAAK,mLAIN;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACA;AAAA,SACF;AAAA,OAEF,GACD;AAAA,KACD,GACD;AAEF;AAEA,IAAMM,aAAYG,SAAO;AAAA;AAAA;AAAA;AAAA,sBAIH,iBAAiB,EAAE;AAAA;AAAA;AAAA;AAKzC,IAAM,UAAUA,SAAO;AAAA;AAAA;AAAA,sBAGD,iBAAiB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQzC,SAAS,yBACR,QACA,MAC+C;AAC/C,QAAM,YAAY,CAAC,GAAI,KAAK,oBAAgC,KAAK,UAAU,EACzE,IAAI,CAAC,SAAS;AACd,UAAM,SAAS,OAAO,QAAQ,YAAY,GAAG,IAAI,eAAe,GAAG,QACjE;AACF,WAAO,CAAC,MAAM,MAAM;AAAA,EACrB,CAAC,EACA;AAAA,IACA,CAAC,CAAC,EAAE,MAAM,MACT,UACA,EAAE,OAAO,aAAa,cAAc,OAAO,cAAc;AAAA,EAC3D,EACC;AAAA,IACA,CAAC,KAAK,CAAC,MAAM,MAAM,OAAO;AAAA,MACzB,CAAC,IAAI,GACJ,OAAO,WAAW,YAAY,UAAU,aAAa,SACpD,OAAO,UACN;AAAA,MACH,GAAG;AAAA,IACJ;AAAA,IACA,CAAC;AAAA,EACF;AAED,SAAO;AACR;;;A7B9SO,SAAS,wBAAwB,EAAE,QAAQ,kBAAkB,GAAG;AACtE,QAAM,cAAc,OAAO,QAAQ;AACnC,SAAO,OAAO;AAAA,IACb,OAAO,KAAK,WAAW,EACrB;AAAA,MACA,CAAC,eACA,CAAC,WAAW,MAAM,uCAAuC;AAAA,IAC3D,EACC,IAAI,CAAC,eAAe;AAAA,MACpB,oBAAoB,MAAMC,OAAM,eAAe,UAAU;AAAA,MACzD;AAAA,IACD,CAAC;AAAA,EACH;AACD;","names":["utils","jsx","jsxs","styled","styled","jsx","jsx","jsxs","styled","Fragment","jsx","jsxs","styled","useContext","useState","css","styled","styled","Fragment","jsx","jsxs","styled","Fragment","jsx","jsxs","useContext","useState","styled","css","jsx","formatValue","jsx","Fragment","styled","Fragment","jsx","jsxs","styled","jsx","jsx","jsx","jsx","jsxs","Fragment","jsx","jsxs","styled","Fragment","jsx","jsxs","styled","useState","Fragment","jsx","jsxs","useState","Fragment","jsx","jsxs","styled","jsx","styled","jsx","jsxs","useContext","jsx","jsxs","useContext","jsx","jsxs","styled","jsx","styled","jsx","formatValue","Fragment","jsx","jsxs","formatValue","useState","styled","Fragment","jsx","jsxs","useState","StyledExplanation","styled","jsx","node","formatValue","serializeUnit","utils","useContext","useEffect","useRef","styled","utils","useContext","styled","formatValue","jsx","jsxs","dottedName","Fragment","jsx","jsxs","styled","useContext","utils","dottedName","utils","useContext","jsx","jsxs","useContext","jsx","jsxs","utils","utils","useState","styled","jsx","jsxs","useState","utils","styled","Fragment","jsx","jsxs","useRef","useEffect","utils","useContext","Container","formatValue","serializeUnit","styled","utils"]}