(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([[3],{

/***/ "./source/ATInternetTracking/smarttag.js":
/*!***********************************************!*\
  !*** ./source/ATInternetTracking/smarttag.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n;\n(function () {\n  var dfltPluginCfg = {};\n  var dfltGlobalCfg = {\n    site: 617189,\n    log: '',\n    logSSL: '',\n    domain: 'xiti.com',\n    collectDomain: 'logc412.xiti.com',\n    collectDomainSSL: 'logs1412.xiti.com',\n    userIdOrigin: 'server',\n    pixelPath: '/hit.xiti',\n    disableCookie: false,\n    disableStorage: false,\n    cookieSecure: true,\n    cookieDomain: '',\n    preview: false,\n    plgs: ['Campaigns', 'Clicks', 'ContextVariables', 'Page', 'ClientSideUserId', 'Privacy'],\n    lazyLoadingPath: '',\n    documentLevel: 'document',\n    redirect: false,\n    activateCallbacks: true,\n    medium: '',\n    ignoreEmptyChapterValue: false,\n    base64Storage: false,\n    sendHitWhenOptOut: true,\n    forceHttp: false,\n    requestMethod: 'GET',\n    maxHitSize: 2000,\n    urlPropertyAuto: true,\n    urlPropertyQueryString: false\n  };\n\n  (function (a) {\n    a.ATInternet = a.ATInternet || {};\n    a.ATInternet.Tracker = a.ATInternet.Tracker || {};\n    a.ATInternet.Tracker.Plugins = a.ATInternet.Tracker.Plugins || {};\n  })(window);\n\n  var Utils = function Utils() {\n    function a(h) {\n      var b = typeof h;\n      if ('object' !== b || null === h) return 'string' === b && (h = '\"' + h + '\"'), String(h);\n      var e,\n          f,\n          d = [],\n          c = h.constructor === Array;\n\n      for (e in h) {\n        h.hasOwnProperty(e) && (f = h[e], b = typeof f, 'function' !== b && 'undefined' !== b && ('string' === b ? f = '\"' + f.replace(/[^\\\\]\"/g, '\\\\\"') + '\"' : 'object' === b && null !== f && (f = a(f)), d.push((c ? '' : '\"' + e + '\":') + String(f))));\n      }\n\n      return (c ? '[' : '{') + String(d) + (c ? ']' : '}');\n    }\n\n    function g(a) {\n      return null === a ? '' : (a + '').replace(d, '');\n    }\n\n    function k(a) {\n      var l,\n          e = null;\n      return (a = g(a + '')) && !g(a.replace(b, function (a, h, b, d) {\n        l && h && (e = 0);\n        if (0 === e) return a;\n        l = b || h;\n        e += !d - !b;\n        return '';\n      })) ? Function('return ' + a)() : null;\n    }\n\n    var c = this,\n        b = /(,)|(\\[|{)|(}|])|\"(?:[^\"\\\\\\r\\n]|\\\\[\"\\\\\\/bfnrt]|\\\\u[\\da-fA-F]{4})*\"\\s*:?|true|false|null|-?(?!0\\d)\\d+(?:\\.\\d+|)(?:[eE][+-]?\\d+|)/g,\n        d = RegExp('^[\\\\x20\\\\t\\\\r\\\\n\\\\f]+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)[\\\\x20\\\\t\\\\r\\\\n\\\\f]+$', 'g');\n\n    c.isLocalStorageAvailable = function () {\n      try {\n        var a = localStorage;\n        a.setItem('__storage_test__', '__storage_test__');\n        a.removeItem('__storage_test__');\n        return !0;\n      } catch (b) {\n        return !1;\n      }\n    };\n\n    c.isBeaconMethodAvailable = function () {\n      return window.navigator && 'function' === typeof window.navigator.sendBeacon;\n    };\n\n    c.Base64 = {\n      _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n      encode: function encode(a) {\n        var b = '',\n            e,\n            f,\n            d,\n            r,\n            q,\n            m,\n            p = 0;\n\n        for (a = c.Base64._utf8_encode(a); p < a.length;) {\n          e = a.charCodeAt(p++), f = a.charCodeAt(p++), d = a.charCodeAt(p++), r = e >> 2, e = (e & 3) << 4 | f >> 4, q = (f & 15) << 2 | d >> 6, m = d & 63, isNaN(f) ? q = m = 64 : isNaN(d) && (m = 64), b = b + this._keyStr.charAt(r) + this._keyStr.charAt(e) + this._keyStr.charAt(q) + this._keyStr.charAt(m);\n        }\n\n        return b;\n      },\n      decode: function decode(a) {\n        var b = '',\n            e,\n            f,\n            d,\n            r,\n            q,\n            m = 0;\n\n        for (a = a.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); m < a.length;) {\n          e = this._keyStr.indexOf(a.charAt(m++)), f = this._keyStr.indexOf(a.charAt(m++)), r = this._keyStr.indexOf(a.charAt(m++)), q = this._keyStr.indexOf(a.charAt(m++)), e = e << 2 | f >> 4, f = (f & 15) << 4 | r >> 2, d = (r & 3) << 6 | q, b += String.fromCharCode(e), 64 != r && (b += String.fromCharCode(f)), 64 != q && (b += String.fromCharCode(d));\n        }\n\n        return b = c.Base64._utf8_decode(b);\n      },\n      _utf8_encode: function _utf8_encode(a) {\n        a = a.replace(/\\r\\n/g, '\\n');\n\n        for (var b = '', e = 0; e < a.length; e++) {\n          var f = a.charCodeAt(e);\n          128 > f ? b += String.fromCharCode(f) : (127 < f && 2048 > f ? b += String.fromCharCode(f >> 6 | 192) : (b += String.fromCharCode(f >> 12 | 224), b += String.fromCharCode(f >> 6 & 63 | 128)), b += String.fromCharCode(f & 63 | 128));\n        }\n\n        return b;\n      },\n      _utf8_decode: function _utf8_decode(a) {\n        for (var b = '', e = 0, f, d, c; e < a.length;) {\n          f = a.charCodeAt(e), 128 > f ? (b += String.fromCharCode(f), e++) : 191 < f && 224 > f ? (d = a.charCodeAt(e + 1), b += String.fromCharCode((f & 31) << 6 | d & 63), e += 2) : (d = a.charCodeAt(e + 1), c = a.charCodeAt(e + 2), b += String.fromCharCode((f & 15) << 12 | (d & 63) << 6 | c & 63), e += 3);\n        }\n\n        return b;\n      }\n    };\n\n    c.loadScript = function (a, b) {\n      var e;\n\n      b = b || function () {};\n\n      e = document.createElement('script');\n      e.type = 'text/javascript';\n      e.src = a.url;\n      e.async = !1;\n      e.defer = !1;\n\n      e.onload = e.onreadystatechange = function (a) {\n        a = a || window.event;\n        if ('load' === a.type || /loaded|complete/.test(e.readyState) && (!document.documentMode || 9 > document.documentMode)) e.onload = e.onreadystatechange = e.onerror = null, b(null, a);\n      };\n\n      e.onerror = function (a) {\n        e.onload = e.onreadystatechange = e.onerror = null;\n        b({\n          msg: 'script not loaded',\n          event: a\n        });\n      };\n\n      var f = document.head || document.getElementsByTagName('head')[0];\n      f.insertBefore(e, f.lastChild);\n    };\n\n    c.cloneSimpleObject = function (a, b) {\n      if ('object' !== typeof a || null === a || a instanceof Date) return a;\n      var e = new a.constructor(),\n          f;\n\n      for (f in a) {\n        a.hasOwnProperty(f) && (void 0 === f || b && void 0 === a[f] || (e[f] = c.cloneSimpleObject(a[f])));\n      }\n\n      return e;\n    };\n\n    c.isEmptyObject = function (a) {\n      for (var b in a) {\n        if (a.hasOwnProperty(b)) return !1;\n      }\n\n      return !0;\n    };\n\n    c.isObject = function (a) {\n      return null !== a && 'object' === typeof a && !(a instanceof Array);\n    };\n\n    c.ATVALUE = '_ATVALUE';\n    c.ATPREFIX = '_ATPREFIX';\n\n    c.object2Flatten = function (a, b, e, f, d) {\n      var r = {},\n          q = '',\n          m = '',\n          p = [],\n          g = '',\n          s = 0,\n          k;\n\n      for (k in a) {\n        if (a.hasOwnProperty(k)) if (r = c.splitProtocolAndKey(k, d), q = r.prefix || f || '', m = (b ? b + '_' : '') + r.key, c.isObject(a[k])) c.object2Flatten(a[k], m, e, q, d);else {\n          p = m.split('_');\n          g = '';\n\n          for (s = 0; s < p.length; s++) {\n            r = c.splitProtocolAndKey(p[s], d), q = r.prefix || q, g += r.key + (s < p.length - 1 ? '_' : '');\n          }\n\n          m = g || m;\n          e[m] = e[m] || {};\n          e[m][c.ATVALUE] = a[k];\n          e[m][c.ATPREFIX] = q;\n        }\n      }\n    };\n\n    c.flatten2Object = function (a, b, e) {\n      b = b.split('_');\n      var f, d;\n\n      for (d = 0; d < b.length - 1; d++) {\n        f = b[d], a[f] || (a[f] = {}), a = a[f];\n      }\n\n      if (a.hasOwnProperty(c.ATVALUE)) {\n        f = a[c.ATVALUE];\n        var r = a[c.ATPREFIX];\n        delete a[c.ATVALUE];\n        delete a[c.ATPREFIX];\n        a.$ = {};\n        a.$[c.ATVALUE] = f;\n        a.$[c.ATPREFIX] = r;\n      }\n\n      e = c.cloneSimpleObject(e);\n      a[b[d]] ? a[b[d]].$ = e : a[b[d]] = e;\n    };\n\n    c.getFormattedObject = function (a) {\n      var b = {},\n          e,\n          f;\n\n      for (f in a) {\n        a.hasOwnProperty(f) && (a[f].hasOwnProperty(c.ATVALUE) ? (e = a[f][c.ATPREFIX] ? a[f][c.ATPREFIX] + ':' + f : f, b[e] = a[f][c.ATVALUE]) : b[f] = c.getFormattedObject(a[f]));\n      }\n\n      return b;\n    };\n\n    c.completeFstLevelObj = function (a, b, e) {\n      if (a) {\n        if (b) for (var f in b) {\n          !b.hasOwnProperty(f) || a[f] && !e || (a[f] = b[f]);\n        }\n      } else a = b;\n\n      return a;\n    };\n\n    c.getObjectKeys = function (a) {\n      var b = [],\n          e;\n\n      for (e in a) {\n        a.hasOwnProperty(e) && b.push(e);\n      }\n\n      return b;\n    };\n\n    c.objectToLowercase = function (a) {\n      var b = {},\n          e;\n\n      for (e in a) {\n        a.hasOwnProperty(e) && (c.isObject(a[e]) ? b[e.toLowerCase()] = c.objectToLowercase(a[e]) : b[e.toLowerCase()] = a[e]);\n      }\n\n      return b;\n    };\n\n    c.splitProtocolAndKey = function (a, b) {\n      var e, f;\n      2 > a.length || ':' !== a[1] ? (e = '', f = a) : 4 > a.length || ':' !== a[3] ? (e = a.substring(0, 1), f = a.substring(2, a.length)) : (e = a.substring(0, 3), f = a.substring(4, a.length));\n      b && (e = e.toLowerCase(), f = f.toLowerCase());\n      return {\n        prefix: e,\n        key: f\n      };\n    };\n\n    c.jsonSerialize = function (b) {\n      try {\n        return 'undefined' !== typeof JSON && JSON.stringify ? JSON.stringify(b) : a(b);\n      } catch (d) {\n        return null;\n      }\n    };\n\n    c.jsonParse = function (a) {\n      try {\n        return 'undefined' !== typeof JSON && JSON.parse ? JSON.parse(a + '') : k(a);\n      } catch (b) {\n        return null;\n      }\n    };\n\n    c.trim = function (a) {\n      try {\n        return String.prototype.trim ? a.trim() : a.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n      } catch (b) {\n        return a;\n      }\n    };\n\n    c.arrayIndexOf = function (a, b) {\n      if (Array.prototype.indexOf) {\n        var e = -1;\n        'undefined' !== typeof a.indexOf(b) && (e = a.indexOf(b));\n        return e;\n      }\n\n      return function (a) {\n        if (null == this) throw new TypeError();\n        var b = Object(this),\n            e = b.length >>> 0;\n        if (0 === e) return -1;\n        var h = 0;\n        1 < arguments.length && (h = Number(arguments[1]), h != h ? h = 0 : 0 != h && Infinity != h && -Infinity != h && (h = (0 < h || -1) * Math.floor(Math.abs(h))));\n        if (h >= e) return -1;\n\n        for (h = 0 <= h ? h : Math.max(e - Math.abs(h), 0); h < e; h++) {\n          if (h in b && b[h] === a) return h;\n        }\n\n        return -1;\n      }.apply(a, [b]);\n    };\n\n    c.uuid = function () {\n      function a(f) {\n        var h = Math.random();\n\n        try {\n          e && (h = b.getRandomValues(new Uint32Array(1))[0] / Math.pow(2, 32));\n        } catch (d) {}\n\n        return Math.floor((9 * h + 1) * Math.pow(10, f - 1));\n      }\n\n      var b = window.crypto || window.msCrypto,\n          e = null !== b && 'object' === typeof b;\n      return {\n        v4: function v4() {\n          try {\n            if (e) return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, function (a) {\n              return (a ^ b.getRandomValues(new Uint32Array(1))[0] & 15 >> a / 4).toString(16);\n            });\n          } catch (a) {}\n\n          return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (a) {\n            var b = 16 * Math.random() | 0;\n            return ('x' === a ? b : b & 3 | 8).toString(16);\n          });\n        },\n        num: function num(b) {\n          var e = new Date(),\n              d = function d(a) {\n            a -= 100 * Math.floor(a / 100);\n            return 10 > a ? '0' + a : String(a);\n          };\n\n          return d(e.getHours()) + '' + d(e.getMinutes()) + '' + d(e.getSeconds()) + '' + a(b - 6);\n        }\n      };\n    };\n\n    c.isPreview = function () {\n      return window.navigator && 'preview' === window.navigator.loadPurpose;\n    };\n\n    c.isPrerender = function (a) {\n      var b,\n          e = !1,\n          f = ['webkit', 'ms'];\n      if ('prerender' === document.visibilityState) b = 'visibilitychange';else for (var d = 0; d < f.length; d++) {\n        'prerender' === document[f[d] + 'VisibilityState'] && (b = f[d] + 'visibilitychange');\n      }\n\n      if ('undefined' !== typeof b) {\n        var r = function r(f) {\n          a(f);\n          c.removeEvtListener(document, b, r);\n        };\n\n        c.addEvtListener(document, b, r);\n        e = !0;\n      }\n\n      return e;\n    };\n\n    c.addEvtListener = function (a, b, e) {\n      a.addEventListener ? a.addEventListener(b, e, !1) : a.attachEvent && a.attachEvent('on' + b, e);\n    };\n\n    c.removeEvtListener = function (a, b, e) {\n      a.removeEventListener ? a.removeEventListener(b, e, !1) : a.detachEvent && a.detachEvent('on' + b, e);\n    };\n\n    c.hashcode = function (a) {\n      var b = 0;\n      if (0 === a.length) return b;\n\n      for (var e = 0; e < a.length; e++) {\n        var f = a.charCodeAt(e),\n            b = (b << 5) - b + f,\n            b = b | 0;\n      }\n\n      return b;\n    };\n\n    c.setLocation = function (a) {\n      var b = a.location;\n      a = window[a.target] || window;\n      b && (a.location.href = b);\n    };\n\n    c.dispatchCallbackEvent = function (a) {\n      var b;\n      if ('function' === typeof window.Event) b = new Event('ATCallbackEvent');else try {\n        ;\n        b = document.createEvent('Event'), b.initEvent && b.initEvent('ATCallbackEvent', !0, !0);\n      } catch (e) {}\n      b && 'function' === typeof document.dispatchEvent && (b.name = a, document.dispatchEvent(b));\n    };\n\n    c.addCallbackEvent = function (a) {\n      c.addEvtListener(document, 'ATCallbackEvent', a);\n    };\n\n    c.removeCallbackEvent = function (a) {\n      c.removeEvent('ATCallbackEvent', a);\n    };\n\n    (function () {\n      function a(b, e) {\n        e = e || {\n          bubbles: !1,\n          cancelable: !1,\n          detail: void 0\n        };\n        var f;\n\n        try {\n          ;\n          f = document.createEvent('CustomEvent'), f.initCustomEvent(b, e.bubbles, e.cancelable, e.detail);\n        } catch (d) {}\n\n        return f;\n      }\n\n      'function' === typeof window.CustomEvent ? window.ATCustomEvent = window.CustomEvent : ('function' === typeof window.Event && (a.prototype = window.Event.prototype), window.ATCustomEvent = a);\n    })();\n\n    c.addEvent = function (a, b, e, f) {\n      c[a] = new ATCustomEvent(a, {\n        detail: {\n          name: b,\n          id: e\n        }\n      });\n      c.addEvtListener(document, a, f);\n    };\n\n    c.removeEvent = function (a, b) {\n      c.removeEvtListener(document, a, b);\n    };\n\n    c.dispatchEvent = function (a, b) {\n      c[a] = c[a] || new ATCustomEvent(a, {\n        detail: {\n          name: b,\n          id: -1\n        }\n      });\n\n      try {\n        document.dispatchEvent(c[a]);\n      } catch (e) {}\n    };\n\n    c.privacy = new function () {\n      function a(b, f) {\n        var e = [],\n            d,\n            h;\n        d = {};\n\n        for (var l = 0; l < b.length; l++) {\n          d = {};\n          c.object2Flatten(b[l], null, d, null, !0);\n\n          for (var s in d) {\n            d.hasOwnProperty(s) && -1 === c.arrayIndexOf(f, s) && delete d[s];\n          }\n\n          if (!c.isEmptyObject(d)) {\n            h = {};\n\n            for (var g in d) {\n              d.hasOwnProperty(g) && c.flatten2Object(h, g, d[g]);\n            }\n\n            d = c.getFormattedObject(h);\n            e.push(d);\n          }\n        }\n\n        return e;\n      }\n\n      function b(a) {\n        for (var f = [], d = {}, e = 0; e < a.length; e++) {\n          if ('string' === typeof a[e]) f.push(a[e]);else for (var h in a[e]) {\n            a[e].hasOwnProperty(h) && (f.push(h), d[h] = (d[h] || []).concat(a[e][h]));\n          }\n        }\n\n        return {\n          keys: f,\n          values: d\n        };\n      }\n\n      var e = this,\n          f = {\n        storageParams: null,\n        bufferParams: null\n      };\n      e.CONSENTNO = 'Consent-NO';\n      e.ALL = '*';\n\n      e.testStorageParam = function (a, b) {\n        var d;\n\n        if (f.storageParams instanceof Array) {\n          for (var h, c = f.storageParams.length - 1; 0 <= c; c--) {\n            if (h = f.storageParams[c], 'string' === typeof h) {\n              if (h === a || h === e.ALL) return {\n                toSetInStorage: !0\n              };\n            } else {\n              a: {\n                d = a;\n                var l = b,\n                    s = void 0,\n                    g = void 0;\n\n                for (g in h) {\n                  if (h.hasOwnProperty(g) && d === g) {\n                    if (!l) {\n                      d = !0;\n                      break a;\n                    }\n\n                    s = [];\n                    h[g] instanceof Array ? s = h[g] : s.push(h[g]);\n\n                    for (var k = 0; k < s.length; k++) {\n                      if (s[k] === l) {\n                        d = !0;\n                        break a;\n                      }\n                    }\n                  }\n                }\n\n                d = !1;\n              }\n\n              if (d) return {\n                toSetInStorage: !0\n              };\n            }\n          }\n\n          return {\n            toSetInStorage: !1\n          };\n        }\n\n        return {\n          toSetInStorage: !0\n        };\n      };\n\n      e.processStorageParams = function (a, d, h) {\n        if (h) {\n          h = h();\n          var m = b(f.storageParams);\n          if (m.keys[0] !== e.ALL) for (var p in h) {\n            if (h.hasOwnProperty(p)) if (-1 === c.arrayIndexOf(m.keys, p)) a && a(p);else if (c.isObject(h[p])) {\n              var g = p,\n                  s = h[p].val,\n                  k = m.values[p],\n                  v = a,\n                  w = d;\n\n              if ('undefined' !== typeof k) {\n                var x = [];\n                k instanceof Array ? x = k : x.push(k);\n                k = void 0;\n\n                for (k in s) {\n                  s.hasOwnProperty(k) && -1 === c.arrayIndexOf(x, k) && v && v([g, k]);\n                }\n\n                v && w && c.isEmptyObject(w(g)) && v(g);\n              }\n            }\n          }\n        }\n      };\n\n      e.testBufferParam = function (b, d) {\n        var l, m;\n\n        if (f.bufferParams instanceof Array) {\n          for (var p, g = f.bufferParams.length - 1; 0 <= g; g--) {\n            if (p = f.bufferParams[g], 'string' === typeof p) {\n              if (p === b || p === e.ALL) return {\n                toSetInBuffer: !0,\n                value: d\n              };\n            } else {\n              a: {\n                l = b;\n                m = d;\n\n                if (c.isObject(p)) {\n                  var s = void 0,\n                      k = [],\n                      v = !1,\n                      w = s = s = void 0;\n\n                  for (w in p) {\n                    if (p.hasOwnProperty(w) && l === w && (s = m, 'string' === typeof s && (s = c.jsonParse(s) || s), 'object' === typeof s)) {\n                      s instanceof Array ? (k = s, v = !0) : k.push(s);\n                      s = a(k, p[w]);\n                      0 === s.length ? (l = !1, m = void 0) : (s = v ? s : s[0], l = !0, m = c.jsonSerialize(s));\n                      break a;\n                    }\n                  }\n                }\n\n                l = !1;\n                m = void 0;\n              }\n\n              if (l) return {\n                toSetInBuffer: !0,\n                value: m\n              };\n            }\n          }\n\n          return {\n            toSetInBuffer: !1\n          };\n        }\n\n        return {\n          toSetInBuffer: !0,\n          value: d\n        };\n      };\n\n      e.processBufferParams = function (d, g, q) {\n        if (g) {\n          g = g();\n          var m = b(f.bufferParams);\n          if (m.keys[0] !== e.ALL) for (var p in g) {\n            if (g.hasOwnProperty(p)) if (-1 === c.arrayIndexOf(m.keys, p)) d && d(p);else {\n              var k = p,\n                  s = g[p],\n                  t = m.values[p],\n                  v = d,\n                  w = q;\n\n              if ('undefined' !== typeof t) {\n                var x = [],\n                    y = s._value,\n                    B = [],\n                    A = !1,\n                    C = void 0,\n                    C = void 0;\n                t instanceof Array ? x = t : x.push(t);\n                'string' === typeof y && (y = c.jsonParse(y) || y);\n                'object' === typeof y && (y instanceof Array ? (B = y, A = !0) : B.push(y), C = a(B, x), 0 === C.length ? v && v(k) : (C = A ? C : C[0], w && w(k, c.jsonSerialize(C), s._options)));\n              }\n            }\n          }\n        }\n      };\n\n      e.setParameters = function (a) {\n        f = a;\n      };\n\n      e.getParameters = function () {\n        return f;\n      };\n\n      e.resetParameters = function () {\n        f = {\n          storageParams: null,\n          bufferParams: null\n        };\n      };\n    }();\n    c.optedOut = null;\n\n    c.addOptOutEvent = function (a, b) {\n      c.addEvent('ATOptOutEvent', 'clientsideuserid', a, b);\n    };\n\n    c.removeOptOutEvent = function (a) {\n      c.removeEvent('ATOptOutEvent', a);\n    };\n\n    c.dispatchOptOutEvent = function (a) {\n      c.optedOut = a;\n      c.dispatchEvent('ATOptOutEvent', 'clientsideuserid');\n    };\n\n    c.userOptedOut = function () {\n      c.dispatchOptOutEvent(!0);\n    };\n\n    c.userOptedIn = function () {\n      c.dispatchOptOutEvent(!1);\n    };\n\n    c.isOptedOut = function () {\n      if (null === c.optedOut) {\n        var a;\n\n        a: {\n          a = null;\n          c.isLocalStorageAvailable() && (a = localStorage.getItem('atuserid'));\n\n          if (null === a) {\n            var b = /(?:^| )atuserid=([^;]+)/.exec(document.cookie);\n            null !== b && (a = b[1]);\n          }\n\n          if (null !== a) try {\n            a = decodeURIComponent(a);\n          } catch (d) {}\n\n          if (a && (a = c.jsonParse(a) || c.jsonParse(c.Base64.decode(a)), null !== a)) {\n            a = 'OPT-OUT' === a.val;\n            break a;\n          }\n\n          a = !1;\n        }\n\n        c.optedOut = a;\n      }\n\n      return !!c.optedOut;\n    };\n\n    c.consentReceived = function (a) {\n      c.consent = !!a;\n    };\n\n    c.consent = !0;\n\n    c.isTabOpeningAction = function (a) {\n      var b = !1;\n      a && (a.ctrlKey || a.shiftKey || a.metaKey || a.button && 1 === a.button) && (b = !0);\n      return b;\n    };\n\n    c.CLICKS_REDIRECTION = 'redirection';\n    c.CLICKS_FORM = 'form';\n    c.CLICKS_MAILTO = 'mailto';\n  };\n\n  ATInternet.Utils = new Utils();\n\n  var BuildManager = function BuildManager(a) {\n    var g = this,\n        k = 0,\n        c = 0,\n        b = ['dz'],\n        d = '',\n        h = function h(a, b, d, f, e, _h, c) {\n      a = '&' + a + '=';\n      return {\n        param: a,\n        paramSize: a.length,\n        str: b,\n        strSize: b.length,\n        truncate: d,\n        multihit: f,\n        separator: e || '',\n        encode: _h,\n        last: c\n      };\n    },\n        l = function l(a, b) {\n      var d = '',\n          f = 0,\n          e = 0,\n          h = 0,\n          f = -1,\n          c = null,\n          l = null,\n          n;\n\n      for (n in a) {\n        a.hasOwnProperty(n) && (c = a[n]) && (f = b - e, c.last && null !== l ? l[n] = c : c.strSize + c.paramSize <= f ? (d += c.param + c.str, e += c.paramSize + c.strSize) : (l = l || {}, l[n] = c, c.truncate && (h = f - c.paramSize, c.separator && (f = c.str.substring(0, f), f = c.encode ? f.lastIndexOf(encodeURIComponent(c.separator)) : f.lastIndexOf(c.separator), 0 < f && (h = f)), d += c.param + c.str.substring(0, h), e += c.paramSize + c.str.substring(0, h).length, l[n].str = c.str.substring(h, c.strSize), l[n].strSize = l[n].str.length)));\n      }\n\n      return [d, l];\n    },\n        e = function e(d, f, _e) {\n      var n = '',\n          g = function g(f) {\n        if (f === {}) return [];\n        var d = [],\n            e;\n        e = {};\n        var m = !1,\n            g = void 0,\n            p,\n            s,\n            r,\n            k,\n            q,\n            v,\n            t,\n            w,\n            D = '',\n            z;\n\n        for (z in f) {\n          if (f.hasOwnProperty(z)) if (v = q = k = r = !1, p = f[z]._value, s = f[z]._options || {}, 'boolean' === typeof s.encode && (r = s.encode), 'function' === typeof p && (p = p()), p = p instanceof Array ? p.join(s.separator || ',') : 'object' === typeof p ? ATInternet.Utils.jsonSerialize(p) : 'undefined' === typeof p ? 'undefined' : p.toString(), r && (p = encodeURIComponent(p)), -1 < ATInternet.Utils.arrayIndexOf(b, z) ? k = !0 : 'boolean' === typeof s.truncate && (k = s.truncate), 'boolean' === typeof s.multihit && (q = s.multihit), 'boolean' === typeof s.last && (v = s.last), p = h(z, p, k, q, s.separator, r, v), q) c -= p.paramSize + p.strSize, D += p.param + p.str;else if (v) p.paramSize + p.strSize > c && (p.str = p.str.substring(0, c - p.paramSize), p.strSize = p.str.length), t = z, w = p;else if (e[z] = p, e[z].paramSize + e[z].strSize > c && !e[z].truncate) {\n            a.emit('Tracker:Hit:Build:Error', {\n              lvl: 'ERROR',\n              msg: 'Too long parameter: \"' + e[z].param + '\"',\n              details: {\n                value: e[z].str\n              }\n            });\n            m = !0;\n            g = z;\n            break;\n          }\n        }\n\n        t && (e[t] = w);\n        e = [e, m, g, D];\n        f = e[0];\n        m = e[1];\n        n = e[3];\n        m && (e = e[2], f = f[e], f.str = f.str.substring(0, c - f.paramSize), f.strSize = f.str.length, m = {}, m.mherr = h('mherr', '1', !1, !1, '', !1, !1), m[e] = f, f = m);\n        f = l(f, c);\n        if (null === f[1]) d = f[0];else for (d.push(f[0]); null !== f[1];) {\n          f = l(f[1], c), d.push(f[0]);\n        }\n        return d;\n      },\n          k = '';\n\n      a.buffer.presentInFilters(f, 'hitType') || (f = a.buffer.addInFilters(f, 'hitType', ['page']));\n      f = a.buffer.addInFilters(f, 'hitType', ['all']);\n      var r, w;\n\n      if (ATInternet.Utils.isObject(d)) {\n        f = a.buffer.addInFilters(f, 'permanent', !0);\n        f = a.buffer.get(f, !0);\n\n        for (r in d) {\n          d.hasOwnProperty(r) && (k = {}, d[r] && 'object' === typeof d[r] && d[r].hasOwnProperty('_value') ? (w = d[r]._value, d[r].hasOwnProperty('_options') && (k = d[r]._options)) : w = d[r], w = ATInternet.Utils.privacy.testBufferParam(r, w), w.toSetInBuffer && (f[r] = {\n            _value: w.value,\n            _options: k\n          }));\n        }\n\n        k = g(f);\n      } else for (r in f = a.buffer.get(f, !0), k = g(f), f) {\n        f.hasOwnProperty(r) && (f[r]._options && f[r]._options.permanent || a.buffer.del(r));\n      }\n\n      _e && _e(k, n);\n    };\n\n    g.getCollectDomain = function () {\n      var b = '',\n          b = a.getConfig('logSSL') || a.getConfig('log'),\n          f = a.getConfig('domain');\n      return b = b && f ? b + '.' + f : a.getConfig('collectDomainSSL') || a.getConfig('collectDomain');\n    };\n\n    var f = function f(b) {\n      var f = '',\n          d = a.getConfig('baseURL');\n      if (d) f = d;else {\n        var d = g.getCollectDomain(),\n            e = a.getConfig('pixelPath'),\n            e = e || '/';\n        '/' !== e.charAt(0) && (e = '/' + e);\n        d && (f = (a.getConfig('forceHttp') ? 'http://' : 'https://') + d + e);\n      }\n      d = a.getConfig('site');\n      f && d ? b && b(null, f + '?s=' + d) : b && b({\n        message: 'Config error'\n      });\n    },\n        n = function n(a, b, d) {\n      f(function (f, h) {\n        f ? d && d(f) : (c = k - (h.length + 27), e(a, b, function (a, b) {\n          var f = [],\n              e = ATInternet.Utils.uuid().num(13);\n          if (a instanceof Array) for (var c = 1; c <= a.length; c++) {\n            f.push(h + b + '&mh=' + c + '-' + a.length + '-' + e + a[c - 1]);\n          } else f.push(h + b + a);\n          d && d(null, f);\n        }));\n      });\n    },\n        r = function r(b, f, d, e, h, c, l) {\n      return function () {\n        return function (n) {\n          a.emit(b, {\n            lvl: h,\n            details: {\n              hit: f,\n              method: d,\n              event: n,\n              isMultiHit: c,\n              elementType: l\n            }\n          });\n          e && e();\n        };\n      }();\n    };\n\n    g.send = function (b, f, d, e, h) {\n      n(b, f, function (b, f) {\n        if (b) a.emit('Tracker:Hit:Build:Error', {\n          lvl: 'ERROR',\n          msg: b.message,\n          details: {}\n        }), d && d();else for (var c = 0; c < f.length; c++) {\n          g.sendUrl(f[c], d, e, h);\n        }\n      });\n    };\n\n    k = Math.max(a.getConfig('maxHitSize') || 0, 2e3);\n    c = Math.max(a.getConfig('maxHitSize') || 0, 2e3);\n    d = a.getConfig('requestMethod');\n\n    g.sendUrl = function (b, f, e, h) {\n      var c = -1 < b.indexOf('&mh=');\n      e = e || d;\n      ATInternet.Utils.isOptedOut() && !a.getConfig('sendHitWhenOptOut') ? r('Tracker:Hit:Sent:NoTrack', b, e, f, 'INFO', c, h)() : 'POST' === e && ATInternet.Utils.isBeaconMethodAvailable() ? (h = 'Tracker:Hit:Sent:Error', e = 'ERROR', window.navigator.sendBeacon(b, null) && (h = 'Tracker:Hit:Sent:Ok', e = 'INFO'), r(h, b, 'POST', f, e, c, '')()) : (e = new Image(), e.onload = r('Tracker:Hit:Sent:Ok', b, 'GET', f, 'INFO', c, h), e.onerror = r('Tracker:Hit:Sent:Error', b, 'GET', f, 'ERROR', c, h), e.src = b);\n    };\n  },\n      TriggersManager = function TriggersManager() {\n    function a(a, d, h) {\n      for (var c = [], e = 0; e < a.length; e++) {\n        a[e].callback(d, h), a[e].singleUse || c.push(a[e]);\n      }\n\n      return c;\n    }\n\n    function g(a, d, h, c) {\n      var e = a.shift();\n      if ('*' === e) return d['*'] = d['*'] || [], d['*'].push({\n        callback: h,\n        singleUse: c\n      }), d['*'].length - 1;\n      if (0 === a.length) return g([e, '*'], d, h, c);\n      d['*'] = d['*'] || [];\n      d[e] = d[e] || {};\n      return g(a, d[e], h, c);\n    }\n\n    function k(b, d, h, c) {\n      var e = d.shift();\n      '*' !== e && (0 === d.length ? k(b, [e, '*'], h, c) : h[e] && (h[e]['*'] = a(h[e]['*'], b, c), k(b, d, h[e], c)));\n    }\n\n    var c = {};\n\n    this.on = function (a, d, h) {\n      h = h || !1;\n      return g(a.split(':'), c, d, h);\n    };\n\n    this.emit = function (b, d) {\n      c['*'] && (c['*'] = a(c['*'], b, d));\n      k(b, b.split(':'), c, d);\n    };\n  },\n      PluginsManager = function PluginsManager(a) {\n    var g = {},\n        k = {},\n        c = 0,\n        b = {},\n        d = 0,\n        h = function h(a) {\n      var b = !1;\n      g[a] && (b = !0);\n      return b;\n    },\n        l = this.unload = function (b) {\n      h(b) ? (g[b] = void 0, a.emit('Tracker:Plugin:Unload:' + b + ':Ok', {\n        lvl: 'INFO'\n      })) : a.emit('Tracker:Plugin:Unload:' + b + ':Error', {\n        lvl: 'ERROR',\n        msg: 'not a known plugin'\n      });\n      return a;\n    },\n        e = this.load = function (b, f) {\n      'function' === typeof f ? 'undefined' === typeof a.getConfig.plgAllowed || 0 === a.getConfig.plgAllowed.length || -1 < a.getConfig.plgAllowed.indexOf(b) ? (g[b] = new f(a), k[b] && h(b) && (k[b] = !1, c--, h(b + '_ll') && l(b + '_ll'), 0 === c && a.emit('Tracker:Plugin:Lazyload:File:Complete', {\n        lvl: 'INFO',\n        msg: 'LazyLoading triggers are finished'\n      })), a.emit('Tracker:Plugin:Load:' + b + ':Ok', {\n        lvl: 'INFO'\n      })) : a.emit('Tracker:Plugin:Load:' + b + ':Error', {\n        lvl: 'ERROR',\n        msg: 'Plugin not allowed',\n        details: {}\n      }) : a.emit('Tracker:Plugin:Load:' + b + ':Error', {\n        lvl: 'ERROR',\n        msg: 'not a function',\n        details: {\n          obj: f\n        }\n      });\n      return a;\n    },\n        f = this.isLazyloading = function (a) {\n      return a ? !0 === k[a] : 0 !== c;\n    },\n        n = function n(a) {\n      return !h(a) && !f(a) && h(a + '_ll');\n    },\n        r = function r(b) {\n      k[b] = !0;\n      c++;\n      ATInternet.Utils.loadScript({\n        url: a.getConfig('lazyLoadingPath') + b + '.js'\n      });\n    },\n        q = function q(a) {\n      return n(a) ? (r(a), !0) : !1;\n    },\n        m = function m(a) {\n      b[a] ? b[a]++ : b[a] = 1;\n      d++;\n    },\n        p = function p(a, b, f, d) {\n      var e = null;\n      b = b.split('.');\n      h(a) && g[a][b[0]] && (e = 1 < b.length && g[a][b[0]][b[1]] ? g[a][b[0]][b[1]].apply(g[a], f) : g[a][b[0]].apply(g[a], f));\n      d && d(e);\n    },\n        u = function u(f, e, h, c) {\n      m(f);\n      a.onTrigger('Tracker:Plugin:Load:' + f + ':Ok', function () {\n        p(f, e, h, function (e) {\n          b[f]--;\n          d--;\n          0 === d && a.emit('Tracker:Plugin:Lazyload:Exec:Complete', {\n            lvl: 'INFO',\n            msg: 'All exec waiting for lazyloading are done'\n          });\n          c && c(e);\n        });\n      }, !0);\n    },\n        s = function s(a) {\n      for (var b = {\n        mcount: 0,\n        plugins: {}\n      }, f = 0; f < a.length; f++) {\n        g.hasOwnProperty(a[f]) || (b.mcount++, b.plugins[a[f]] = !0);\n      }\n\n      return b;\n    };\n\n    this.isExecWaitingLazyloading = function () {\n      return 0 !== d;\n    };\n\n    a.exec = this.exec = function (a, b, d, e) {\n      n(a) ? (u(a, b, d, e), r(a)) : f(a) ? u(a, b, d, e) : p(a, b, d, e);\n    };\n\n    this.waitForDependencies = function (b, f) {\n      var d = s(b);\n      if (0 === d.mcount) a.emit('Tracker:Plugin:Dependencies:Loaded', {\n        lvl: 'INFO',\n        details: {\n          dependencies: b\n        }\n      }), f();else for (var e in d.plugins) {\n        d.plugins.hasOwnProperty(e) && (a.emit('Tracker:Plugin:Dependencies:Error', {\n          lvl: 'WARNING',\n          msg: 'Missing plugin ' + e\n        }), a.onTrigger('Tracker:Plugin:Load:' + e, function (a, b) {\n          var e = a.split(':'),\n              h = e[3];\n          'Ok' === e[4] && (d.plugins[h] = !1, d.mcount--, 0 === d.mcount && f());\n        }, !0), q(e));\n      }\n    };\n\n    this.init = function () {\n      for (var a in ATInternet.Tracker.pluginProtos) {\n        ATInternet.Tracker.pluginProtos.hasOwnProperty(a) && e(a, ATInternet.Tracker.pluginProtos[a]);\n      }\n    };\n  },\n      CallbacksManager = function CallbacksManager(a) {\n    var g = this,\n        k = {},\n        c = function c(b) {\n      if (b.name) {\n        var d = !0,\n            h = a.getConfig('callbacks');\n        'undefined' !== typeof h && (h.include instanceof Array && -1 === ATInternet.Utils.arrayIndexOf(h.include, b.name) && (d = !1), h.exclude instanceof Array && -1 !== ATInternet.Utils.arrayIndexOf(h.exclude, b.name) && (d = !1));\n        ATInternet.Callbacks && ATInternet.Callbacks.hasOwnProperty(b.name) && (h = {}, h[b.name] = {\n          function: ATInternet.Callbacks[b.name]\n        }, d && g.load(b.name, h[b.name]['function']), ATInternet.Tracker.callbackProtos[b.name] || (ATInternet.Tracker.callbackProtos[b.name] = h[b.name]));\n      }\n    };\n\n    g.load = function (b, d) {\n      'function' === typeof d ? (new d(a), a.emit('Tracker:Callback:Load:' + b + ':Ok', {\n        lvl: 'INFO',\n        details: {\n          obj: d\n        }\n      })) : a.emit('Tracker:Callback:Load:' + b + ':Error', {\n        lvl: 'ERROR',\n        msg: 'not a function',\n        details: {\n          obj: d\n        }\n      });\n      return a;\n    };\n\n    g.init = function () {\n      if (a.getConfig('activateCallbacks')) {\n        var b = a.getConfig('callbacks');\n        if ('undefined' !== typeof b && b.include instanceof Array) for (var d = 0; d < b.include.length; d++) {\n          ATInternet.Callbacks && ATInternet.Callbacks.hasOwnProperty(b.include[d]) && (k[b.include[d]] = {\n            function: ATInternet.Callbacks[b.include[d]]\n          }, ATInternet.Tracker.callbackProtos[b.include[d]] || (ATInternet.Tracker.callbackProtos[b.include[d]] = k[b.include[d]]));\n        } else for (d in ATInternet.Callbacks) {\n          ATInternet.Callbacks.hasOwnProperty(d) && (k[d] = {\n            function: ATInternet.Callbacks[d]\n          }, ATInternet.Tracker.callbackProtos[d] || (ATInternet.Tracker.callbackProtos[d] = k[d]));\n        }\n        if ('undefined' !== typeof b && b.exclude instanceof Array) for (d = 0; d < b.exclude.length; d++) {\n          delete k[b.exclude[d]];\n        }\n\n        for (var h in k) {\n          k.hasOwnProperty(h) && k[h] && g.load(h, k[h]['function']);\n        }\n\n        ATInternet.Utils.addCallbackEvent(c);\n      }\n    };\n\n    g.removeCallbackEvent = function () {\n      ATInternet.Utils.removeCallbackEvent(c);\n    };\n  },\n      BufferManager = function BufferManager(a) {\n    var g = this,\n        k = {};\n\n    g.set = function (a, b, c) {\n      b = ATInternet.Utils.privacy.testBufferParam(a, b);\n      b.toSetInBuffer && (c = c || {}, c.hitType = c.hitType || ['page'], k[a] = {\n        _value: b.value,\n        _options: c\n      });\n    };\n\n    var c = function c(a, b, _c) {\n      return (a = ATInternet.Utils.cloneSimpleObject(a[b])) && !_c ? a._value : a;\n    },\n        b = function h(a, b) {\n      if (!(a && b instanceof Array && a instanceof Array)) return [];\n      if (0 === a.length) return b;\n      var f = a[0],\n          c,\n          g = [],\n          q = ATInternet.Utils.cloneSimpleObject(a);\n      q.shift();\n\n      for (var m = 0; m < b.length; m++) {\n        if ('object' !== typeof f[1]) k[b[m]] && k[b[m]]._options[f[0]] === f[1] && g.push(b[m]);else {\n          c = f[1].length;\n\n          for (var p = 0; p < c; p++) {\n            if (k[b[m]] && k[b[m]]._options[f[0]] instanceof Array && 0 <= ATInternet.Utils.arrayIndexOf(k[b[m]]._options[f[0]], f[1][p])) {\n              g.push(b[m]);\n              break;\n            }\n          }\n        }\n      }\n\n      return h(q, g);\n    };\n\n    g.get = function (a, g) {\n      var e = {};\n      if ('string' === typeof a) e = c(k, a, g);else for (var f = b(a, ATInternet.Utils.getObjectKeys(k)), n = 0; n < f.length; n++) {\n        e[f[n]] = c(k, f[n], g);\n      }\n      return e;\n    };\n\n    g.presentInFilters = function (a, b) {\n      return a && 0 !== a.length ? a[0][0] === b ? !0 : g.presentInFilters(a.slice(1), b) : !1;\n    };\n\n    g.addInFilters = function (a, b, e, f) {\n      if (!a || 0 === a.length) return f ? [] : [[b, e]];\n      var c = a[0][0],\n          r = a[0][1];\n      c === b && (r instanceof Array && -1 === ATInternet.Utils.arrayIndexOf(r, e[0]) && r.push(e[0]), f = !0);\n      return [[c, r]].concat(g.addInFilters(a.slice(1), b, e, f));\n    };\n\n    g.del = function (a) {\n      k[a] = void 0;\n    };\n\n    g.clear = function () {\n      k = {};\n    };\n  },\n      PropertiesManager = function PropertiesManager(a) {\n    var g = this,\n        k = {};\n\n    g.setProp = function (a, b, d) {\n      'undefined' !== typeof a && (k[a] = {\n        value: b,\n        persistent: !!d\n      });\n    };\n\n    g.setProps = function (a, b) {\n      if (ATInternet.Utils.isObject(a)) for (var d in a) {\n        a.hasOwnProperty(d) && g.setProp(d, a[d], b);\n      }\n    };\n\n    g.delProp = function (c, b) {\n      'undefined' !== typeof k[c] && delete k[c];\n      !b && a.delParam(c.toLowerCase());\n    };\n\n    g.delProps = function (a) {\n      for (var b in k) {\n        k.hasOwnProperty(b) && g.delProp(b, a);\n      }\n    };\n\n    g.getProp = function (a) {\n      k = k || {};\n      return k[a];\n    };\n\n    g.getProps = function () {\n      return k;\n    };\n  },\n      Tag = function Tag(a, g, k) {\n    g = g || {};\n    var c = this;\n    c.version = '5.27.0';\n    var b = ATInternet.Utils.cloneSimpleObject(g);\n    c.triggers = new TriggersManager(c);\n    c.emit = c.triggers.emit;\n    c.onTrigger = c.triggers.on;\n    var d = ATInternet.Utils.cloneSimpleObject(dfltGlobalCfg) || {},\n        h;\n\n    for (h in a) {\n      a.hasOwnProperty(h) && (d[h] = a[h]);\n    }\n\n    c.getConfig = function (a) {\n      return d[a];\n    };\n\n    c.setConfig = function (a, b, h) {\n      ;\n      void 0 !== d[a] && h || (c.emit('Tracker:Config:Set:' + a, {\n        lvl: 'INFO',\n        details: {\n          bef: d[a],\n          aft: b\n        }\n      }), d[a] = b);\n    };\n\n    c.configPlugin = function (a, b, h) {\n      d[a] = d[a] || {};\n\n      for (var g in b) {\n        b.hasOwnProperty(g) && void 0 === d[a][g] && (d[a][g] = b[g]);\n      }\n\n      h && (h(d[a]), c.onTrigger('Tracker:Config:Set:' + a, function (a, b) {\n        h(b.details.aft);\n      }));\n      return d[a];\n    };\n\n    c.getAllContext = function () {\n      return b;\n    };\n\n    c.getContext = function (a) {\n      return b[a];\n    };\n\n    c.setContext = function (a, f) {\n      c.emit('Tracker:Context:Set:' + a, {\n        lvl: 'INFO',\n        details: {\n          bef: b[a],\n          aft: f\n        }\n      });\n      b[a] = f;\n    };\n\n    c.delContext = function (a, f) {\n      c.emit('Tracker:Context:Deleted:' + a + ':' + f, {\n        lvl: 'INFO',\n        details: {\n          key1: a,\n          key2: f\n        }\n      });\n      if (a) b.hasOwnProperty(a) && (f ? b[a] && b[a].hasOwnProperty(f) && (b[a][f] = void 0) : b[a] = void 0);else if (f) for (var d in b) {\n        b.hasOwnProperty(d) && b[d] && b[d].hasOwnProperty(f) && (b[d][f] = void 0);\n      }\n    };\n\n    c.plugins = new PluginsManager(c);\n    c.buffer = new BufferManager(c);\n    c.setParam = c.buffer.set;\n\n    c.getParams = function (a) {\n      return c.buffer.get(a, !1);\n    };\n\n    c.getParam = c.buffer.get;\n    c.delParam = c.buffer.del;\n    c.builder = new BuildManager(c);\n    c.sendUrl = c.builder.sendUrl;\n    c.callbacks = new CallbacksManager(c);\n    c.properties = new PropertiesManager(c);\n    c.setProp = c.properties.setProp;\n    c.setProps = c.properties.setProps;\n    c.delProp = c.properties.delProp;\n    c.delProps = c.properties.delProps;\n    c.getProp = c.properties.getProp;\n    c.getProps = c.properties.getProps;\n\n    c.sendHit = function (a, b, d, h, g) {\n      var m = c.getProps(),\n          p,\n          l;\n\n      for (l in m) {\n        m.hasOwnProperty(l) && (p = m[l].value, m[l].persistent ? c.setParam(l.toLowerCase(), p, {\n          permanent: !0,\n          hitType: ['all'],\n          encode: !0\n        }) : (ATInternet.Utils.isObject(a) ? a[l.toLowerCase()] = {\n          _value: p,\n          _options: {\n            hitType: ['all'],\n            encode: !0\n          }\n        } : c.setParam(l.toLowerCase(), p, {\n          hitType: ['all'],\n          encode: !0\n        }), c.delProp(l, !0)));\n      }\n\n      c.builder.send(a, b, d, h, g);\n    };\n\n    ATInternet.Utils.privacy.resetParameters();\n    c.setParam('ts', function () {\n      return new Date().getTime();\n    }, {\n      permanent: !0,\n      hitType: ['all']\n    });\n    (c.getConfig('disableCookie') || c.getConfig('disableStorage')) && c.setParam('idclient', ATInternet.Utils.privacy.CONSENTNO, {\n      permanent: !0,\n      hitType: ['all']\n    });\n    c.getConfig('medium') && c.setParam('medium', c.getConfig('medium'), {\n      permanent: !0,\n      hitType: ['all']\n    });\n\n    if (c.getConfig('urlPropertyAuto') && true && 'undefined' !== typeof window.location) {\n      h = (c.getConfig('urlPropertyQueryString') ? window.location.href : window.location.protocol + '//' + window.location.host + window.location.pathname).replace(/[<>]/g, '').substring(0, 1600).replace(/&/g, '$');\n      var l = c.getContext('page') || {};\n      l.url = window.encodeURIComponent(h);\n      c.setContext('page', l);\n      c.setParam('page_url', h, {\n        permanent: !0,\n        hitType: 'page click publisher selfPromotion onSiteAdsClick onSiteAdsImpression InternalSearch mvtesting richmedia'.split(' ')\n      });\n    }\n\n    c.plugins.init();\n    c.callbacks.init();\n    c.emit('Tracker:Ready', {\n      lvl: 'INFO',\n      msg: 'Tracker initialized',\n      details: {\n        tracker: c,\n        args: {\n          config: a,\n          context: g,\n          callback: k\n        }\n      }\n    });\n    k && k(c);\n    ATInternet.Tracker.instances.push(c);\n  };\n\n  ATInternet.Tracker.Tag = Tag;\n  ATInternet.Tracker.instances = [];\n  ATInternet.Tracker.pluginProtos = {};\n\n  ATInternet.Tracker.addPlugin = function (a, g) {\n    g = g || ATInternet.Tracker.Plugins[a];\n\n    if (!ATInternet.Tracker.pluginProtos[a]) {\n      ATInternet.Tracker.pluginProtos[a] = g;\n\n      for (var k = 0; k < ATInternet.Tracker.instances.length; k++) {\n        ATInternet.Tracker.instances[k].plugins.load(a, g);\n      }\n    }\n  };\n\n  ATInternet.Tracker.delPlugin = function (a) {\n    if (ATInternet.Tracker.pluginProtos[a]) {\n      ATInternet.Tracker.pluginProtos[a] = void 0;\n\n      for (var g = 0; g < ATInternet.Tracker.instances.length; g++) {\n        ATInternet.Tracker.instances[g].plugins.unload(a);\n      }\n    }\n  };\n\n  ATInternet.Tracker.callbackProtos = {};\n}).call(window);\n(function () {\n  var dfltPluginCfg = {\n    lifetime: 30,\n    lastPersistence: true,\n    domainAttribution: true,\n    enableUTMTracking: true,\n    UTMParameters: ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content'],\n    querystringPrefix: 'at_'\n  };\n  var dfltGlobalCfg = {\n    visitLifetime: 30,\n    redirectionLifetime: 30\n  };\n\n  ATInternet.Tracker.Plugins.Campaigns = function (a) {\n    a.setConfig('visitLifetime', dfltGlobalCfg.visitLifetime, !0);\n    a.setConfig('redirectionLifetime', dfltGlobalCfg.redirectionLifetime, !0);\n    var g = {},\n        k,\n        c;\n    a.configPlugin('Campaigns', dfltPluginCfg || {}, function (a) {\n      g = a;\n    });\n\n    var b,\n        d,\n        h,\n        l,\n        e,\n        f,\n        n,\n        r,\n        q,\n        m,\n        p,\n        u,\n        s,\n        t = function t() {\n      var b = function b(a) {\n        var b = '';\n        a && (b = isNaN(a) && -1 === a.search(/^\\[(.*?)\\]$/g) && -1 === a.search(/^\\d+\\[(.*?)\\]$/g) ? '[' + a + ']' : a);\n        return b;\n      },\n          f = function f(a) {\n        var b = a;\n        -1 !== a.search(/[-]/g) && -1 === a.search(/^\\[(.*?)\\]$/g) && (b = '[' + a + ']');\n        return b;\n      },\n          d = function d(a) {\n        for (; '-' === a.charAt(a.length - 1);) {\n          a = a.substring(0, a.length - 1);\n        }\n\n        return a;\n      };\n\n      this.SponsoredLinks = function () {\n        var e = {\n          google: 'goo',\n          yahoo: 'ysm',\n          miva: 'miv',\n          orange: 'wan',\n          msn: 'msn',\n          mirago: 'mir',\n          sklik: 'skl',\n          adfox: 'adf',\n          etarget: 'etg',\n          yandex: 'yan',\n          ebay: 'eba',\n          searchalliance: 'sal',\n          bing: 'bin',\n          naver: 'nav',\n          baidu: 'bdu',\n          qwant: 'qwt',\n          waze: 'waz',\n          amazon: 'amz'\n        },\n            c = {\n          search: 's',\n          content: 'c'\n        };\n        this.atMedium = 'sl';\n        this.atTerm = this.atNetwork = this.atVariant = this.atCreation = this.atPlatform = this.atCampaign = '';\n\n        this.format = function () {\n          var a = 'sec',\n              h = b(this.atCampaign),\n              g = e[this.atPlatform] || f(this.atPlatform),\n              m = b(this.atCreation),\n              l = b(this.atVariant),\n              n = c[this.atNetwork] || f(this.atNetwork),\n              p = b(this.atTerm);\n          return d(a + ('-' + h + '-' + g + '-' + m + '-' + l + '-' + n + '-' + p));\n        };\n\n        this.setProperties = function (b) {\n          this.atCampaign = a.utils.getQueryStringValue(g.querystringPrefix + 'campaign', b) || '';\n          this.atPlatform = a.utils.getQueryStringValue(g.querystringPrefix + 'platform', b) || '';\n          this.atCreation = a.utils.getQueryStringValue(g.querystringPrefix + 'creation', b) || '';\n          this.atVariant = a.utils.getQueryStringValue(g.querystringPrefix + 'variant', b) || '';\n          this.atNetwork = a.utils.getQueryStringValue(g.querystringPrefix + 'network', b) || '';\n          this.atTerm = a.utils.getQueryStringValue(g.querystringPrefix + 'term', b) || '';\n          a.setContext('campaigns_events', {\n            $: this.atMedium,\n            campaign: this.atCampaign,\n            platform: this.atPlatform,\n            creation: this.atCreation,\n            variant: this.atVariant,\n            network: this.atNetwork,\n            term: this.atTerm\n          });\n        };\n      };\n\n      this.Email = function () {\n        var e = {\n          acquisition: 'erec',\n          retention: 'epr',\n          promotion: 'es'\n        };\n        this.atMedium = 'email';\n        this.atSendTime = this.atRecipientList = this.atRecipientId = this.atLink = this.atSendDate = this.atCreation = this.atCampaign = this.atEmailtype = '';\n\n        this.format = function () {\n          var a = e[this.atEmailtype] || e.promotion,\n              c = b(this.atCampaign),\n              h = b(this.atCreation),\n              g = f(this.atSendDate),\n              m = b(this.atLink),\n              l = f(this.atRecipientId) + (this.atRecipientList ? '@' + f(this.atRecipientList) : ''),\n              n = f(this.atSendTime);\n          return d(a + ('-' + c + '-' + h + '-' + g + '-' + m + '-' + l + '-' + n));\n        };\n\n        this.setProperties = function (b) {\n          this.atEmailtype = a.utils.getQueryStringValue(g.querystringPrefix + 'emailtype', b) || '';\n          this.atCampaign = a.utils.getQueryStringValue(g.querystringPrefix + 'campaign', b) || '';\n          this.atCreation = a.utils.getQueryStringValue(g.querystringPrefix + 'creation', b) || '';\n          this.atSendDate = a.utils.getQueryStringValue(g.querystringPrefix + 'send_date', b) || '';\n          this.atLink = a.utils.getQueryStringValue(g.querystringPrefix + 'link', b) || '';\n          this.atRecipientId = a.utils.getQueryStringValue(g.querystringPrefix + 'recipient_id', b) || '';\n          this.atRecipientList = a.utils.getQueryStringValue(g.querystringPrefix + 'recipient_list', b) || '';\n          this.atSendTime = a.utils.getQueryStringValue(g.querystringPrefix + 'send_time', b) || '';\n          a.setContext('campaigns_events', {\n            $: this.atMedium,\n            emailtype: this.atEmailtype,\n            campaign: this.atCampaign,\n            creation: this.atCreation,\n            send_date: this.atSendDate,\n            link: this.atLink,\n            recipient_id: this.atRecipientId,\n            recipient_list: this.atRecipientList,\n            send_time: this.atSendTime\n          });\n        };\n      };\n\n      this.Affiliate = function () {\n        this.atMedium = 'affiliate';\n        this.atVariant = this.atCreation = this.atFormat = this.atIdentifier = this.atType = this.atCampaign = '';\n\n        this.format = function () {\n          var a = 'al',\n              f = b(this.atCampaign),\n              e = b(this.atType),\n              c = b(this.atIdentifier),\n              h = b(this.atFormat),\n              g = b(this.atCreation),\n              m = b(this.atVariant);\n          return d(a + ('-' + f + '-' + e + '-' + c + '-' + h + '-' + g + '-' + m));\n        };\n\n        this.setProperties = function (b) {\n          this.atCampaign = a.utils.getQueryStringValue(g.querystringPrefix + 'campaign', b) || '';\n          this.atType = a.utils.getQueryStringValue(g.querystringPrefix + 'type', b) || '';\n          this.atIdentifier = a.utils.getQueryStringValue(g.querystringPrefix + 'identifier', b) || '';\n          this.atFormat = a.utils.getQueryStringValue(g.querystringPrefix + 'format', b) || '';\n          this.atCreation = a.utils.getQueryStringValue(g.querystringPrefix + 'creation', b) || '';\n          this.atVariant = a.utils.getQueryStringValue(g.querystringPrefix + 'variant', b) || '';\n          a.setContext('campaigns_events', {\n            $: this.atMedium,\n            campaign: this.atCampaign,\n            type: this.atType,\n            identifier: this.atIdentifier,\n            format: this.atFormat,\n            creation: this.atCreation,\n            variant: this.atVariant\n          });\n        };\n      };\n\n      this.Display = function () {\n        this.atMedium = 'display';\n        this.atDetailPlacement = this.atGeneralPlacement = this.atChannel = this.atFormat = this.atVariant = this.atCreation = this.atCampaign = '';\n\n        this.format = function () {\n          var a = 'ad',\n              f = b(this.atCampaign),\n              e = b(this.atCreation),\n              c = b(this.atVariant),\n              h = b(this.atFormat),\n              g = b(this.atChannel),\n              m = b(this.atGeneralPlacement),\n              l = b(this.atDetailPlacement);\n          return d(a + ('-' + f + '-' + e + '-' + c + '-' + h + '-' + g + '-' + m + '-' + l));\n        };\n\n        this.setProperties = function (b) {\n          this.atCampaign = a.utils.getQueryStringValue(g.querystringPrefix + 'campaign', b) || '';\n          this.atCreation = a.utils.getQueryStringValue(g.querystringPrefix + 'creation', b) || '';\n          this.atVariant = a.utils.getQueryStringValue(g.querystringPrefix + 'variant', b) || '';\n          this.atFormat = a.utils.getQueryStringValue(g.querystringPrefix + 'format', b) || '';\n          this.atChannel = a.utils.getQueryStringValue(g.querystringPrefix + 'channel', b) || '';\n          this.atGeneralPlacement = a.utils.getQueryStringValue(g.querystringPrefix + 'general_placement', b) || '';\n          this.atDetailPlacement = a.utils.getQueryStringValue(g.querystringPrefix + 'detail_placement', b) || '';\n          a.setContext('campaigns_events', {\n            $: this.atMedium,\n            campaign: this.atCampaign,\n            creation: this.atCreation,\n            variant: this.atVariant,\n            format: this.atFormat,\n            channel: this.atChannel,\n            general_placement: this.atGeneralPlacement,\n            detail_placement: this.atDetailPlacement\n          });\n        };\n      };\n\n      this.Custom = function () {\n        this.atCustom4 = this.atCustom3 = this.atCustom2 = this.atCustom1 = this.atCampaign = this.atMedium = '';\n\n        this.format = function () {\n          var a = '';\n          /\\d+$/.test(this.atMedium) && (a = /\\d+$/.exec(this.atMedium)[0]);\n          var a = 'cs' + a,\n              f = b(this.atCampaign),\n              e = b(this.atCustom1),\n              c = b(this.atCustom2),\n              h = b(this.atCustom3),\n              g = b(this.atCustom4);\n          return d(a + ('-' + f + '-' + e + '-' + c + '-' + h + '-' + g));\n        };\n\n        this.setProperties = function (b) {\n          this.atMedium = a.utils.getQueryStringValue(g.querystringPrefix + 'medium', b) || '';\n          this.atCampaign = a.utils.getQueryStringValue(g.querystringPrefix + 'campaign', b) || '';\n          this.atCustom1 = a.utils.getQueryStringValue(g.querystringPrefix + 'custom1', b) || '';\n          this.atCustom2 = a.utils.getQueryStringValue(g.querystringPrefix + 'custom2', b) || '';\n          this.atCustom3 = a.utils.getQueryStringValue(g.querystringPrefix + 'custom3', b) || '';\n          this.atCustom4 = a.utils.getQueryStringValue(g.querystringPrefix + 'custom4', b) || '';\n          a.setContext('campaigns_events', {\n            $: this.atMedium,\n            campaign: this.atCampaign,\n            custom1: this.atCustom1,\n            custom2: this.atCustom2,\n            custom3: this.atCustom3,\n            custom4: this.atCustom4\n          });\n        };\n      };\n\n      this.medium = {\n        sl: this.SponsoredLinks,\n        email: this.Email,\n        affiliate: this.Affiliate,\n        display: this.Display\n      };\n    },\n        v = function v(b, f) {\n      var d = a.getContext('campaigns') || {};\n      d[b] = f;\n      a.setContext('campaigns', d);\n    },\n        w = function w() {\n      var b = a.utils.getLocation(),\n          f = function f() {\n        for (var f = g.UTMParameters, d, e = 0; e < f.length; e++) {\n          (d = a.utils.getQueryStringValue(f[e], b)) && v(f[e], d);\n        }\n      };\n\n      (function () {\n        var f = a.utils.getQueryStringValue(g.querystringPrefix + 'medium', b);\n\n        if (f) {\n          var d = new t(),\n              f = 'function' === typeof d.medium[f] ? new d.medium[f]() : new d.Custom();\n          f.setProperties(b);\n          n = f.format();\n        } else n = a.utils.getQueryStringValue('xtor', b);\n\n        r = a.utils.getQueryStringValue('xtdt', b);\n        q = a.utils.getQueryStringValue('xts', b);\n      })();\n\n      g.enableUTMTracking && f();\n    },\n        x = function x(b, f) {\n      var d = a.storage[c](b);\n      if (null !== d) return 'object' === typeof d && !(d instanceof Array);\n      a.storage[k](b, {}, f);\n      return !0;\n    };\n\n    (function () {\n      a.plugins.waitForDependencies(['Storage', 'Utils'], function () {\n        k = 'set' + (g.domainAttribution ? '' : 'Private');\n        c = 'get' + (g.domainAttribution ? '' : 'Private');\n        b = a.storage[c](['atredir', 'gopc']);\n        d = a.storage[c](['atredir', 'gopc_err']);\n        h = a.storage[c](['atredir', 'camp']);\n        a.storage.del(['atredir', 'gopc']);\n        a.storage.del(['atredir', 'gopc_err']);\n        a.storage.del(['atredir', 'camp']);\n        l = a.storage[c](['atsession', 'histo_camp']);\n        e = a.storage[c](['atreman', 'camp']);\n        f = a.storage[c](['atreman', 'date']);\n        w();\n        m = a.getContext('forcedCampaign');\n        p = !!a.getConfig('redirect');\n        u = !!(n && r && q);\n        s = !1;\n\n        if (u) {\n          var t = new Date().getTime() / 6e4;\n          s = !p && q !== a.getConfig('site') || 0 > t - r || t - r >= a.getConfig('visitLifetime');\n        }\n\n        t = m || h || n;\n\n        if (p && t && x('atredir', {\n          path: '/',\n          end: a.getConfig('redirectionLifetime')\n        })) {\n          a.storage[k](['atredir', 'camp'], t);\n          var B = t = !1;\n          m || (h ? (t = b, B = d) : (t = u, B = s));\n          a.storage[k](['atredir', 'gopc'], t);\n          a.storage[k](['atredir', 'gopc_err'], B);\n        }\n\n        !p && e && (v('xtor', e), t = new Date().getTime() / 36e5, t = Math.floor(t - f), v('roinbh', 0 <= t ? t : 0));\n        p || (t = null, t = h ? b ? m || t : m || h : u ? m : m || n || t, l && l instanceof Array && -1 < l.indexOf(t) && (t = null), t && v('xto', t));\n\n        if (!p && !m) {\n          var A;\n          h ? d && (A = h) : s && (A = n);\n          A && v('pgt', A);\n        }\n\n        if (!p && (A = h ? m || h : m || n || null) && !(!m && !h && u && s || !m && h && b && d)) {\n          if ((!l || l instanceof Array && 0 > l.indexOf(A)) && x('atsession', {\n            path: '/',\n            session: 60 * a.getConfig('visitLifetime')\n          })) a.storage[k](['atsession', 'histo_camp'], l && l.push(A) ? l : [A]);\n          e && !g.lastPersistence || !x('atreman', {\n            path: '/',\n            session: 86400 * g.lifetime\n          }) || (a.storage[k](['atreman', 'camp'], A), a.storage[k](['atreman', 'date'], new Date().getTime() / 36e5));\n        }\n\n        a.emit('Campaigns:process:done', {\n          lvl: 'INFO'\n        });\n      });\n    })();\n  };\n\n  ATInternet.Tracker.addPlugin('Campaigns');\n}).call(window);\n(function () {\n  var dfltPluginCfg = {};\n  var dfltGlobalCfg = {\n    storageMode: 'cookie'\n  };\n\n  ATInternet.Tracker.Plugins.Storage = function (a) {\n    var g = this,\n        k = {},\n        c = !1,\n        b = null;\n    a.configPlugin('Storage', dfltPluginCfg || {}, function (a) {\n      k = a;\n      'localStorage' === k.storageMode && (c = ATInternet.Utils.isLocalStorageAvailable());\n    });\n\n    var d = {},\n        h = function h(b) {\n      return a.getConfig('base64Storage') ? ATInternet.Utils.Base64.encode(b) : encodeURIComponent(b);\n    },\n        l = function l(b) {\n      return a.getConfig('base64Storage') ? ATInternet.Utils.Base64.decode(b) : decodeURIComponent(b);\n    },\n        e = function e() {\n      this.getData = function (a) {\n        var b = null;\n        (a = RegExp('(?:^| )' + a + '=([^;]+)').exec(document.cookie) || null) && (b = l(a[1]));\n        return b;\n      };\n\n      this.setData = function (b) {\n        var d = !1;\n\n        if (b.name && 'string' === typeof b.name) {\n          var c = b.options || {},\n              f = c.end || {},\n              e = c.domain || a.getConfig('cookieDomain'),\n              g = c.secure || a.getConfig('cookieSecure'),\n              k = ATInternet.Utils.jsonSerialize(b),\n              k = b.name + '=' + h(k),\n              k = k + (c.path && 'string' === typeof c.path ? ';path=' + c.path : ''),\n              k = k + (e && 'string' === typeof e ? ';domain=' + e : '') + (g && 'boolean' === typeof g ? ';secure' : '');\n          'function' === typeof f.toUTCString ? k += ';expires=' + f.toUTCString() : 'number' === typeof f && (k += ';max-age=' + f.toString());\n          document.cookie = k;\n          this.getData(b.name) && (d = !0);\n        }\n\n        return d;\n      };\n    };\n\n    b = c ? new function () {\n      var a = function a(_a) {\n        var b = +new Date(),\n            c = !1,\n            d;\n        _a.options && ('undefined' !== typeof _a.options.expires ? d = _a.options.expires : (_a = _a.options.end || {}, 'function' === typeof _a.getTime ? d = _a.getTime() : 'number' === typeof _a && (d = b + 1e3 * _a)));\n        'number' === typeof d && b >= d && (c = !0);\n        return {\n          itemToDelete: c,\n          timestamp: d\n        };\n      },\n          b = function b(a) {\n        var b = !1;\n\n        try {\n          localStorage.removeItem(a), b = !0;\n        } catch (d) {}\n\n        return b;\n      };\n\n      this.getData = function (d) {\n        var c = null,\n            f = localStorage.getItem(d);\n\n        if (f) {\n          var f = l(f),\n              e = ATInternet.Utils.jsonParse(f);\n          e && 'object' === typeof e ? a(e).itemToDelete && b(d) || (delete e.options.expires, c = ATInternet.Utils.jsonSerialize(e)) : c = f;\n        }\n\n        return c;\n      };\n\n      this.setData = function (d) {\n        var c = !1;\n\n        if (d.name && 'string' === typeof d.name) {\n          var f = a(d);\n          'number' === typeof f.timestamp && (d.options.expires = f.timestamp);\n          var e = ATInternet.Utils.jsonSerialize(d);\n          if (f.itemToDelete) c = b(d.name);else try {\n            localStorage.setItem(d.name, h(e)), c = !0;\n          } catch (g) {}\n        }\n\n        return c;\n      };\n    }() : new e();\n\n    var f = function f(d, c) {\n      var f = !1;\n      d && 'object' === typeof d && (c || ATInternet.Utils.consent && !a.getConfig('disableCookie') && !a.getConfig('disableStorage')) && (f = b.setData(d));\n      return f;\n    },\n        n = function n(a, b, d) {\n      a = {\n        name: a,\n        val: b\n      };\n      d && d.session && 'number' === typeof d.session && (d.end = d.session);\n      a.options = d || {};\n      return a;\n    },\n        r = function r(d) {\n      var c = null,\n          f = null;\n      a.getConfig('disableCookie') || a.getConfig('disableStorage') || !d || 'string' !== typeof d || (f = b.getData(d));\n      (d = f) && (c = ATInternet.Utils.jsonParse(d));\n      return c;\n    },\n        q = function q(a, b) {\n      var d = ATInternet.Utils.cloneSimpleObject(a);\n      return f(d, b) ? ATInternet.Utils.jsonParse(ATInternet.Utils.jsonSerialize(a)) : null;\n    },\n        m = function m(a, b, c) {\n      if (!c && d[a]) c = d[a];else if (c = r(a)) c.options = c.options || {}, c.options.session && 'number' === typeof c.options.session && (c.options.end = c.options.session, q(c, !1)), d[a] = c;\n      return c ? b ? (a = null, !c || 'object' !== typeof c.val || c.val instanceof Array || void 0 === c.val[b] || (a = c.val[b]), a) : c.val : null;\n    },\n        p = function p(a, b, c, f, e) {\n      if (b) {\n        if (e = r(a)) !e || 'object' !== typeof e.val || e.val instanceof Array ? e = null : 'undefined' === typeof c ? delete e.val[b] : e.val[b] = c, e && (e = q(e, f));\n      } else e = e || {}, e = n(a, c, e), e = q(e, f);\n\n      return e ? (d[a] = e, e.val) : null;\n    },\n        u = function u(a, b) {\n      if (b) p(a, b, void 0, !0, null);else {\n        d[a] = void 0;\n        var c = n(a, '', {\n          end: new Date('Thu, 01 Jan 1970 00:00:00 UTC'),\n          path: '/'\n        });\n        f(c, !0);\n      }\n    };\n\n    a.storage = {};\n\n    a.storage.getAll = function () {\n      return d;\n    };\n\n    a.storage.get = g.get = function (a, b) {\n      b = !!b;\n      return a instanceof Array ? m(a[0], a[1], b) : m(a, '', b);\n    };\n\n    a.storage.getPrivate = g.getPrivate = function (b, c) {\n      b instanceof Array ? b[0] += a.getConfig('site') : b += a.getConfig('site');\n      return g.get(b, c);\n    };\n\n    a.storage.set = g.set = function (a, b, c, d) {\n      var e;\n      a instanceof Array ? (e = a[0], a = a[1], c = null) : (e = a, a = null);\n      return ATInternet.Utils.privacy.testStorageParam(e, a).toSetInStorage || d ? p(e, a, b, d, c) : null;\n    };\n\n    a.storage.setPrivate = g.setPrivate = function (b, c, d) {\n      b instanceof Array ? b[0] += a.getConfig('site') : b += a.getConfig('site');\n      return g.set(b, c, d);\n    };\n\n    a.storage.del = g.del = function (a) {\n      a instanceof Array ? u(a[0], a[1]) : u(a, '');\n    };\n\n    a.storage.delPrivate = g.delPrivate = function (b) {\n      b instanceof Array ? b[0] += a.getConfig('site') : b += a.getConfig('site');\n      g.del(b);\n    };\n\n    a.storage.cacheInvalidation = g.cacheInvalidation = function () {\n      d = {};\n    };\n  };\n\n  ATInternet.Tracker.addPlugin('Storage');\n}).call(window);\n(function () {\n  var dfltPluginCfg = {};\n  var dfltGlobalCfg = {};\n\n  ATInternet.Tracker.Plugins.Utils = function (a) {\n    var g = this,\n        k = {};\n    a.utils = {};\n\n    a.utils.getQueryStringValue = g.getQueryStringValue = function (a, c) {\n      var g = ATInternet.Utils.hashcode(c).toString();\n\n      if (!k[g]) {\n        k[g] = {};\n\n        for (var l = RegExp('[&#?]{1}([^&=#?]*)=([^&#]*)?', 'g'), e = l.exec(c); null !== e;) {\n          k[g][e[1]] = e[2], e = l.exec(c);\n        }\n      }\n\n      return k[g].hasOwnProperty(a) ? k[g][a] : null;\n    };\n\n    a.utils.manageChapters = g.manageChapters = function (b, c, g) {\n      var k = '';\n      if (b) for (var e = a.getConfig('ignoreEmptyChapterValue'), f = '', n = 1; n < parseInt(g, 10) + 1; n++) {\n        f = b[c + n] || '', k = e ? k + (f ? f + '::' : '') : k + (b.hasOwnProperty(c + n) ? f + '::' : '');\n      }\n      return k;\n    };\n\n    a.utils.getDocumentLevel = g.getDocumentLevel = function () {\n      var b = a.getConfig('documentLevel');\n\n      if (b) {\n        if (0 > b.indexOf('.')) return window[b] || document;\n        b = b.split('.');\n        return window[b[0]][b[1]] || document;\n      }\n\n      return document;\n    };\n\n    a.utils.getLocation = g.getLocation = function () {\n      return g.getDocumentLevel().location.href;\n    };\n\n    a.utils.getHostName = g.getHostName = function () {\n      return g.getDocumentLevel().location.hostname;\n    };\n\n    a.dispatchIndex = {};\n    a.dispatchStack = [];\n    a.dispatchEventFor = {};\n    var c = 0;\n\n    a.dispatchSubscribe = function (b) {\n      return a.dispatchIndex[b] ? !1 : (a.dispatchStack.push(b), a.dispatchIndex[b] = !0);\n    };\n\n    a.dispatchSubscribed = function (b) {\n      return !0 === a.dispatchIndex[b];\n    };\n\n    a.addSpecificDispatchEventFor = function (b) {\n      return a.dispatchEventFor[b] ? !1 : (a.dispatchEventFor[b] = !0, c++, !0);\n    };\n\n    a.processSpecificDispatchEventFor = function (b) {\n      a.dispatchEventFor[b] && (a.dispatchEventFor[b] = !1, c--, 0 === c && (a.dispatchEventFor = {}, a.emit('Tracker:Plugin:SpecificEvent:Exec:Complete', {\n        lvl: 'INFO'\n      })));\n    };\n\n    a.dispatch = function (b, d) {\n      var g = function g() {\n        for (var c = '', f = null; 0 < a.dispatchStack.length;) {\n          c = a.dispatchStack.pop(), 0 === a.dispatchStack.length && (f = b), a[c].onDispatch(f, d);\n        }\n\n        a.dispatchIndex = {};\n        a.delContext(void 0, 'customObject');\n      },\n          k = function k() {\n        if (a.plugins.isExecWaitingLazyloading()) a.onTrigger('Tracker:Plugin:Lazyload:Exec:Complete', function () {\n          g();\n        }, !0);else g();\n      };\n\n      if (0 === c) k();else a.onTrigger('Tracker:Plugin:SpecificEvent:Exec:Complete', function () {\n        k();\n      }, !0);\n    };\n\n    a.dispatchRedirect = function (b) {\n      var c = !0,\n          g = '',\n          k = null;\n      b && (k = null, b.hasOwnProperty('event') && (k = b.event || window.event), !ATInternet.Utils.isTabOpeningAction(k) && b.elem && a.plugins.exec('TechClicks', 'manageClick', [b.elem, k], function (a) {\n        c = a.preservePropagation;\n        g = a.elementType;\n      }), k = b.callback);\n      a.dispatch(k, g);\n      return c;\n    };\n\n    a.manageSend = function (b) {\n      if (!ATInternet.Utils.isPreview() || a.getConfig('preview')) ATInternet.Utils.isPrerender(function (a) {\n        b(a);\n      }) || b();\n    };\n\n    a.processTagObject = function (b, c, g) {\n      if ((b = a.getParam(b, !0)) && b._options.permanent) {\n        for (var k = !1, e = b._options.hitType || [], f = 0; f < e.length; f++) {\n          if (-1 !== ATInternet.Utils.arrayIndexOf(c.concat('all'), e[f])) {\n            k = !0;\n            break;\n          }\n        }\n\n        k && (g = ATInternet.Utils.completeFstLevelObj(b._value || {}, g, !0));\n      }\n\n      return g;\n    };\n\n    a.processContextObjectAndSendHit = function (b, c, g, k) {\n      var e = {\n        hitType: c.hitType,\n        encode: c.encode,\n        separator: c.separator,\n        truncate: c.truncate\n      },\n          f = a.getParam(b, !0);\n\n      if (f) {\n        for (var n = !1, r = f._options.hitType || [], q = 0; q < r.length; q++) {\n          if (-1 !== ATInternet.Utils.arrayIndexOf(c.hitType.concat('all'), r[q])) {\n            n = !0;\n            break;\n          }\n        }\n\n        n ? (n = ATInternet.Utils.cloneSimpleObject(f), n._value = ATInternet.Utils.completeFstLevelObj(n._value || {}, g, !0), a.setParam(b, n._value, e), a.manageSend(function () {\n          a.sendHit(null, [['hitType', c.hitType]], k, c.requestMethod, c.elementType);\n        }), f._options.permanent && a.setParam(b, f._value, f._options)) : (a.setParam(b, g, e), a.manageSend(function () {\n          a.sendHit(null, [['hitType', c.hitType]], k, c.requestMethod, c.elementType);\n        }), a.setParam(b, f._value, f._options));\n      } else a.setParam(b, g, e), a.manageSend(function () {\n        a.sendHit(null, [['hitType', c.hitType]], k, c.requestMethod, c.elementType);\n      });\n    };\n  };\n\n  ATInternet.Tracker.addPlugin('Utils');\n}).call(window);\n(function () {\n  var dfltPluginCfg = {\n    clicksAutoManagementEnabled: true,\n    clicksAutoManagementTimeout: 500\n  };\n  var dfltGlobalCfg = {};\n\n  ATInternet.Tracker.Plugins.TechClicks = function (a) {\n    var g = this,\n        k = ['Tracker:Hit:Sent:Ok', 'Tracker:Hit:Sent:Error', 'Tracker:Hit:Sent:NoTrack'],\n        c,\n        b,\n        d = !1;\n    a.configPlugin('TechClicks', dfltPluginCfg || {}, function (a) {\n      c = a.clicksAutoManagementEnabled;\n      b = a.clicksAutoManagementTimeout;\n    });\n\n    var h = function h(a) {\n      if (!d) switch (d = !0, a.target) {\n        case '_top':\n          window.top.location.href = a.url;\n          break;\n\n        case '_parent':\n          window.parent.location.href = a.url;\n          break;\n\n        default:\n          window.location.href = a.url;\n      }\n    },\n        l = function l(a) {\n      a.mailto ? g.timeout = setTimeout(function () {\n        window.location.href = a.mailto;\n      }, a.timeout) : a.form ? g.timeout = setTimeout(function () {\n        a.form.submit();\n      }, a.timeout) : a.url && (g.timeout = setTimeout(function () {\n        h({\n          url: a.url,\n          target: a.target\n        });\n      }, a.timeout));\n    },\n        e = function e(b) {\n      for (var c = 0; c < k.length; c++) {\n        a.onTrigger(k[c], function (a, c) {\n          b && b(c);\n        });\n      }\n    },\n        f = function f(a) {\n      for (var c, d = '_self'; a;) {\n        if (a.href && 0 === a.href.indexOf('http')) {\n          c = a.href.split('\"').join('\\\\\"');\n          d = a.target ? a.target : d;\n          break;\n        }\n\n        a = a.parentNode;\n      }\n\n      c && (e(function (a) {\n        a.details.isMultiHit || a.details.elementType !== ATInternet.Utils.CLICKS_REDIRECTION || (g.timeout && clearTimeout(g.timeout), h({\n          url: c,\n          target: d\n        }));\n      }), l({\n        url: c,\n        target: d,\n        timeout: b\n      }));\n    },\n        n = function n(a) {\n      for (var c = a; c && 'FORM' !== c.nodeName;) {\n        c = c.parentNode;\n      }\n\n      c && (e(function (a) {\n        a.details.isMultiHit || a.details.elementType !== ATInternet.Utils.CLICKS_FORM || (g.timeout && clearTimeout(g.timeout), c.submit());\n      }), l({\n        form: c,\n        timeout: b\n      }));\n    },\n        r = function r(a) {\n      for (var c = a; c && !(c.href && 0 <= c.href.indexOf('mailto:'));) {\n        c = c.parentNode;\n      }\n\n      c && (e(function (a) {\n        a.details.isMultiHit || a.details.elementType !== ATInternet.Utils.CLICKS_MAILTO || (g.timeout && clearTimeout(g.timeout), window.location.href = c.href);\n      }), l({\n        mailto: c.href,\n        timeout: b\n      }));\n    },\n        q = function q(a) {\n      for (var b = a; b;) {\n        if (b.href) {\n          if (0 <= b.href.indexOf('mailto:')) return ATInternet.Utils.CLICKS_MAILTO;\n          if (0 === b.href.indexOf('http')) return ATInternet.Utils.CLICKS_REDIRECTION;\n        } else if ('FORM' === b.nodeName) {\n          var c = a;\n          a = !1;\n          c && (b = c.tagName || '', b = b.toLowerCase(), 'form' === b ? a = !0 : (c = c.getAttribute('type') || '', c = c.toLowerCase(), 'button' === b ? 'reset' !== c && 'button' !== c && (a = !0) : 'input' === b && 'submit' === c && (a = !0)));\n          if (a) return ATInternet.Utils.CLICKS_FORM;\n          break;\n        }\n\n        b = b.parentNode;\n      }\n\n      return '';\n    };\n\n    g.isFormSubmit = function (a) {\n      for (; a;) {\n        if ('FORM' === a.nodeName) return !0;\n        a = a.parentNode;\n      }\n\n      return !1;\n    };\n\n    a.techClicks = {};\n\n    a.techClicks.manageClick = g.manageClick = function (a, b) {\n      var d = !0,\n          e = '';\n\n      if (c && a) {\n        var g;\n\n        a: {\n          for (e = a; e;) {\n            if ('function' === typeof e.getAttribute && ('_blank' === e.getAttribute('target') || 'no' === e.getAttribute('data-atclickmanagement'))) {\n              g = !0;\n              break a;\n            }\n\n            e = e.parentNode;\n          }\n\n          e = a;\n          g = window.location.href;\n\n          for (var h; e;) {\n            if ((h = e.href) && 0 <= h.indexOf('#') && g.substring(0, 0 <= g.indexOf('#') ? g.indexOf('#') : g.length) === h.substring(0, h.indexOf('#'))) {\n              g = !0;\n              break a;\n            }\n\n            e = e.parentNode;\n          }\n\n          g = !1;\n        }\n\n        e = q(a);\n\n        if (!g && e) {\n          switch (e) {\n            case ATInternet.Utils.CLICKS_MAILTO:\n              r(a);\n              d = !1;\n              break;\n\n            case ATInternet.Utils.CLICKS_FORM:\n              n(a);\n              d = !1;\n              break;\n\n            case ATInternet.Utils.CLICKS_REDIRECTION:\n              f(a), d = !1;\n          }\n\n          b && (g = b.defaultPrevented, 'function' === typeof b.isDefaultPrevented && (g = b.isDefaultPrevented()), g || b.preventDefault && b.preventDefault());\n        }\n      }\n\n      return {\n        preservePropagation: d,\n        elementType: e\n      };\n    };\n\n    a.techClicks.deactivateAutoManagement = function () {\n      c = !1;\n    };\n  };\n\n  ATInternet.Tracker.addPlugin('TechClicks');\n}).call(window);\n(function () {\n  var dfltPluginCfg = {\n    requestMethod: 'POST'\n  };\n  var dfltGlobalCfg = {};\n\n  ATInternet.Tracker.Plugins.Clicks = function (a) {\n    var g = {};\n    a.configPlugin('Clicks', dfltPluginCfg || {}, function (a) {\n      g = a;\n    });\n\n    var k = function k(a) {\n      var b = '';\n\n      switch (a) {\n        case 'exit':\n          b = 'S';\n          break;\n\n        case 'download':\n          b = 'T';\n          break;\n\n        case 'action':\n          b = 'A';\n          break;\n\n        case 'navigation':\n          b = 'N';\n      }\n\n      return b;\n    },\n        c = function c(b) {\n      return a.utils.manageChapters(b, 'chapter', 3) + (b.name ? b.name : '');\n    },\n        b = function b(_b, h) {\n      var l = {\n        p: c(_b),\n        s2: _b.level2 || '',\n        click: k(_b.type) || ''\n      },\n          e = ['click'],\n          f = a.getContext('page') || {};\n      l.pclick = c(f);\n      l.s2click = f.level2 || '';\n      if (f = _b.customObject) f = a.processTagObject('stc', e, f), l.stc = {\n        _value: ATInternet.Utils.jsonSerialize(f),\n        _options: {\n          hitType: e,\n          encode: !0,\n          separator: ',',\n          truncate: !0\n        }\n      };\n      a.sendHit(l, [['hitType', e]], _b.callback, g.requestMethod, h);\n    };\n\n    a.click = {};\n    a.clickListener = {};\n\n    a.click.send = function (d) {\n      d = d || {};\n      var c = !0,\n          l = '',\n          e = null;\n      d.hasOwnProperty('event') && (e = d.event || window.event);\n      !d.elem || 'POST' === g.requestMethod && ATInternet.Utils.isBeaconMethodAvailable() || ATInternet.Utils.isTabOpeningAction(e) || (l = a.techClicks.manageClick(d.elem, e), c = l.preservePropagation, l = l.elementType);\n      b(d, l);\n      return c;\n    };\n\n    a.clickListener.send = function (d) {\n      d = d || {};\n\n      if (d.elem) {\n        var c = 'click',\n            l = '';\n        a.plugins.exec('TechClicks', 'isFormSubmit', [d.elem], function (a) {\n          c = a ? 'submit' : 'click';\n        });\n        ATInternet.Utils.addEvtListener(d.elem, c, function (e) {\n          ;\n          'POST' === g.requestMethod && ATInternet.Utils.isBeaconMethodAvailable() || ATInternet.Utils.isTabOpeningAction(e) || (l = a.techClicks.manageClick(d.elem, e).elementType);\n          b(d, l);\n        });\n      }\n    };\n\n    a.click.set = function (b) {\n      b = b || {};\n      a.dispatchSubscribe('click');\n      a.setContext('click', {\n        name: c(b),\n        level2: b.level2 || '',\n        customObject: b.customObject\n      });\n      a.setParam('click', k(b.type) || '', {\n        hitType: ['click']\n      });\n    };\n\n    a.click.onDispatch = function (b, h) {\n      var l = ['click'],\n          e = a.getContext('click') || {},\n          f = a.getContext('page') || {};\n      a.setParam('pclick', c(f), {\n        hitType: l\n      });\n      a.setParam('s2click', f.level2 || '', {\n        hitType: l\n      });\n      a.setParam('p', e.name, {\n        hitType: l\n      });\n      a.setParam('s2', e.level2, {\n        hitType: l\n      });\n      (e = e.customObject) ? a.processContextObjectAndSendHit('stc', {\n        hitType: l,\n        encode: !0,\n        separator: ',',\n        truncate: !0,\n        requestMethod: g.requestMethod,\n        elementType: h\n      }, e, b) : a.manageSend(function () {\n        a.sendHit(null, [['hitType', l]], b, g.requestMethod, h);\n      });\n      a.delContext('click');\n    };\n  };\n\n  ATInternet.Tracker.addPlugin('Clicks');\n}).call(window);\n(function () {\n  var dfltPluginCfg = {\n    domainAttribution: true\n  };\n  var dfltGlobalCfg = {\n    redirectionLifetime: 30\n  };\n\n  ATInternet.Tracker.Plugins.ContextVariables = function (a) {\n    var g = '',\n        k = null,\n        c,\n        b = '',\n        d = '',\n        h = {};\n    a.configPlugin('ContextVariables', dfltPluginCfg || {}, function (a) {\n      h = a;\n    });\n    a.setConfig('redirectionLifetime', dfltGlobalCfg.redirectionLifetime, !0);\n\n    var l = function l(b, f) {\n      var d = null;\n      a.plugins.exec('Storage', b, f, function (a) {\n        d = a;\n      });\n      return d;\n    },\n        e = function e() {\n      a.setParam('hl', function () {\n        var a = new Date();\n        return a.getHours() + 'x' + a.getMinutes() + 'x' + a.getSeconds();\n      }, {\n        permanent: !0,\n        hitType: ['all']\n      });\n    },\n        f = function f(a) {\n      ;\n      (a = c ? c : 'acc_dir' === g ? '' : null !== g ? g : 'acc_dir' === k ? '' : k ? k : a ? a.referrer : '') && (a = a.replace(/[<>]/g, '').substring(0, 1600).replace(/&/g, '$'));\n      return a;\n    };\n\n    a.plugins.waitForDependencies(['Storage', 'Utils'], function () {\n      b = 'set' + (h.domainAttribution ? '' : 'Private');\n      d = 'get' + (h.domainAttribution ? '' : 'Private');\n      var n = a.utils.getLocation();\n      g = a.utils.getQueryStringValue('xtref', n);\n      void 0 === g && (g = '');\n      c = a.getContext('forcedReferer');\n\n      if (a.getConfig('redirect')) {\n        var n = a.utils.getDocumentLevel(),\n            n = c ? c : null !== g ? g : n ? n.referrer : 'acc_dir',\n            r;\n\n        if (r = n) {\n          r = {\n            path: '/',\n            end: a.getConfig('redirectionLifetime')\n          };\n          var q = l(d, ['atredir']);\n          null !== q ? r = 'object' === typeof q && !(q instanceof Array) : (l(b, ['atredir', {}, r]), r = !0);\n        }\n\n        r && l(b, [['atredir', 'ref'], n]);\n      } else {\n        k = l(d, [['atredir', 'ref']]);\n        l('del', [['atredir', 'ref']]);\n        a.setParam('vtag', a.version, {\n          permanent: !0,\n          hitType: ['all']\n        });\n        a.setParam('ptag', 'js', {\n          permanent: !0,\n          hitType: ['all']\n        });\n        n = '';\n\n        try {\n          n += window.screen.width + 'x' + window.screen.height + 'x' + window.screen.pixelDepth + 'x' + window.screen.colorDepth;\n        } catch (m) {}\n\n        a.setParam('r', n, {\n          permanent: !0,\n          hitType: ['all']\n        });\n        n = '';\n        window.innerWidth ? n += window.innerWidth + 'x' + window.innerHeight : document.body && document.body.offsetWidth && (n += document.body.offsetWidth + 'x' + document.body.offsetHeight);\n        a.setParam('re', n, {\n          permanent: !0,\n          hitType: ['all']\n        });\n        e();\n        window.navigator && a.setParam('lng', window.navigator.language || window.navigator.userLanguage, {\n          permanent: !0,\n          hitType: ['all']\n        });\n        n = ATInternet.Utils.uuid().num(13);\n        a.setParam('idp', n, {\n          permanent: !0,\n          hitType: ['page', 'clickzone']\n        });\n        window.navigator && a.setParam('jv', window.navigator.javaEnabled() ? '1' : '0', {\n          hitType: ['page']\n        });\n        n = a.utils.getDocumentLevel();\n        a.setParam('ref', f(n), {\n          permanent: !0,\n          last: !0,\n          hitType: ['page', 'ecommerce', 'avinsights', 'events']\n        });\n      }\n\n      a.emit('ContextVariables:Ready', {\n        lvl: 'INFO'\n      });\n    });\n  };\n\n  ATInternet.Tracker.addPlugin('ContextVariables');\n}).call(window);\n(function () {\n  var dfltPluginCfg = {};\n  var dfltGlobalCfg = {};\n\n  ATInternet.Tracker.Plugins.Page = function (a) {\n    var g = ['pageId', 'chapterLabel', 'update'],\n        k = ['pid', 'pchap', 'pidt'],\n        c = ['page', 'site'],\n        b = ['f', 'x'],\n        d = function d(b) {\n      return a.utils.manageChapters(b, 'chapter', 3) + (b.name ? b.name : '');\n    },\n        h = function h(a, b, d) {\n      b ? a = b : a || 'undefined' === typeof d || (a = d);\n      return a;\n    },\n        l = function l(a, b, d) {\n      b.hasOwnProperty(d) && (a[d] = h(a[d], b[d], void 0));\n    },\n        e = function e(d, f, _e2) {\n      if (f) for (var g = 0; g < c.length; g++) {\n        if (f.hasOwnProperty(c[g]) && f[c[g]]) for (var h in f[c[g]]) {\n          f[c[g]].hasOwnProperty(h) && (_e2 ? d[b[g] + h] = f[c[g]][h] : a.setParam(b[g] + h, f[c[g]][h]));\n        }\n      }\n    },\n        f = function f(b, d, _f) {\n      if (d) {\n        var c = a.utils.manageChapters(d, 'chapter', 3);\n        c && (d.chapterLabel = c.replace(/::$/gi, ''));\n\n        for (c = 0; c < k.length; c++) {\n          d.hasOwnProperty(g[c]) && (_f ? b[k[c]] = d[g[c]] : a.setParam(k[c], d[g[c]]));\n        }\n      }\n    },\n        n = function n(b, d, f) {\n      if (d && d.keywords instanceof Array) {\n        var c = d.keywords.length;\n\n        if (0 < c) {\n          for (var e = '', g = 0; g < c; g++) {\n            e += '[' + d.keywords[g] + ']' + (g < c - 1 ? '|' : '');\n          }\n\n          f ? b.tag = e : a.setParam('tag', e);\n        }\n      }\n    },\n        r = function r(b, d, f) {\n      if (d) {\n        var c,\n            e = function e(a) {\n          return a ? a : '0';\n        };\n\n        c = '' + (e(d.category1) + '-');\n        c += e(d.category2) + '-';\n        c += e(d.category3);\n        f ? b.ptype = c : a.setParam('ptype', c);\n      }\n    },\n        q = function q(b, d, f) {\n      if (d) for (var c in d) {\n        d.hasOwnProperty(c) && 'undefined' !== typeof d[c] && (f ? b[c] = d[c] : a.setParam(c, d[c]));\n      }\n    };\n\n    a.customVars = {};\n\n    a.customVars.set = function (b) {\n      var d = a.getContext('page') || {},\n          f = d.customVars;\n\n      if (f) {\n        if (b) for (var c in b) {\n          b.hasOwnProperty(c) && (f[c] = ATInternet.Utils.completeFstLevelObj(f[c], b[c], !0));\n        }\n      } else f = b;\n\n      d.customVars = f;\n      a.setContext('page', d);\n    };\n\n    a.dynamicLabel = {};\n\n    a.dynamicLabel.set = function (b) {\n      var d = a.getContext('page') || {};\n      d.dynamicLabel = ATInternet.Utils.completeFstLevelObj(d.dynamicLabel, b, !0);\n      a.setContext('page', d);\n    };\n\n    a.tags = {};\n\n    a.tags.set = function (b) {\n      var d = a.getContext('page') || {};\n      d.tags = ATInternet.Utils.completeFstLevelObj(d.tags, b, !0);\n      a.setContext('page', d);\n    };\n\n    a.customTreeStructure = {};\n\n    a.customTreeStructure.set = function (b) {\n      var d = a.getContext('page') || {};\n      d.customTreeStructure = ATInternet.Utils.completeFstLevelObj(d.customTreeStructure, b, !0);\n      a.setContext('page', d);\n    };\n\n    a.page = {};\n\n    a.page.reset = function () {\n      a.delContext('page');\n    };\n\n    a.page.set = function (b) {\n      b = b || {};\n      a.dispatchSubscribe('page');\n      var d = a.getContext('page') || {};\n      d.name = h(d.name, b.name, '');\n      d.level2 = h(d.level2, b.level2, '');\n      l(d, b, 'chapter1');\n      l(d, b, 'chapter2');\n      l(d, b, 'chapter3');\n      d.customObject = ATInternet.Utils.completeFstLevelObj(d.customObject, b.customObject, !0);\n      a.setContext('page', d);\n    };\n\n    a.page.send = function (b) {\n      b = b || {};\n      var c = !0,\n          g = '',\n          k = {\n        p: d(b),\n        s2: b.level2 || ''\n      },\n          t = b.customObject;\n\n      if (t) {\n        var v = ['page'],\n            t = a.processTagObject('stc', v, t);\n        k.stc = {\n          _value: ATInternet.Utils.jsonSerialize(t),\n          _options: {\n            hitType: v,\n            encode: !0,\n            separator: ',',\n            truncate: !0\n          }\n        };\n      }\n\n      t = a.getContext('page') || {};\n      t.vrn && (k.vrn = t.vrn, a.delContext('page', 'vrn'));\n      v = a.getContext('InternalSearch') || {};\n      'undefined' !== typeof v.keyword && (k.mc = ATInternet.Utils.cloneSimpleObject(v.keyword), 'undefined' !== typeof v.resultPageNumber && (k.np = ATInternet.Utils.cloneSimpleObject(v.resultPageNumber)), a.delContext('InternalSearch'));\n      ATInternet.Utils.isPreview() && a.getConfig('preview') && (k.pvw = 1);\n      e(k, b.customVars, !0);\n      f(k, b.dynamicLabel, !0);\n      n(k, b.tags, !0);\n      r(k, b.customTreeStructure, !0);\n      v = a.getContext('campaigns') || {};\n      q(k, v, !0);\n      a.delContext('campaigns');\n      v = null;\n      b && b.hasOwnProperty('event') && (v = b.event || window.event);\n      !ATInternet.Utils.isTabOpeningAction(v) && b.elem && (v = a.techClicks.manageClick(b.elem, v), c = v.preservePropagation, g = v.elementType);\n      a.manageSend(function () {\n        a.sendHit(k, null, b.callback, null, g);\n      });\n      t.name = h(t.name, b.name, '');\n      t.level2 = h(t.level2, b.level2, '');\n      l(t, b, 'chapter1');\n      l(t, b, 'chapter2');\n      l(t, b, 'chapter3');\n      a.setContext('page', t);\n      return c;\n    };\n\n    a.page.onDispatch = function (b, c) {\n      var g = a.getContext('page') || {},\n          h = a.getContext('InternalSearch') || {};\n      a.setParam('p', d(g));\n      a.setParam('s2', g.level2 || '');\n      g.vrn && (a.setParam('vrn', g.vrn), a.delContext('page', 'vrn'));\n      'undefined' !== typeof h.keyword && (a.setParam('mc', ATInternet.Utils.cloneSimpleObject(h.keyword)), 'undefined' !== typeof h.resultPageNumber && a.setParam('np', ATInternet.Utils.cloneSimpleObject(h.resultPageNumber)), a.delContext('InternalSearch'));\n      ATInternet.Utils.isPreview() && a.getConfig('preview') && a.setParam('pvw', 1);\n      e(null, g.customVars, !1);\n      f(null, g.dynamicLabel, !1);\n      n(null, g.tags, !1);\n      r(null, g.customTreeStructure, !1);\n      h = a.getContext('campaigns') || {};\n      q(null, h, !1);\n      a.delContext('campaigns');\n      var k = ['page'];\n      (g = g.customObject) ? a.processContextObjectAndSendHit('stc', {\n        hitType: k,\n        encode: !0,\n        separator: ',',\n        truncate: !0,\n        elementType: c\n      }, g, b) : a.manageSend(function () {\n        a.sendHit(null, [['hitType', k]], b, null, c);\n      });\n    };\n  };\n\n  ATInternet.Tracker.addPlugin('Page');\n}).call(window);\n(function () {\n  var dfltPluginCfg = {\n    clientSideMode: 'always',\n    userIdCookieDuration: 397,\n    userIdExpirationMode: 'fixed',\n    optOut: 'OPT-OUT',\n    userIdStorageName: 'atuserid',\n    userIdHitName: 'idclient',\n    itpCompliant: false,\n    baseDomain: ''\n  };\n  var dfltGlobalCfg = {};\n\n  ATInternet.Tracker.Plugins.ClientSideUserId = function (a) {\n    var g = {},\n        k = !1,\n        c = !1,\n        b = null,\n        d = -1;\n    a.configPlugin('ClientSideUserId', dfltPluginCfg || {}, function (a) {\n      g = a;\n    });\n\n    var h = function h() {\n      var b = g.baseDomain;\n\n      if (!b) {\n        var f = a.getConfig('cookieDomain');\n        f && (b = f, '.' === b.charAt(0) && (b = b.substring(1, b.length)));\n      }\n\n      var f = a.builder.getCollectDomain(),\n          d = a.utils.getHostName();\n      return !!(b && f && d && -1 !== f.indexOf(b) && -1 !== d.indexOf(b));\n    },\n        l = function l() {\n      b = {\n        contextUserId: void 0,\n        storageUserId: null,\n        finalUserId: null,\n        isFromTrackerContext: !1,\n        forceStorage: !1,\n        optout: {\n          isOptedout: !1,\n          fromStorage: !1\n        }\n      };\n    },\n        e = function e() {\n      if ('relative' === g.userIdExpirationMode || 'fixed' === g.userIdExpirationMode && null === b.storageUserId || b.isFromTrackerContext) {\n        var f = new Date();\n        f.setTime(f.getTime() + 864e5 * g.userIdCookieDuration);\n        a.storage.set(g.userIdStorageName, b.finalUserId, {\n          end: f,\n          path: '/'\n        }, b.forceStorage);\n        ATInternet.Utils.consent && !b.isFromTrackerContext && b.finalUserId !== a.storage.get(g.userIdStorageName, !0) && a.setParam(g.userIdHitName, b.finalUserId + '-NO', {\n          multihit: !0,\n          permanent: !0,\n          hitType: ['all']\n        });\n      }\n    },\n        f = function f() {\n      a.setParam(g.userIdHitName, b.finalUserId, {\n        multihit: !0,\n        permanent: !0,\n        hitType: ['all']\n      });\n      e();\n    },\n        n = function n() {\n      l();\n      var d = !1;\n      null === ATInternet.Utils.optedOut ? a.storage.get(g.userIdStorageName, !0) === g.optOut ? d = ATInternet.Utils.optedOut = !0 : ATInternet.Utils.optedOut = !1 : !1 === ATInternet.Utils.optedOut && (a.getParam(g.userIdHitName) === g.optOut && a.delParam(g.userIdHitName), a.storage.get(g.userIdStorageName, !0) === g.optOut && a.storage.del(g.userIdStorageName));\n      b.optout.isOptedout = ATInternet.Utils.optedOut;\n      b.optout.fromStorage = d;\n      b.contextUserId = a.getContext('userIdentifier');\n      b.storageUserId = a.storage.get('atuserid', !0);\n      d = !1;\n\n      if ('required' === g.clientSideMode) {\n        var e = '';\n        window.navigator && (e = window.navigator.userAgent);\n        if (/Safari/.test(e) && !/Chrome/.test(e) || /iPhone|iPod|iPad/.test(e)) d = !0;\n      } else 'always' === g.clientSideMode && (d = !0);\n\n      c = d;\n      d = !1;\n      if (!a.getConfig('forceHttp') && g.itpCompliant && 'undefined' === typeof b.contextUserId && !b.optout.isOptedout) switch (g.clientSideMode) {\n        case 'never':\n          d = h();\n          break;\n\n        case 'always':\n        case 'required':\n          ;\n          c && null !== b.storageUserId || (d = h());\n      }\n      ;\n      (k = d) || !c && !b.optout.isOptedout && 'undefined' === typeof b.contextUserId ? a.setConfig('userIdOrigin', 'server') : (a.setConfig('userIdOrigin', 'client'), b.isFromTrackerContext = !1, b.forceStorage = !1, b.optout.isOptedout ? (b.finalUserId = g.optOut, b.isFromTrackerContext = !b.optout.fromStorage, b.forceStorage = !0) : a.getConfig('disableCookie') || a.getConfig('disableStorage') ? (b.finalUserId = a.getParam(g.userIdHitName), b.isFromTrackerContext = !0) : 'undefined' !== typeof b.contextUserId ? (b.finalUserId = b.contextUserId, b.isFromTrackerContext = !0) : b.finalUserId = null !== b.storageUserId ? b.storageUserId : ATInternet.Utils.uuid().v4(), f());\n    },\n        r = function r(a) {\n      a && (a = a.detail) && 'clientsideuserid' === a.name && a.id === d && n();\n    };\n\n    (function () {\n      a.plugins.waitForDependencies(['Storage', 'Utils'], function () {\n        var a = ATInternet.Utils.uuid();\n        d = parseInt(a.num(8));\n        ATInternet.Utils.removeOptOutEvent(r);\n        ATInternet.Utils.addOptOutEvent(d, r);\n        n();\n      });\n    })();\n\n    a.clientSideUserId = {};\n\n    a.clientSideUserId.set = function (a) {\n      b.optout.isOptedout || (b.finalUserId = a, b.isFromTrackerContext = !0, b.forceStorage = !1, f());\n    };\n\n    a.clientSideUserId.store = function () {\n      b.finalUserId = a.getParam(g.userIdHitName) || b.finalUserId;\n      null !== b.finalUserId && b.finalUserId !== ATInternet.Utils.privacy.CONSENTNO && b.finalUserId !== b.storageUserId && (b.isFromTrackerContext = !0, b.forceStorage = !0, e());\n    };\n\n    a.clientSideUserId.get = function () {\n      b.finalUserId = a.getParam(g.userIdHitName) || b.finalUserId;\n      return b.finalUserId;\n    };\n\n    a.clientSideUserId.clear = function () {\n      l();\n      a.delParam(g.userIdHitName);\n      a.storage.del(g.userIdStorageName);\n    };\n  };\n\n  ATInternet.Tracker.addPlugin('ClientSideUserId');\n}).call(window);\n(function () {\n  var dfltPluginCfg = {\n    authorityStorageName: 'atauthority',\n    authorities: {\n      default: {\n        name: 'default',\n        optin: {\n          name: 'optin',\n          storageDuration: 397,\n          trackerSettings: {\n            disableStorage: false,\n            disableCookie: false\n          },\n          add: {\n            buffer: {\n              visitorConsent: {\n                param: 'vc',\n                value: true\n              },\n              visitorMode: {\n                param: 'vm',\n                value: 'optin'\n              }\n            }\n          },\n          include: {\n            storage: '*',\n            buffer: '*'\n          }\n        },\n        optout: {\n          name: 'optout',\n          storageDuration: 397,\n          trackerSettings: {\n            disableStorage: false,\n            disableCookie: false\n          },\n          add: {\n            buffer: {\n              visitorConsent: {\n                param: 'vc',\n                value: false\n              },\n              visitorMode: {\n                param: 'vm',\n                value: 'optout'\n              }\n            }\n          },\n          include: {\n            storage: ['atuserid', 'atauthority'],\n            buffer: ['s', 'idclient', 'ts', 'vc', 'vm', 'click', 'type', 'olt', 'cn', 'mh']\n          }\n        },\n        'no-consent': {\n          name: 'no-consent',\n          storageDuration: 0,\n          trackerSettings: {\n            disableStorage: true,\n            disableCookie: true\n          },\n          add: {\n            buffer: {\n              visitorConsent: {\n                param: 'vc',\n                value: false\n              },\n              visitorMode: {\n                param: 'vm',\n                value: 'no-consent'\n              },\n              idclient: {\n                param: 'idclient',\n                value: 'Consent-NO'\n              }\n            }\n          },\n          include: {\n            storage: [],\n            buffer: ['s', 'idclient', 'ts', 'vc', 'vm', 'click', 'type', 'olt', 'cn', 'mh']\n          }\n        },\n        random: {\n          name: 'random',\n          storageDuration: 0,\n          trackerSettings: {\n            disableStorage: false,\n            disableCookie: false\n          },\n          add: {\n            buffer: {\n              visitorConsent: {\n                param: 'vc',\n                value: false\n              },\n              visitorMode: {\n                param: 'vm',\n                value: 'before-consent'\n              }\n            }\n          },\n          include: {\n            storage: [],\n            buffer: ['s', 'idclient', 'p', 'vtag', 'ptag', 'ts', 'vc', 'vm', 'ref', 'xto', 'click', 'type', 'olt', 'cn', 'mh']\n          }\n        }\n      },\n      cnil: {\n        name: 'cnil',\n        exempt: {\n          name: 'exempt',\n          storageDuration: 397,\n          trackerSettings: {\n            disableStorage: false,\n            disableCookie: false\n          },\n          add: {\n            buffer: {\n              visitorConsent: {\n                param: 'vc',\n                value: false\n              },\n              visitorMode: {\n                param: 'vm',\n                value: 'exempt'\n              }\n            }\n          },\n          include: {\n            storage: ['atuserid', 'atauthority'],\n            buffer: ['s', 'idclient', 'p', 'vtag', 'ptag', 'ts', 'vc', 'vm', 'click', 'type', 'olt', 'cn', 'mh']\n          }\n        }\n      }\n    },\n    parametersToInclude: ['click', 's2', 'p', 'x1', 'pclick', 's2click', 'f1', 'x2', 'f2', 'stc', 'ref', 'page_url', 'medium']\n  };\n  var dfltGlobalCfg = {};\n\n  ATInternet.Tracker.Plugins.Privacy = function (a) {\n    var g = function g(c) {\n      function b() {\n        if (r && q) {\n          var b = new Date();\n          b.setTime(b.getTime() + 864e5 * q.storageDuration);\n          a.storage.set(p.authorityStorageName, {\n            authority_name: r.name,\n            visitor_mode: q.name\n          }, {\n            end: b,\n            path: '/'\n          });\n        }\n      }\n\n      function d(d) {\n        q && (0 < q.storageDuration ? d ? b() : (d = a.storage.get(p.authorityStorageName, !0), null === d ? b() : 'object' === typeof d && (d.authority_name === r.name && d.visitor_mode === q.name || b())) : a.storage.del(p.authorityStorageName));\n      }\n\n      function g() {\n        ATInternet.Utils.privacy.processStorageParams(function (b) {\n          a.storage.del(b);\n          a.storage.delPrivate(b);\n        }, function (b) {\n          return a.storage.get(b, !0) || a.storage.getPrivate(b, !0);\n        }, function (b) {\n          return a.storage.getAll(b, !0) || a.storage.getAllPrivate(b, !0);\n        });\n      }\n\n      function k() {\n        ATInternet.Utils.privacy.processBufferParams(function (b) {\n          a.delParam(b);\n        }, function () {\n          return a.getParams([]);\n        }, function (b, d, f) {\n          a.setParam(b, d, f);\n        });\n      }\n\n      function e(a, b, d) {\n        if (q && q.include) {\n          q.include[b] instanceof Array ? a instanceof Array ? q.include[b] = q.include[b].concat(a) : a && q.include[b].push(a) : q.include[b] !== ATInternet.Utils.privacy.ALL && (a instanceof Array ? q.include[b] = a : a && (q.include[b] = [a]));\n          a = m;\n          var f = b + 'Params',\n              c = q.include[b];\n          b = [];\n\n          for (var e = {}, g = 0; g < c.length; g++) {\n            if ('object' === typeof c[g]) for (var h in c[g]) {\n              c[g].hasOwnProperty(h) && (e[h] = (e[h] || []).concat(c[g][h]));\n            } else b.push(c[g]);\n          }\n\n          for (var k in e) {\n            e.hasOwnProperty(k) && (h = {}, h[k] = e[k], b.push(h));\n          }\n\n          a[f] = b;\n          ATInternet.Utils.privacy.setParameters(m);\n          d && d();\n        }\n      }\n\n      function f(b, f, c, e) {\n        if (p.authorities && p.authorities[b] && p.authorities[b][f]) {\n          c && a.clientSideUserId.clear();\n          e && n.setVisitorOptin();\n          r = p.authorities[b];\n          if (q = r[f]) for (var w in q.trackerSettings) {\n            q.trackerSettings.hasOwnProperty(w) && a.setConfig(w, q.trackerSettings[w]);\n          }\n          if (q && q.add) for (var x in q.add.buffer) {\n            q.add.buffer.hasOwnProperty(x) && a.setParam(q.add.buffer[x].param, q.add.buffer[x].value, {\n              multihit: !0,\n              permanent: !0,\n              hitType: ['all']\n            });\n          }\n\n          if (q && q.include) {\n            for (var y in q.include) {\n              q.include.hasOwnProperty(y) && (b = q.include[y] instanceof Array ? q.include[y] : [q.include[y]], m[y + 'Params'] = b);\n            }\n\n            ATInternet.Utils.privacy.setParameters(m);\n            d(!1);\n          }\n\n          0 < p.parametersToInclude.length && (n.extendIncludeStorage(p.parametersToInclude), n.extendIncludeBuffer(p.parametersToInclude));\n          g();\n          k();\n        }\n      }\n\n      var n = this,\n          r = null,\n          q = null,\n          m = {\n        storageParams: [],\n        bufferParams: []\n      },\n          p = c;\n\n      n.setVisitorOptout = function () {\n        ATInternet.Utils.consentReceived(!0);\n        f('default', 'optout', !1, !1);\n        ATInternet.Utils.userOptedOut();\n      };\n\n      n.setVisitorOptin = function () {\n        ATInternet.Utils.consentReceived(!0);\n        a.clientSideUserId.store();\n        f('default', 'optin', !1, !1);\n        ATInternet.Utils.userOptedIn();\n      };\n\n      n.setVisitorRandomID = function () {\n        ATInternet.Utils.consentReceived(!1);\n        f('default', 'random', !1, !1);\n        ATInternet.Utils.userOptedIn();\n      };\n\n      n.setVisitorMode = function (a, b, d) {\n        var c = !0;\n        'cnil' === a && 'exempt' === b ? c = !1 : 'boolean' === typeof d && (c = d);\n        c && r && q && (c = a !== r.name || b !== q.name);\n        f(a, b, c, !0);\n      };\n\n      n.getAuthority = function () {\n        return r;\n      };\n\n      n.getVisitorMode = function () {\n        return q;\n      };\n\n      n.addAuthority = function (a) {\n        a && 'object' === typeof a && (p.authorities = p.authorities || {}, p.authorities[a.name] = a);\n      };\n\n      n.extendIncludeStorage = function (a) {\n        e(a, 'storage', g);\n      };\n\n      n.extendIncludeBuffer = function (a) {\n        e(a, 'buffer', k);\n      };\n\n      n.updateStorageDuration = function (a) {\n        q && (q.storageDuration = a, d(!0));\n      };\n\n      (function () {\n        var b = a.storage.get([p.authorityStorageName, 'authority_name'], !0),\n            d = a.storage.get([p.authorityStorageName, 'visitor_mode'], !0);\n        b && d && ('default' === b ? 'optin' === d ? n.setVisitorOptin() : 'optout' === d ? n.setVisitorOptout() : 'random' === d ? n.setVisitorRandomID() : n.setVisitorMode(b, d) : n.setVisitorMode(b, d));\n      })();\n    },\n        k = null;\n\n    a.privacy = {\n      setVisitorOptout: function setVisitorOptout() {},\n      setVisitorOptin: function setVisitorOptin() {},\n      setVisitorRandomID: function setVisitorRandomID() {},\n      setVisitorMode: function setVisitorMode() {},\n      getAuthority: function getAuthority() {},\n      getVisitorMode: function getVisitorMode() {},\n      addAuthority: function addAuthority() {},\n      extendIncludeStorage: function extendIncludeStorage() {},\n      extendIncludeBuffer: function extendIncludeBuffer() {},\n      updateStorageDuration: function updateStorageDuration() {}\n    };\n\n    (function () {\n      a.plugins.waitForDependencies(['Storage', 'Utils', 'ClientSideUserId'], function () {\n        var c = null;\n        a.configPlugin('Privacy', dfltPluginCfg || {}, function (a) {\n          c = ATInternet.Utils.cloneSimpleObject(a);\n        });\n        null !== c && (k = new g(c), a.privacy.setVisitorOptout = k.setVisitorOptout, a.privacy.setVisitorOptin = k.setVisitorOptin, a.privacy.setVisitorRandomID = k.setVisitorRandomID, a.privacy.setVisitorMode = k.setVisitorMode, a.privacy.getAuthority = k.getAuthority, a.privacy.getVisitorMode = k.getVisitorMode, a.privacy.addAuthority = k.addAuthority, a.privacy.extendIncludeStorage = k.extendIncludeStorage, a.privacy.extendIncludeBuffer = k.extendIncludeBuffer, a.privacy.updateStorageDuration = k.updateStorageDuration);\n      });\n    })();\n  };\n\n  ATInternet.Tracker.addPlugin('Privacy');\n}).call(window);\n\nif (typeof window.ATInternet.onTrackerLoad === 'function') {\n  window.ATInternet.onTrackerLoad();\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/next/dist/compiled/webpack/module.js */ \"../node_modules/next/dist/compiled/webpack/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/ATInternetTracking/smarttag.js\n");

/***/ })

}]);